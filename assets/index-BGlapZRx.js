var sx = Object.defineProperty;
var kg = (e) => {
  throw TypeError(e);
};
var ax = (e, t, r) =>
  t in e
    ? sx(e, t, { enumerable: !0, configurable: !0, writable: !0, value: r })
    : (e[t] = r);
var Eg = (e, t, r) => ax(e, typeof t != 'symbol' ? t + '' : t, r),
  Jf = (e, t, r) => t.has(e) || kg('Cannot ' + r);
var Te = (e, t, r) => (
    Jf(e, t, 'read from private field'), r ? r.call(e) : t.get(e)
  ),
  vn = (e, t, r) =>
    t.has(e)
      ? kg('Cannot add the same private member more than once')
      : t instanceof WeakSet
        ? t.add(e)
        : t.set(e, r),
  nr = (e, t, r, n) => (
    Jf(e, t, 'write to private field'), n ? n.call(e, r) : t.set(e, r), r
  ),
  Al = (e, t, r) => (Jf(e, t, 'access private method'), r);
function lx(e, t) {
  for (var r = 0; r < t.length; r++) {
    const n = t[r];
    if (typeof n != 'string' && !Array.isArray(n)) {
      for (const i in n)
        if (i !== 'default' && !(i in e)) {
          const o = Object.getOwnPropertyDescriptor(n, i);
          o &&
            Object.defineProperty(
              e,
              i,
              o.get ? o : { enumerable: !0, get: () => n[i] },
            );
        }
    }
  }
  return Object.freeze(
    Object.defineProperty(e, Symbol.toStringTag, { value: 'Module' }),
  );
}
(function () {
  const t = document.createElement('link').relList;
  if (t && t.supports && t.supports('modulepreload')) return;
  for (const i of document.querySelectorAll('link[rel="modulepreload"]')) n(i);
  new MutationObserver((i) => {
    for (const o of i)
      if (o.type === 'childList')
        for (const s of o.addedNodes)
          s.tagName === 'LINK' && s.rel === 'modulepreload' && n(s);
  }).observe(document, { childList: !0, subtree: !0 });
  function r(i) {
    const o = {};
    return (
      i.integrity && (o.integrity = i.integrity),
      i.referrerPolicy && (o.referrerPolicy = i.referrerPolicy),
      i.crossOrigin === 'use-credentials'
        ? (o.credentials = 'include')
        : i.crossOrigin === 'anonymous'
          ? (o.credentials = 'omit')
          : (o.credentials = 'same-origin'),
      o
    );
  }
  function n(i) {
    if (i.ep) return;
    i.ep = !0;
    const o = r(i);
    fetch(i.href, o);
  }
})();
var Pl =
  typeof globalThis < 'u'
    ? globalThis
    : typeof window < 'u'
      ? window
      : typeof global < 'u'
        ? global
        : typeof self < 'u'
          ? self
          : {};
function Ph(e) {
  return e && e.__esModule && Object.prototype.hasOwnProperty.call(e, 'default')
    ? e.default
    : e;
}
var sv = { exports: {} },
  bc = {},
  av = { exports: {} },
  Ke = {}; /**
 * @license React
 * react.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var rl = Symbol.for('react.element'),
  ux = Symbol.for('react.portal'),
  cx = Symbol.for('react.fragment'),
  fx = Symbol.for('react.strict_mode'),
  dx = Symbol.for('react.profiler'),
  px = Symbol.for('react.provider'),
  hx = Symbol.for('react.context'),
  mx = Symbol.for('react.forward_ref'),
  gx = Symbol.for('react.suspense'),
  _x = Symbol.for('react.memo'),
  yx = Symbol.for('react.lazy'),
  Tg = Symbol.iterator;
function vx(e) {
  return e === null || typeof e != 'object'
    ? null
    : ((e = (Tg && e[Tg]) || e['@@iterator']),
      typeof e == 'function' ? e : null);
}
var lv = {
    isMounted: function () {
      return !1;
    },
    enqueueForceUpdate: function () {},
    enqueueReplaceState: function () {},
    enqueueSetState: function () {},
  },
  uv = Object.assign,
  cv = {};
function ws(e, t, r) {
  (this.props = e),
    (this.context = t),
    (this.refs = cv),
    (this.updater = r || lv);
}
ws.prototype.isReactComponent = {};
ws.prototype.setState = function (e, t) {
  if (typeof e != 'object' && typeof e != 'function' && e != null)
    throw Error(
      'setState(...): takes an object of state variables to update or a function which returns an object of state variables.',
    );
  this.updater.enqueueSetState(this, e, t, 'setState');
};
ws.prototype.forceUpdate = function (e) {
  this.updater.enqueueForceUpdate(this, e, 'forceUpdate');
};
function fv() {}
fv.prototype = ws.prototype;
function qh(e, t, r) {
  (this.props = e),
    (this.context = t),
    (this.refs = cv),
    (this.updater = r || lv);
}
var Ih = (qh.prototype = new fv());
Ih.constructor = qh;
uv(Ih, ws.prototype);
Ih.isPureReactComponent = !0;
var Cg = Array.isArray,
  dv = Object.prototype.hasOwnProperty,
  Fh = { current: null },
  pv = { key: !0, ref: !0, __self: !0, __source: !0 };
function hv(e, t, r) {
  var n,
    i = {},
    o = null,
    s = null;
  if (t != null)
    for (n in (t.ref !== void 0 && (s = t.ref),
    t.key !== void 0 && (o = '' + t.key),
    t))
      dv.call(t, n) && !pv.hasOwnProperty(n) && (i[n] = t[n]);
  var l = arguments.length - 2;
  if (l === 1) i.children = r;
  else if (1 < l) {
    for (var c = Array(l), h = 0; h < l; h++) c[h] = arguments[h + 2];
    i.children = c;
  }
  if (e && e.defaultProps)
    for (n in ((l = e.defaultProps), l)) i[n] === void 0 && (i[n] = l[n]);
  return {
    $$typeof: rl,
    type: e,
    key: o,
    ref: s,
    props: i,
    _owner: Fh.current,
  };
}
function bx(e, t) {
  return {
    $$typeof: rl,
    type: e.type,
    key: t,
    ref: e.ref,
    props: e.props,
    _owner: e._owner,
  };
}
function Rh(e) {
  return typeof e == 'object' && e !== null && e.$$typeof === rl;
}
function wx(e) {
  var t = { '=': '=0', ':': '=2' };
  return (
    '$' +
    e.replace(/[=:]/g, function (r) {
      return t[r];
    })
  );
}
var Ag = /\/+/g;
function Zf(e, t) {
  return typeof e == 'object' && e !== null && e.key != null
    ? wx('' + e.key)
    : t.toString(36);
}
function su(e, t, r, n, i) {
  var o = typeof e;
  (o === 'undefined' || o === 'boolean') && (e = null);
  var s = !1;
  if (e === null) s = !0;
  else
    switch (o) {
      case 'string':
      case 'number':
        s = !0;
        break;
      case 'object':
        switch (e.$$typeof) {
          case rl:
          case ux:
            s = !0;
        }
    }
  if (s)
    return (
      (s = e),
      (i = i(s)),
      (e = n === '' ? '.' + Zf(s, 0) : n),
      Cg(i)
        ? ((r = ''),
          e != null && (r = e.replace(Ag, '$&/') + '/'),
          su(i, t, r, '', function (h) {
            return h;
          }))
        : i != null &&
          (Rh(i) &&
            (i = bx(
              i,
              r +
                (!i.key || (s && s.key === i.key)
                  ? ''
                  : ('' + i.key).replace(Ag, '$&/') + '/') +
                e,
            )),
          t.push(i)),
      1
    );
  if (((s = 0), (n = n === '' ? '.' : n + ':'), Cg(e)))
    for (var l = 0; l < e.length; l++) {
      o = e[l];
      var c = n + Zf(o, l);
      s += su(o, t, r, c, i);
    }
  else if (((c = vx(e)), typeof c == 'function'))
    for (e = c.call(e), l = 0; !(o = e.next()).done; )
      (o = o.value), (c = n + Zf(o, l++)), (s += su(o, t, r, c, i));
  else if (o === 'object')
    throw (
      ((t = String(e)),
      Error(
        'Objects are not valid as a React child (found: ' +
          (t === '[object Object]'
            ? 'object with keys {' + Object.keys(e).join(', ') + '}'
            : t) +
          '). If you meant to render a collection of children, use an array instead.',
      ))
    );
  return s;
}
function ql(e, t, r) {
  if (e == null) return e;
  var n = [],
    i = 0;
  return (
    su(e, n, '', '', function (o) {
      return t.call(r, o, i++);
    }),
    n
  );
}
function Sx(e) {
  if (e._status === -1) {
    var t = e._result;
    (t = t()),
      t.then(
        function (r) {
          (e._status === 0 || e._status === -1) &&
            ((e._status = 1), (e._result = r));
        },
        function (r) {
          (e._status === 0 || e._status === -1) &&
            ((e._status = 2), (e._result = r));
        },
      ),
      e._status === -1 && ((e._status = 0), (e._result = t));
  }
  if (e._status === 1) return e._result.default;
  throw e._result;
}
var _n = { current: null },
  au = { transition: null },
  xx = {
    ReactCurrentDispatcher: _n,
    ReactCurrentBatchConfig: au,
    ReactCurrentOwner: Fh,
  };
function mv() {
  throw Error('act(...) is not supported in production builds of React.');
}
Ke.Children = {
  map: ql,
  forEach: function (e, t, r) {
    ql(
      e,
      function () {
        t.apply(this, arguments);
      },
      r,
    );
  },
  count: function (e) {
    var t = 0;
    return (
      ql(e, function () {
        t++;
      }),
      t
    );
  },
  toArray: function (e) {
    return (
      ql(e, function (t) {
        return t;
      }) || []
    );
  },
  only: function (e) {
    if (!Rh(e))
      throw Error(
        'React.Children.only expected to receive a single React element child.',
      );
    return e;
  },
};
Ke.Component = ws;
Ke.Fragment = cx;
Ke.Profiler = dx;
Ke.PureComponent = qh;
Ke.StrictMode = fx;
Ke.Suspense = gx;
Ke.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = xx;
Ke.act = mv;
Ke.cloneElement = function (e, t, r) {
  if (e == null)
    throw Error(
      'React.cloneElement(...): The argument must be a React element, but you passed ' +
        e +
        '.',
    );
  var n = uv({}, e.props),
    i = e.key,
    o = e.ref,
    s = e._owner;
  if (t != null) {
    if (
      (t.ref !== void 0 && ((o = t.ref), (s = Fh.current)),
      t.key !== void 0 && (i = '' + t.key),
      e.type && e.type.defaultProps)
    )
      var l = e.type.defaultProps;
    for (c in t)
      dv.call(t, c) &&
        !pv.hasOwnProperty(c) &&
        (n[c] = t[c] === void 0 && l !== void 0 ? l[c] : t[c]);
  }
  var c = arguments.length - 2;
  if (c === 1) n.children = r;
  else if (1 < c) {
    l = Array(c);
    for (var h = 0; h < c; h++) l[h] = arguments[h + 2];
    n.children = l;
  }
  return { $$typeof: rl, type: e.type, key: i, ref: o, props: n, _owner: s };
};
Ke.createContext = function (e) {
  return (
    (e = {
      $$typeof: hx,
      _currentValue: e,
      _currentValue2: e,
      _threadCount: 0,
      Provider: null,
      Consumer: null,
      _defaultValue: null,
      _globalName: null,
    }),
    (e.Provider = { $$typeof: px, _context: e }),
    (e.Consumer = e)
  );
};
Ke.createElement = hv;
Ke.createFactory = function (e) {
  var t = hv.bind(null, e);
  return (t.type = e), t;
};
Ke.createRef = function () {
  return { current: null };
};
Ke.forwardRef = function (e) {
  return { $$typeof: mx, render: e };
};
Ke.isValidElement = Rh;
Ke.lazy = function (e) {
  return { $$typeof: yx, _payload: { _status: -1, _result: e }, _init: Sx };
};
Ke.memo = function (e, t) {
  return { $$typeof: _x, type: e, compare: t === void 0 ? null : t };
};
Ke.startTransition = function (e) {
  var t = au.transition;
  au.transition = {};
  try {
    e();
  } finally {
    au.transition = t;
  }
};
Ke.unstable_act = mv;
Ke.useCallback = function (e, t) {
  return _n.current.useCallback(e, t);
};
Ke.useContext = function (e) {
  return _n.current.useContext(e);
};
Ke.useDebugValue = function () {};
Ke.useDeferredValue = function (e) {
  return _n.current.useDeferredValue(e);
};
Ke.useEffect = function (e, t) {
  return _n.current.useEffect(e, t);
};
Ke.useId = function () {
  return _n.current.useId();
};
Ke.useImperativeHandle = function (e, t, r) {
  return _n.current.useImperativeHandle(e, t, r);
};
Ke.useInsertionEffect = function (e, t) {
  return _n.current.useInsertionEffect(e, t);
};
Ke.useLayoutEffect = function (e, t) {
  return _n.current.useLayoutEffect(e, t);
};
Ke.useMemo = function (e, t) {
  return _n.current.useMemo(e, t);
};
Ke.useReducer = function (e, t, r) {
  return _n.current.useReducer(e, t, r);
};
Ke.useRef = function (e) {
  return _n.current.useRef(e);
};
Ke.useState = function (e) {
  return _n.current.useState(e);
};
Ke.useSyncExternalStore = function (e, t, r) {
  return _n.current.useSyncExternalStore(e, t, r);
};
Ke.useTransition = function () {
  return _n.current.useTransition();
};
Ke.version = '18.3.1';
av.exports = Ke;
var K = av.exports;
const ip = Ph(K),
  Pg = lx({ __proto__: null, default: ip }, [K]); /**
 * @license React
 * react-jsx-runtime.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var kx = K,
  Ex = Symbol.for('react.element'),
  Tx = Symbol.for('react.fragment'),
  Cx = Object.prototype.hasOwnProperty,
  Ax = kx.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,
  Px = { key: !0, ref: !0, __self: !0, __source: !0 };
function gv(e, t, r) {
  var n,
    i = {},
    o = null,
    s = null;
  r !== void 0 && (o = '' + r),
    t.key !== void 0 && (o = '' + t.key),
    t.ref !== void 0 && (s = t.ref);
  for (n in t) Cx.call(t, n) && !Px.hasOwnProperty(n) && (i[n] = t[n]);
  if (e && e.defaultProps)
    for (n in ((t = e.defaultProps), t)) i[n] === void 0 && (i[n] = t[n]);
  return {
    $$typeof: Ex,
    type: e,
    key: o,
    ref: s,
    props: i,
    _owner: Ax.current,
  };
}
bc.Fragment = Tx;
bc.jsx = gv;
bc.jsxs = gv;
sv.exports = bc;
var te = sv.exports,
  _v = { exports: {} },
  Mn = {},
  yv = { exports: {} },
  vv = {}; /**
 * @license React
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
(function (e) {
  function t(Se, Ne) {
    var je = Se.length;
    Se.push(Ne);
    e: for (; 0 < je; ) {
      var mt = (je - 1) >>> 1,
        gt = Se[mt];
      if (0 < i(gt, Ne)) (Se[mt] = Ne), (Se[je] = gt), (je = mt);
      else break e;
    }
  }
  function r(Se) {
    return Se.length === 0 ? null : Se[0];
  }
  function n(Se) {
    if (Se.length === 0) return null;
    var Ne = Se[0],
      je = Se.pop();
    if (je !== Ne) {
      Se[0] = je;
      e: for (var mt = 0, gt = Se.length, Xe = gt >>> 1; mt < Xe; ) {
        var _t = 2 * (mt + 1) - 1,
          pr = Se[_t],
          Vt = _t + 1,
          $n = Se[Vt];
        if (0 > i(pr, je))
          Vt < gt && 0 > i($n, pr)
            ? ((Se[mt] = $n), (Se[Vt] = je), (mt = Vt))
            : ((Se[mt] = pr), (Se[_t] = je), (mt = _t));
        else if (Vt < gt && 0 > i($n, je))
          (Se[mt] = $n), (Se[Vt] = je), (mt = Vt);
        else break e;
      }
    }
    return Ne;
  }
  function i(Se, Ne) {
    var je = Se.sortIndex - Ne.sortIndex;
    return je !== 0 ? je : Se.id - Ne.id;
  }
  if (typeof performance == 'object' && typeof performance.now == 'function') {
    var o = performance;
    e.unstable_now = function () {
      return o.now();
    };
  } else {
    var s = Date,
      l = s.now();
    e.unstable_now = function () {
      return s.now() - l;
    };
  }
  var c = [],
    h = [],
    y = 1,
    m = null,
    x = 3,
    I = !1,
    $ = !1,
    j = !1,
    G = typeof setTimeout == 'function' ? setTimeout : null,
    C = typeof clearTimeout == 'function' ? clearTimeout : null,
    T = typeof setImmediate < 'u' ? setImmediate : null;
  typeof navigator < 'u' &&
    navigator.scheduling !== void 0 &&
    navigator.scheduling.isInputPending !== void 0 &&
    navigator.scheduling.isInputPending.bind(navigator.scheduling);
  function q(Se) {
    for (var Ne = r(h); Ne !== null; ) {
      if (Ne.callback === null) n(h);
      else if (Ne.startTime <= Se)
        n(h), (Ne.sortIndex = Ne.expirationTime), t(c, Ne);
      else break;
      Ne = r(h);
    }
  }
  function H(Se) {
    if (((j = !1), q(Se), !$))
      if (r(c) !== null) ($ = !0), qe(ie);
      else {
        var Ne = r(h);
        Ne !== null && Qe(H, Ne.startTime - Se);
      }
  }
  function ie(Se, Ne) {
    ($ = !1), j && ((j = !1), C(de), (de = -1)), (I = !0);
    var je = x;
    try {
      for (
        q(Ne), m = r(c);
        m !== null && (!(m.expirationTime > Ne) || (Se && !ut()));
      ) {
        var mt = m.callback;
        if (typeof mt == 'function') {
          (m.callback = null), (x = m.priorityLevel);
          var gt = mt(m.expirationTime <= Ne);
          (Ne = e.unstable_now()),
            typeof gt == 'function' ? (m.callback = gt) : m === r(c) && n(c),
            q(Ne);
        } else n(c);
        m = r(c);
      }
      if (m !== null) var Xe = !0;
      else {
        var _t = r(h);
        _t !== null && Qe(H, _t.startTime - Ne), (Xe = !1);
      }
      return Xe;
    } finally {
      (m = null), (x = je), (I = !1);
    }
  }
  var he = !1,
    le = null,
    de = -1,
    Fe = 5,
    Ae = -1;
  function ut() {
    return !(e.unstable_now() - Ae < Fe);
  }
  function bt() {
    if (le !== null) {
      var Se = e.unstable_now();
      Ae = Se;
      var Ne = !0;
      try {
        Ne = le(!0, Se);
      } finally {
        Ne ? ht() : ((he = !1), (le = null));
      }
    } else he = !1;
  }
  var ht;
  if (typeof T == 'function')
    ht = function () {
      T(bt);
    };
  else if (typeof MessageChannel < 'u') {
    var Dt = new MessageChannel(),
      wt = Dt.port2;
    (Dt.port1.onmessage = bt),
      (ht = function () {
        wt.postMessage(null);
      });
  } else
    ht = function () {
      G(bt, 0);
    };
  function qe(Se) {
    (le = Se), he || ((he = !0), ht());
  }
  function Qe(Se, Ne) {
    de = G(function () {
      Se(e.unstable_now());
    }, Ne);
  }
  (e.unstable_IdlePriority = 5),
    (e.unstable_ImmediatePriority = 1),
    (e.unstable_LowPriority = 4),
    (e.unstable_NormalPriority = 3),
    (e.unstable_Profiling = null),
    (e.unstable_UserBlockingPriority = 2),
    (e.unstable_cancelCallback = function (Se) {
      Se.callback = null;
    }),
    (e.unstable_continueExecution = function () {
      $ || I || (($ = !0), qe(ie));
    }),
    (e.unstable_forceFrameRate = function (Se) {
      0 > Se || 125 < Se
        ? console.error(
            'forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported',
          )
        : (Fe = 0 < Se ? Math.floor(1e3 / Se) : 5);
    }),
    (e.unstable_getCurrentPriorityLevel = function () {
      return x;
    }),
    (e.unstable_getFirstCallbackNode = function () {
      return r(c);
    }),
    (e.unstable_next = function (Se) {
      switch (x) {
        case 1:
        case 2:
        case 3:
          var Ne = 3;
          break;
        default:
          Ne = x;
      }
      var je = x;
      x = Ne;
      try {
        return Se();
      } finally {
        x = je;
      }
    }),
    (e.unstable_pauseExecution = function () {}),
    (e.unstable_requestPaint = function () {}),
    (e.unstable_runWithPriority = function (Se, Ne) {
      switch (Se) {
        case 1:
        case 2:
        case 3:
        case 4:
        case 5:
          break;
        default:
          Se = 3;
      }
      var je = x;
      x = Se;
      try {
        return Ne();
      } finally {
        x = je;
      }
    }),
    (e.unstable_scheduleCallback = function (Se, Ne, je) {
      var mt = e.unstable_now();
      switch (
        (typeof je == 'object' && je !== null
          ? ((je = je.delay),
            (je = typeof je == 'number' && 0 < je ? mt + je : mt))
          : (je = mt),
        Se)
      ) {
        case 1:
          var gt = -1;
          break;
        case 2:
          gt = 250;
          break;
        case 5:
          gt = 1073741823;
          break;
        case 4:
          gt = 1e4;
          break;
        default:
          gt = 5e3;
      }
      return (
        (gt = je + gt),
        (Se = {
          id: y++,
          callback: Ne,
          priorityLevel: Se,
          startTime: je,
          expirationTime: gt,
          sortIndex: -1,
        }),
        je > mt
          ? ((Se.sortIndex = je),
            t(h, Se),
            r(c) === null &&
              Se === r(h) &&
              (j ? (C(de), (de = -1)) : (j = !0), Qe(H, je - mt)))
          : ((Se.sortIndex = gt), t(c, Se), $ || I || (($ = !0), qe(ie))),
        Se
      );
    }),
    (e.unstable_shouldYield = ut),
    (e.unstable_wrapCallback = function (Se) {
      var Ne = x;
      return function () {
        var je = x;
        x = Ne;
        try {
          return Se.apply(this, arguments);
        } finally {
          x = je;
        }
      };
    });
})(vv);
yv.exports = vv;
var qx = yv.exports; /**
 * @license React
 * react-dom.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var Ix = K,
  On = qx;
function ve(e) {
  for (
    var t = 'https://reactjs.org/docs/error-decoder.html?invariant=' + e, r = 1;
    r < arguments.length;
    r++
  )
    t += '&args[]=' + encodeURIComponent(arguments[r]);
  return (
    'Minified React error #' +
    e +
    '; visit ' +
    t +
    ' for the full message or use the non-minified dev environment for full errors and additional helpful warnings.'
  );
}
var bv = new Set(),
  Ta = {};
function mo(e, t) {
  us(e, t), us(e + 'Capture', t);
}
function us(e, t) {
  for (Ta[e] = t, e = 0; e < t.length; e++) bv.add(t[e]);
}
var Xr = !(
    typeof window > 'u' ||
    typeof window.document > 'u' ||
    typeof window.document.createElement > 'u'
  ),
  op = Object.prototype.hasOwnProperty,
  Fx =
    /^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,
  qg = {},
  Ig = {};
function Rx(e) {
  return op.call(Ig, e)
    ? !0
    : op.call(qg, e)
      ? !1
      : Fx.test(e)
        ? (Ig[e] = !0)
        : ((qg[e] = !0), !1);
}
function Ox(e, t, r, n) {
  if (r !== null && r.type === 0) return !1;
  switch (typeof t) {
    case 'function':
    case 'symbol':
      return !0;
    case 'boolean':
      return n
        ? !1
        : r !== null
          ? !r.acceptsBooleans
          : ((e = e.toLowerCase().slice(0, 5)), e !== 'data-' && e !== 'aria-');
    default:
      return !1;
  }
}
function Lx(e, t, r, n) {
  if (t === null || typeof t > 'u' || Ox(e, t, r, n)) return !0;
  if (n) return !1;
  if (r !== null)
    switch (r.type) {
      case 3:
        return !t;
      case 4:
        return t === !1;
      case 5:
        return isNaN(t);
      case 6:
        return isNaN(t) || 1 > t;
    }
  return !1;
}
function yn(e, t, r, n, i, o, s) {
  (this.acceptsBooleans = t === 2 || t === 3 || t === 4),
    (this.attributeName = n),
    (this.attributeNamespace = i),
    (this.mustUseProperty = r),
    (this.propertyName = e),
    (this.type = t),
    (this.sanitizeURL = o),
    (this.removeEmptyString = s);
}
var tn = {};
'children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style'
  .split(' ')
  .forEach(function (e) {
    tn[e] = new yn(e, 0, !1, e, null, !1, !1);
  });
[
  ['acceptCharset', 'accept-charset'],
  ['className', 'class'],
  ['htmlFor', 'for'],
  ['httpEquiv', 'http-equiv'],
].forEach(function (e) {
  var t = e[0];
  tn[t] = new yn(t, 1, !1, e[1], null, !1, !1);
});
['contentEditable', 'draggable', 'spellCheck', 'value'].forEach(function (e) {
  tn[e] = new yn(e, 2, !1, e.toLowerCase(), null, !1, !1);
});
[
  'autoReverse',
  'externalResourcesRequired',
  'focusable',
  'preserveAlpha',
].forEach(function (e) {
  tn[e] = new yn(e, 2, !1, e, null, !1, !1);
});
'allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope'
  .split(' ')
  .forEach(function (e) {
    tn[e] = new yn(e, 3, !1, e.toLowerCase(), null, !1, !1);
  });
['checked', 'multiple', 'muted', 'selected'].forEach(function (e) {
  tn[e] = new yn(e, 3, !0, e, null, !1, !1);
});
['capture', 'download'].forEach(function (e) {
  tn[e] = new yn(e, 4, !1, e, null, !1, !1);
});
['cols', 'rows', 'size', 'span'].forEach(function (e) {
  tn[e] = new yn(e, 6, !1, e, null, !1, !1);
});
['rowSpan', 'start'].forEach(function (e) {
  tn[e] = new yn(e, 5, !1, e.toLowerCase(), null, !1, !1);
});
var Oh = /[\-:]([a-z])/g;
function Lh(e) {
  return e[1].toUpperCase();
}
'accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height'
  .split(' ')
  .forEach(function (e) {
    var t = e.replace(Oh, Lh);
    tn[t] = new yn(t, 1, !1, e, null, !1, !1);
  });
'xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type'
  .split(' ')
  .forEach(function (e) {
    var t = e.replace(Oh, Lh);
    tn[t] = new yn(t, 1, !1, e, 'http://www.w3.org/1999/xlink', !1, !1);
  });
['xml:base', 'xml:lang', 'xml:space'].forEach(function (e) {
  var t = e.replace(Oh, Lh);
  tn[t] = new yn(t, 1, !1, e, 'http://www.w3.org/XML/1998/namespace', !1, !1);
});
['tabIndex', 'crossOrigin'].forEach(function (e) {
  tn[e] = new yn(e, 1, !1, e.toLowerCase(), null, !1, !1);
});
tn.xlinkHref = new yn(
  'xlinkHref',
  1,
  !1,
  'xlink:href',
  'http://www.w3.org/1999/xlink',
  !0,
  !1,
);
['src', 'href', 'action', 'formAction'].forEach(function (e) {
  tn[e] = new yn(e, 1, !1, e.toLowerCase(), null, !0, !0);
});
function Mh(e, t, r, n) {
  var i = tn.hasOwnProperty(t) ? tn[t] : null;
  (i !== null
    ? i.type !== 0
    : n ||
      !(2 < t.length) ||
      (t[0] !== 'o' && t[0] !== 'O') ||
      (t[1] !== 'n' && t[1] !== 'N')) &&
    (Lx(t, r, i, n) && (r = null),
    n || i === null
      ? Rx(t) && (r === null ? e.removeAttribute(t) : e.setAttribute(t, '' + r))
      : i.mustUseProperty
        ? (e[i.propertyName] = r === null ? (i.type === 3 ? !1 : '') : r)
        : ((t = i.attributeName),
          (n = i.attributeNamespace),
          r === null
            ? e.removeAttribute(t)
            : ((i = i.type),
              (r = i === 3 || (i === 4 && r === !0) ? '' : '' + r),
              n ? e.setAttributeNS(n, t, r) : e.setAttribute(t, r))));
}
var ni = Ix.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,
  Il = Symbol.for('react.element'),
  Ao = Symbol.for('react.portal'),
  Po = Symbol.for('react.fragment'),
  Dh = Symbol.for('react.strict_mode'),
  sp = Symbol.for('react.profiler'),
  wv = Symbol.for('react.provider'),
  Sv = Symbol.for('react.context'),
  zh = Symbol.for('react.forward_ref'),
  ap = Symbol.for('react.suspense'),
  lp = Symbol.for('react.suspense_list'),
  $h = Symbol.for('react.memo'),
  mi = Symbol.for('react.lazy'),
  xv = Symbol.for('react.offscreen'),
  Fg = Symbol.iterator;
function Os(e) {
  return e === null || typeof e != 'object'
    ? null
    : ((e = (Fg && e[Fg]) || e['@@iterator']),
      typeof e == 'function' ? e : null);
}
var Ft = Object.assign,
  ed;
function Gs(e) {
  if (ed === void 0)
    try {
      throw Error();
    } catch (r) {
      var t = r.stack.trim().match(/\n( *(at )?)/);
      ed = (t && t[1]) || '';
    }
  return (
    `
` +
    ed +
    e
  );
}
var td = !1;
function nd(e, t) {
  if (!e || td) return '';
  td = !0;
  var r = Error.prepareStackTrace;
  Error.prepareStackTrace = void 0;
  try {
    if (t)
      if (
        ((t = function () {
          throw Error();
        }),
        Object.defineProperty(t.prototype, 'props', {
          set: function () {
            throw Error();
          },
        }),
        typeof Reflect == 'object' && Reflect.construct)
      ) {
        try {
          Reflect.construct(t, []);
        } catch (h) {
          var n = h;
        }
        Reflect.construct(e, [], t);
      } else {
        try {
          t.call();
        } catch (h) {
          n = h;
        }
        e.call(t.prototype);
      }
    else {
      try {
        throw Error();
      } catch (h) {
        n = h;
      }
      e();
    }
  } catch (h) {
    if (h && n && typeof h.stack == 'string') {
      for (
        var i = h.stack.split(`
`),
          o = n.stack.split(`
`),
          s = i.length - 1,
          l = o.length - 1;
        1 <= s && 0 <= l && i[s] !== o[l];
      )
        l--;
      for (; 1 <= s && 0 <= l; s--, l--)
        if (i[s] !== o[l]) {
          if (s !== 1 || l !== 1)
            do
              if ((s--, l--, 0 > l || i[s] !== o[l])) {
                var c =
                  `
` + i[s].replace(' at new ', ' at ');
                return (
                  e.displayName &&
                    c.includes('<anonymous>') &&
                    (c = c.replace('<anonymous>', e.displayName)),
                  c
                );
              }
            while (1 <= s && 0 <= l);
          break;
        }
    }
  } finally {
    (td = !1), (Error.prepareStackTrace = r);
  }
  return (e = e ? e.displayName || e.name : '') ? Gs(e) : '';
}
function Mx(e) {
  switch (e.tag) {
    case 5:
      return Gs(e.type);
    case 16:
      return Gs('Lazy');
    case 13:
      return Gs('Suspense');
    case 19:
      return Gs('SuspenseList');
    case 0:
    case 2:
    case 15:
      return (e = nd(e.type, !1)), e;
    case 11:
      return (e = nd(e.type.render, !1)), e;
    case 1:
      return (e = nd(e.type, !0)), e;
    default:
      return '';
  }
}
function up(e) {
  if (e == null) return null;
  if (typeof e == 'function') return e.displayName || e.name || null;
  if (typeof e == 'string') return e;
  switch (e) {
    case Po:
      return 'Fragment';
    case Ao:
      return 'Portal';
    case sp:
      return 'Profiler';
    case Dh:
      return 'StrictMode';
    case ap:
      return 'Suspense';
    case lp:
      return 'SuspenseList';
  }
  if (typeof e == 'object')
    switch (e.$$typeof) {
      case Sv:
        return (e.displayName || 'Context') + '.Consumer';
      case wv:
        return (e._context.displayName || 'Context') + '.Provider';
      case zh:
        var t = e.render;
        return (
          (e = e.displayName),
          e ||
            ((e = t.displayName || t.name || ''),
            (e = e !== '' ? 'ForwardRef(' + e + ')' : 'ForwardRef')),
          e
        );
      case $h:
        return (
          (t = e.displayName || null), t !== null ? t : up(e.type) || 'Memo'
        );
      case mi:
        (t = e._payload), (e = e._init);
        try {
          return up(e(t));
        } catch {}
    }
  return null;
}
function Dx(e) {
  var t = e.type;
  switch (e.tag) {
    case 24:
      return 'Cache';
    case 9:
      return (t.displayName || 'Context') + '.Consumer';
    case 10:
      return (t._context.displayName || 'Context') + '.Provider';
    case 18:
      return 'DehydratedFragment';
    case 11:
      return (
        (e = t.render),
        (e = e.displayName || e.name || ''),
        t.displayName || (e !== '' ? 'ForwardRef(' + e + ')' : 'ForwardRef')
      );
    case 7:
      return 'Fragment';
    case 5:
      return t;
    case 4:
      return 'Portal';
    case 3:
      return 'Root';
    case 6:
      return 'Text';
    case 16:
      return up(t);
    case 8:
      return t === Dh ? 'StrictMode' : 'Mode';
    case 22:
      return 'Offscreen';
    case 12:
      return 'Profiler';
    case 21:
      return 'Scope';
    case 13:
      return 'Suspense';
    case 19:
      return 'SuspenseList';
    case 25:
      return 'TracingMarker';
    case 1:
    case 0:
    case 17:
    case 2:
    case 14:
    case 15:
      if (typeof t == 'function') return t.displayName || t.name || null;
      if (typeof t == 'string') return t;
  }
  return null;
}
function Ii(e) {
  switch (typeof e) {
    case 'boolean':
    case 'number':
    case 'string':
    case 'undefined':
      return e;
    case 'object':
      return e;
    default:
      return '';
  }
}
function kv(e) {
  var t = e.type;
  return (
    (e = e.nodeName) &&
    e.toLowerCase() === 'input' &&
    (t === 'checkbox' || t === 'radio')
  );
}
function zx(e) {
  var t = kv(e) ? 'checked' : 'value',
    r = Object.getOwnPropertyDescriptor(e.constructor.prototype, t),
    n = '' + e[t];
  if (
    !e.hasOwnProperty(t) &&
    typeof r < 'u' &&
    typeof r.get == 'function' &&
    typeof r.set == 'function'
  ) {
    var i = r.get,
      o = r.set;
    return (
      Object.defineProperty(e, t, {
        configurable: !0,
        get: function () {
          return i.call(this);
        },
        set: function (s) {
          (n = '' + s), o.call(this, s);
        },
      }),
      Object.defineProperty(e, t, { enumerable: r.enumerable }),
      {
        getValue: function () {
          return n;
        },
        setValue: function (s) {
          n = '' + s;
        },
        stopTracking: function () {
          (e._valueTracker = null), delete e[t];
        },
      }
    );
  }
}
function Fl(e) {
  e._valueTracker || (e._valueTracker = zx(e));
}
function Ev(e) {
  if (!e) return !1;
  var t = e._valueTracker;
  if (!t) return !0;
  var r = t.getValue(),
    n = '';
  return (
    e && (n = kv(e) ? (e.checked ? 'true' : 'false') : e.value),
    (e = n),
    e !== r ? (t.setValue(e), !0) : !1
  );
}
function Mu(e) {
  if (((e = e || (typeof document < 'u' ? document : void 0)), typeof e > 'u'))
    return null;
  try {
    return e.activeElement || e.body;
  } catch {
    return e.body;
  }
}
function cp(e, t) {
  var r = t.checked;
  return Ft({}, t, {
    defaultChecked: void 0,
    defaultValue: void 0,
    value: void 0,
    checked: r ?? e._wrapperState.initialChecked,
  });
}
function Rg(e, t) {
  var r = t.defaultValue == null ? '' : t.defaultValue,
    n = t.checked != null ? t.checked : t.defaultChecked;
  (r = Ii(t.value != null ? t.value : r)),
    (e._wrapperState = {
      initialChecked: n,
      initialValue: r,
      controlled:
        t.type === 'checkbox' || t.type === 'radio'
          ? t.checked != null
          : t.value != null,
    });
}
function Tv(e, t) {
  (t = t.checked), t != null && Mh(e, 'checked', t, !1);
}
function fp(e, t) {
  Tv(e, t);
  var r = Ii(t.value),
    n = t.type;
  if (r != null)
    n === 'number'
      ? ((r === 0 && e.value === '') || e.value != r) && (e.value = '' + r)
      : e.value !== '' + r && (e.value = '' + r);
  else if (n === 'submit' || n === 'reset') {
    e.removeAttribute('value');
    return;
  }
  t.hasOwnProperty('value')
    ? dp(e, t.type, r)
    : t.hasOwnProperty('defaultValue') && dp(e, t.type, Ii(t.defaultValue)),
    t.checked == null &&
      t.defaultChecked != null &&
      (e.defaultChecked = !!t.defaultChecked);
}
function Og(e, t, r) {
  if (t.hasOwnProperty('value') || t.hasOwnProperty('defaultValue')) {
    var n = t.type;
    if (
      !(
        (n !== 'submit' && n !== 'reset') ||
        (t.value !== void 0 && t.value !== null)
      )
    )
      return;
    (t = '' + e._wrapperState.initialValue),
      r || t === e.value || (e.value = t),
      (e.defaultValue = t);
  }
  (r = e.name),
    r !== '' && (e.name = ''),
    (e.defaultChecked = !!e._wrapperState.initialChecked),
    r !== '' && (e.name = r);
}
function dp(e, t, r) {
  (t !== 'number' || Mu(e.ownerDocument) !== e) &&
    (r == null
      ? (e.defaultValue = '' + e._wrapperState.initialValue)
      : e.defaultValue !== '' + r && (e.defaultValue = '' + r));
}
var Ks = Array.isArray;
function Jo(e, t, r, n) {
  if (((e = e.options), t)) {
    t = {};
    for (var i = 0; i < r.length; i++) t['$' + r[i]] = !0;
    for (r = 0; r < e.length; r++)
      (i = t.hasOwnProperty('$' + e[r].value)),
        e[r].selected !== i && (e[r].selected = i),
        i && n && (e[r].defaultSelected = !0);
  } else {
    for (r = '' + Ii(r), t = null, i = 0; i < e.length; i++) {
      if (e[i].value === r) {
        (e[i].selected = !0), n && (e[i].defaultSelected = !0);
        return;
      }
      t !== null || e[i].disabled || (t = e[i]);
    }
    t !== null && (t.selected = !0);
  }
}
function pp(e, t) {
  if (t.dangerouslySetInnerHTML != null) throw Error(ve(91));
  return Ft({}, t, {
    value: void 0,
    defaultValue: void 0,
    children: '' + e._wrapperState.initialValue,
  });
}
function Lg(e, t) {
  var r = t.value;
  if (r == null) {
    if (((r = t.children), (t = t.defaultValue), r != null)) {
      if (t != null) throw Error(ve(92));
      if (Ks(r)) {
        if (1 < r.length) throw Error(ve(93));
        r = r[0];
      }
      t = r;
    }
    t == null && (t = ''), (r = t);
  }
  e._wrapperState = { initialValue: Ii(r) };
}
function Cv(e, t) {
  var r = Ii(t.value),
    n = Ii(t.defaultValue);
  r != null &&
    ((r = '' + r),
    r !== e.value && (e.value = r),
    t.defaultValue == null && e.defaultValue !== r && (e.defaultValue = r)),
    n != null && (e.defaultValue = '' + n);
}
function Mg(e) {
  var t = e.textContent;
  t === e._wrapperState.initialValue && t !== '' && t !== null && (e.value = t);
}
function Av(e) {
  switch (e) {
    case 'svg':
      return 'http://www.w3.org/2000/svg';
    case 'math':
      return 'http://www.w3.org/1998/Math/MathML';
    default:
      return 'http://www.w3.org/1999/xhtml';
  }
}
function hp(e, t) {
  return e == null || e === 'http://www.w3.org/1999/xhtml'
    ? Av(t)
    : e === 'http://www.w3.org/2000/svg' && t === 'foreignObject'
      ? 'http://www.w3.org/1999/xhtml'
      : e;
}
var Rl,
  Pv = (function (e) {
    return typeof MSApp < 'u' && MSApp.execUnsafeLocalFunction
      ? function (t, r, n, i) {
          MSApp.execUnsafeLocalFunction(function () {
            return e(t, r, n, i);
          });
        }
      : e;
  })(function (e, t) {
    if (e.namespaceURI !== 'http://www.w3.org/2000/svg' || 'innerHTML' in e)
      e.innerHTML = t;
    else {
      for (
        Rl = Rl || document.createElement('div'),
          Rl.innerHTML = '<svg>' + t.valueOf().toString() + '</svg>',
          t = Rl.firstChild;
        e.firstChild;
      )
        e.removeChild(e.firstChild);
      for (; t.firstChild; ) e.appendChild(t.firstChild);
    }
  });
function Ca(e, t) {
  if (t) {
    var r = e.firstChild;
    if (r && r === e.lastChild && r.nodeType === 3) {
      r.nodeValue = t;
      return;
    }
  }
  e.textContent = t;
}
var oa = {
    animationIterationCount: !0,
    aspectRatio: !0,
    borderImageOutset: !0,
    borderImageSlice: !0,
    borderImageWidth: !0,
    boxFlex: !0,
    boxFlexGroup: !0,
    boxOrdinalGroup: !0,
    columnCount: !0,
    columns: !0,
    flex: !0,
    flexGrow: !0,
    flexPositive: !0,
    flexShrink: !0,
    flexNegative: !0,
    flexOrder: !0,
    gridArea: !0,
    gridRow: !0,
    gridRowEnd: !0,
    gridRowSpan: !0,
    gridRowStart: !0,
    gridColumn: !0,
    gridColumnEnd: !0,
    gridColumnSpan: !0,
    gridColumnStart: !0,
    fontWeight: !0,
    lineClamp: !0,
    lineHeight: !0,
    opacity: !0,
    order: !0,
    orphans: !0,
    tabSize: !0,
    widows: !0,
    zIndex: !0,
    zoom: !0,
    fillOpacity: !0,
    floodOpacity: !0,
    stopOpacity: !0,
    strokeDasharray: !0,
    strokeDashoffset: !0,
    strokeMiterlimit: !0,
    strokeOpacity: !0,
    strokeWidth: !0,
  },
  $x = ['Webkit', 'ms', 'Moz', 'O'];
Object.keys(oa).forEach(function (e) {
  $x.forEach(function (t) {
    (t = t + e.charAt(0).toUpperCase() + e.substring(1)), (oa[t] = oa[e]);
  });
});
function qv(e, t, r) {
  return t == null || typeof t == 'boolean' || t === ''
    ? ''
    : r || typeof t != 'number' || t === 0 || (oa.hasOwnProperty(e) && oa[e])
      ? ('' + t).trim()
      : t + 'px';
}
function Iv(e, t) {
  e = e.style;
  for (var r in t)
    if (t.hasOwnProperty(r)) {
      var n = r.indexOf('--') === 0,
        i = qv(r, t[r], n);
      r === 'float' && (r = 'cssFloat'), n ? e.setProperty(r, i) : (e[r] = i);
    }
}
var Nx = Ft(
  { menuitem: !0 },
  {
    area: !0,
    base: !0,
    br: !0,
    col: !0,
    embed: !0,
    hr: !0,
    img: !0,
    input: !0,
    keygen: !0,
    link: !0,
    meta: !0,
    param: !0,
    source: !0,
    track: !0,
    wbr: !0,
  },
);
function mp(e, t) {
  if (t) {
    if (Nx[e] && (t.children != null || t.dangerouslySetInnerHTML != null))
      throw Error(ve(137, e));
    if (t.dangerouslySetInnerHTML != null) {
      if (t.children != null) throw Error(ve(60));
      if (
        typeof t.dangerouslySetInnerHTML != 'object' ||
        !('__html' in t.dangerouslySetInnerHTML)
      )
        throw Error(ve(61));
    }
    if (t.style != null && typeof t.style != 'object') throw Error(ve(62));
  }
}
function gp(e, t) {
  if (e.indexOf('-') === -1) return typeof t.is == 'string';
  switch (e) {
    case 'annotation-xml':
    case 'color-profile':
    case 'font-face':
    case 'font-face-src':
    case 'font-face-uri':
    case 'font-face-format':
    case 'font-face-name':
    case 'missing-glyph':
      return !1;
    default:
      return !0;
  }
}
var _p = null;
function Nh(e) {
  return (
    (e = e.target || e.srcElement || window),
    e.correspondingUseElement && (e = e.correspondingUseElement),
    e.nodeType === 3 ? e.parentNode : e
  );
}
var yp = null,
  Zo = null,
  es = null;
function Dg(e) {
  if ((e = sl(e))) {
    if (typeof yp != 'function') throw Error(ve(280));
    var t = e.stateNode;
    t && ((t = Ec(t)), yp(e.stateNode, e.type, t));
  }
}
function Fv(e) {
  Zo ? (es ? es.push(e) : (es = [e])) : (Zo = e);
}
function Rv() {
  if (Zo) {
    var e = Zo,
      t = es;
    if (((es = Zo = null), Dg(e), t)) for (e = 0; e < t.length; e++) Dg(t[e]);
  }
}
function Ov(e, t) {
  return e(t);
}
function Lv() {}
var rd = !1;
function Mv(e, t, r) {
  if (rd) return e(t, r);
  rd = !0;
  try {
    return Ov(e, t, r);
  } finally {
    (rd = !1), (Zo !== null || es !== null) && (Lv(), Rv());
  }
}
function Aa(e, t) {
  var r = e.stateNode;
  if (r === null) return null;
  var n = Ec(r);
  if (n === null) return null;
  r = n[t];
  e: switch (t) {
    case 'onClick':
    case 'onClickCapture':
    case 'onDoubleClick':
    case 'onDoubleClickCapture':
    case 'onMouseDown':
    case 'onMouseDownCapture':
    case 'onMouseMove':
    case 'onMouseMoveCapture':
    case 'onMouseUp':
    case 'onMouseUpCapture':
    case 'onMouseEnter':
      (n = !n.disabled) ||
        ((e = e.type),
        (n = !(
          e === 'button' ||
          e === 'input' ||
          e === 'select' ||
          e === 'textarea'
        ))),
        (e = !n);
      break e;
    default:
      e = !1;
  }
  if (e) return null;
  if (r && typeof r != 'function') throw Error(ve(231, t, typeof r));
  return r;
}
var vp = !1;
if (Xr)
  try {
    var Ls = {};
    Object.defineProperty(Ls, 'passive', {
      get: function () {
        vp = !0;
      },
    }),
      window.addEventListener('test', Ls, Ls),
      window.removeEventListener('test', Ls, Ls);
  } catch {
    vp = !1;
  }
function jx(e, t, r, n, i, o, s, l, c) {
  var h = Array.prototype.slice.call(arguments, 3);
  try {
    t.apply(r, h);
  } catch (y) {
    this.onError(y);
  }
}
var sa = !1,
  Du = null,
  zu = !1,
  bp = null,
  Bx = {
    onError: function (e) {
      (sa = !0), (Du = e);
    },
  };
function Vx(e, t, r, n, i, o, s, l, c) {
  (sa = !1), (Du = null), jx.apply(Bx, arguments);
}
function Wx(e, t, r, n, i, o, s, l, c) {
  if ((Vx.apply(this, arguments), sa)) {
    if (sa) {
      var h = Du;
      (sa = !1), (Du = null);
    } else throw Error(ve(198));
    zu || ((zu = !0), (bp = h));
  }
}
function go(e) {
  var t = e,
    r = e;
  if (e.alternate) for (; t.return; ) t = t.return;
  else {
    e = t;
    do (t = e), t.flags & 4098 && (r = t.return), (e = t.return);
    while (e);
  }
  return t.tag === 3 ? r : null;
}
function Dv(e) {
  if (e.tag === 13) {
    var t = e.memoizedState;
    if (
      (t === null && ((e = e.alternate), e !== null && (t = e.memoizedState)),
      t !== null)
    )
      return t.dehydrated;
  }
  return null;
}
function zg(e) {
  if (go(e) !== e) throw Error(ve(188));
}
function Ux(e) {
  var t = e.alternate;
  if (!t) {
    if (((t = go(e)), t === null)) throw Error(ve(188));
    return t !== e ? null : e;
  }
  for (var r = e, n = t; ; ) {
    var i = r.return;
    if (i === null) break;
    var o = i.alternate;
    if (o === null) {
      if (((n = i.return), n !== null)) {
        r = n;
        continue;
      }
      break;
    }
    if (i.child === o.child) {
      for (o = i.child; o; ) {
        if (o === r) return zg(i), e;
        if (o === n) return zg(i), t;
        o = o.sibling;
      }
      throw Error(ve(188));
    }
    if (r.return !== n.return) (r = i), (n = o);
    else {
      for (var s = !1, l = i.child; l; ) {
        if (l === r) {
          (s = !0), (r = i), (n = o);
          break;
        }
        if (l === n) {
          (s = !0), (n = i), (r = o);
          break;
        }
        l = l.sibling;
      }
      if (!s) {
        for (l = o.child; l; ) {
          if (l === r) {
            (s = !0), (r = o), (n = i);
            break;
          }
          if (l === n) {
            (s = !0), (n = o), (r = i);
            break;
          }
          l = l.sibling;
        }
        if (!s) throw Error(ve(189));
      }
    }
    if (r.alternate !== n) throw Error(ve(190));
  }
  if (r.tag !== 3) throw Error(ve(188));
  return r.stateNode.current === r ? e : t;
}
function zv(e) {
  return (e = Ux(e)), e !== null ? $v(e) : null;
}
function $v(e) {
  if (e.tag === 5 || e.tag === 6) return e;
  for (e = e.child; e !== null; ) {
    var t = $v(e);
    if (t !== null) return t;
    e = e.sibling;
  }
  return null;
}
var Nv = On.unstable_scheduleCallback,
  $g = On.unstable_cancelCallback,
  Hx = On.unstable_shouldYield,
  Qx = On.unstable_requestPaint,
  Lt = On.unstable_now,
  Gx = On.unstable_getCurrentPriorityLevel,
  jh = On.unstable_ImmediatePriority,
  jv = On.unstable_UserBlockingPriority,
  $u = On.unstable_NormalPriority,
  Kx = On.unstable_LowPriority,
  Bv = On.unstable_IdlePriority,
  wc = null,
  Er = null;
function Xx(e) {
  if (Er && typeof Er.onCommitFiberRoot == 'function')
    try {
      Er.onCommitFiberRoot(wc, e, void 0, (e.current.flags & 128) === 128);
    } catch {}
}
var ur = Math.clz32 ? Math.clz32 : Zx,
  Yx = Math.log,
  Jx = Math.LN2;
function Zx(e) {
  return (e >>>= 0), e === 0 ? 32 : (31 - ((Yx(e) / Jx) | 0)) | 0;
}
var Ol = 64,
  Ll = 4194304;
function Xs(e) {
  switch (e & -e) {
    case 1:
      return 1;
    case 2:
      return 2;
    case 4:
      return 4;
    case 8:
      return 8;
    case 16:
      return 16;
    case 32:
      return 32;
    case 64:
    case 128:
    case 256:
    case 512:
    case 1024:
    case 2048:
    case 4096:
    case 8192:
    case 16384:
    case 32768:
    case 65536:
    case 131072:
    case 262144:
    case 524288:
    case 1048576:
    case 2097152:
      return e & 4194240;
    case 4194304:
    case 8388608:
    case 16777216:
    case 33554432:
    case 67108864:
      return e & 130023424;
    case 134217728:
      return 134217728;
    case 268435456:
      return 268435456;
    case 536870912:
      return 536870912;
    case 1073741824:
      return 1073741824;
    default:
      return e;
  }
}
function Nu(e, t) {
  var r = e.pendingLanes;
  if (r === 0) return 0;
  var n = 0,
    i = e.suspendedLanes,
    o = e.pingedLanes,
    s = r & 268435455;
  if (s !== 0) {
    var l = s & ~i;
    l !== 0 ? (n = Xs(l)) : ((o &= s), o !== 0 && (n = Xs(o)));
  } else (s = r & ~i), s !== 0 ? (n = Xs(s)) : o !== 0 && (n = Xs(o));
  if (n === 0) return 0;
  if (
    t !== 0 &&
    t !== n &&
    !(t & i) &&
    ((i = n & -n), (o = t & -t), i >= o || (i === 16 && (o & 4194240) !== 0))
  )
    return t;
  if ((n & 4 && (n |= r & 16), (t = e.entangledLanes), t !== 0))
    for (e = e.entanglements, t &= n; 0 < t; )
      (r = 31 - ur(t)), (i = 1 << r), (n |= e[r]), (t &= ~i);
  return n;
}
function e3(e, t) {
  switch (e) {
    case 1:
    case 2:
    case 4:
      return t + 250;
    case 8:
    case 16:
    case 32:
    case 64:
    case 128:
    case 256:
    case 512:
    case 1024:
    case 2048:
    case 4096:
    case 8192:
    case 16384:
    case 32768:
    case 65536:
    case 131072:
    case 262144:
    case 524288:
    case 1048576:
    case 2097152:
      return t + 5e3;
    case 4194304:
    case 8388608:
    case 16777216:
    case 33554432:
    case 67108864:
      return -1;
    case 134217728:
    case 268435456:
    case 536870912:
    case 1073741824:
      return -1;
    default:
      return -1;
  }
}
function t3(e, t) {
  for (
    var r = e.suspendedLanes,
      n = e.pingedLanes,
      i = e.expirationTimes,
      o = e.pendingLanes;
    0 < o;
  ) {
    var s = 31 - ur(o),
      l = 1 << s,
      c = i[s];
    c === -1
      ? (!(l & r) || l & n) && (i[s] = e3(l, t))
      : c <= t && (e.expiredLanes |= l),
      (o &= ~l);
  }
}
function wp(e) {
  return (
    (e = e.pendingLanes & -1073741825),
    e !== 0 ? e : e & 1073741824 ? 1073741824 : 0
  );
}
function Vv() {
  var e = Ol;
  return (Ol <<= 1), !(Ol & 4194240) && (Ol = 64), e;
}
function id(e) {
  for (var t = [], r = 0; 31 > r; r++) t.push(e);
  return t;
}
function il(e, t, r) {
  (e.pendingLanes |= t),
    t !== 536870912 && ((e.suspendedLanes = 0), (e.pingedLanes = 0)),
    (e = e.eventTimes),
    (t = 31 - ur(t)),
    (e[t] = r);
}
function n3(e, t) {
  var r = e.pendingLanes & ~t;
  (e.pendingLanes = t),
    (e.suspendedLanes = 0),
    (e.pingedLanes = 0),
    (e.expiredLanes &= t),
    (e.mutableReadLanes &= t),
    (e.entangledLanes &= t),
    (t = e.entanglements);
  var n = e.eventTimes;
  for (e = e.expirationTimes; 0 < r; ) {
    var i = 31 - ur(r),
      o = 1 << i;
    (t[i] = 0), (n[i] = -1), (e[i] = -1), (r &= ~o);
  }
}
function Bh(e, t) {
  var r = (e.entangledLanes |= t);
  for (e = e.entanglements; r; ) {
    var n = 31 - ur(r),
      i = 1 << n;
    (i & t) | (e[n] & t) && (e[n] |= t), (r &= ~i);
  }
}
var ft = 0;
function Wv(e) {
  return (e &= -e), 1 < e ? (4 < e ? (e & 268435455 ? 16 : 536870912) : 4) : 1;
}
var Uv,
  Vh,
  Hv,
  Qv,
  Gv,
  Sp = !1,
  Ml = [],
  xi = null,
  ki = null,
  Ei = null,
  Pa = new Map(),
  qa = new Map(),
  _i = [],
  r3 =
    'mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit'.split(
      ' ',
    );
function Ng(e, t) {
  switch (e) {
    case 'focusin':
    case 'focusout':
      xi = null;
      break;
    case 'dragenter':
    case 'dragleave':
      ki = null;
      break;
    case 'mouseover':
    case 'mouseout':
      Ei = null;
      break;
    case 'pointerover':
    case 'pointerout':
      Pa.delete(t.pointerId);
      break;
    case 'gotpointercapture':
    case 'lostpointercapture':
      qa.delete(t.pointerId);
  }
}
function Ms(e, t, r, n, i, o) {
  return e === null || e.nativeEvent !== o
    ? ((e = {
        blockedOn: t,
        domEventName: r,
        eventSystemFlags: n,
        nativeEvent: o,
        targetContainers: [i],
      }),
      t !== null && ((t = sl(t)), t !== null && Vh(t)),
      e)
    : ((e.eventSystemFlags |= n),
      (t = e.targetContainers),
      i !== null && t.indexOf(i) === -1 && t.push(i),
      e);
}
function i3(e, t, r, n, i) {
  switch (t) {
    case 'focusin':
      return (xi = Ms(xi, e, t, r, n, i)), !0;
    case 'dragenter':
      return (ki = Ms(ki, e, t, r, n, i)), !0;
    case 'mouseover':
      return (Ei = Ms(Ei, e, t, r, n, i)), !0;
    case 'pointerover':
      var o = i.pointerId;
      return Pa.set(o, Ms(Pa.get(o) || null, e, t, r, n, i)), !0;
    case 'gotpointercapture':
      return (
        (o = i.pointerId), qa.set(o, Ms(qa.get(o) || null, e, t, r, n, i)), !0
      );
  }
  return !1;
}
function Kv(e) {
  var t = Xi(e.target);
  if (t !== null) {
    var r = go(t);
    if (r !== null) {
      if (((t = r.tag), t === 13)) {
        if (((t = Dv(r)), t !== null)) {
          (e.blockedOn = t),
            Gv(e.priority, function () {
              Hv(r);
            });
          return;
        }
      } else if (t === 3 && r.stateNode.current.memoizedState.isDehydrated) {
        e.blockedOn = r.tag === 3 ? r.stateNode.containerInfo : null;
        return;
      }
    }
  }
  e.blockedOn = null;
}
function lu(e) {
  if (e.blockedOn !== null) return !1;
  for (var t = e.targetContainers; 0 < t.length; ) {
    var r = xp(e.domEventName, e.eventSystemFlags, t[0], e.nativeEvent);
    if (r === null) {
      r = e.nativeEvent;
      var n = new r.constructor(r.type, r);
      (_p = n), r.target.dispatchEvent(n), (_p = null);
    } else return (t = sl(r)), t !== null && Vh(t), (e.blockedOn = r), !1;
    t.shift();
  }
  return !0;
}
function jg(e, t, r) {
  lu(e) && r.delete(t);
}
function o3() {
  (Sp = !1),
    xi !== null && lu(xi) && (xi = null),
    ki !== null && lu(ki) && (ki = null),
    Ei !== null && lu(Ei) && (Ei = null),
    Pa.forEach(jg),
    qa.forEach(jg);
}
function Ds(e, t) {
  e.blockedOn === t &&
    ((e.blockedOn = null),
    Sp ||
      ((Sp = !0),
      On.unstable_scheduleCallback(On.unstable_NormalPriority, o3)));
}
function Ia(e) {
  function t(i) {
    return Ds(i, e);
  }
  if (0 < Ml.length) {
    Ds(Ml[0], e);
    for (var r = 1; r < Ml.length; r++) {
      var n = Ml[r];
      n.blockedOn === e && (n.blockedOn = null);
    }
  }
  for (
    xi !== null && Ds(xi, e),
      ki !== null && Ds(ki, e),
      Ei !== null && Ds(Ei, e),
      Pa.forEach(t),
      qa.forEach(t),
      r = 0;
    r < _i.length;
    r++
  )
    (n = _i[r]), n.blockedOn === e && (n.blockedOn = null);
  for (; 0 < _i.length && ((r = _i[0]), r.blockedOn === null); )
    Kv(r), r.blockedOn === null && _i.shift();
}
var ts = ni.ReactCurrentBatchConfig,
  ju = !0;
function s3(e, t, r, n) {
  var i = ft,
    o = ts.transition;
  ts.transition = null;
  try {
    (ft = 1), Wh(e, t, r, n);
  } finally {
    (ft = i), (ts.transition = o);
  }
}
function a3(e, t, r, n) {
  var i = ft,
    o = ts.transition;
  ts.transition = null;
  try {
    (ft = 4), Wh(e, t, r, n);
  } finally {
    (ft = i), (ts.transition = o);
  }
}
function Wh(e, t, r, n) {
  if (ju) {
    var i = xp(e, t, r, n);
    if (i === null) hd(e, t, n, Bu, r), Ng(e, n);
    else if (i3(i, e, t, r, n)) n.stopPropagation();
    else if ((Ng(e, n), t & 4 && -1 < r3.indexOf(e))) {
      for (; i !== null; ) {
        var o = sl(i);
        if (
          (o !== null && Uv(o),
          (o = xp(e, t, r, n)),
          o === null && hd(e, t, n, Bu, r),
          o === i)
        )
          break;
        i = o;
      }
      i !== null && n.stopPropagation();
    } else hd(e, t, n, null, r);
  }
}
var Bu = null;
function xp(e, t, r, n) {
  if (((Bu = null), (e = Nh(n)), (e = Xi(e)), e !== null))
    if (((t = go(e)), t === null)) e = null;
    else if (((r = t.tag), r === 13)) {
      if (((e = Dv(t)), e !== null)) return e;
      e = null;
    } else if (r === 3) {
      if (t.stateNode.current.memoizedState.isDehydrated)
        return t.tag === 3 ? t.stateNode.containerInfo : null;
      e = null;
    } else t !== e && (e = null);
  return (Bu = e), null;
}
function Xv(e) {
  switch (e) {
    case 'cancel':
    case 'click':
    case 'close':
    case 'contextmenu':
    case 'copy':
    case 'cut':
    case 'auxclick':
    case 'dblclick':
    case 'dragend':
    case 'dragstart':
    case 'drop':
    case 'focusin':
    case 'focusout':
    case 'input':
    case 'invalid':
    case 'keydown':
    case 'keypress':
    case 'keyup':
    case 'mousedown':
    case 'mouseup':
    case 'paste':
    case 'pause':
    case 'play':
    case 'pointercancel':
    case 'pointerdown':
    case 'pointerup':
    case 'ratechange':
    case 'reset':
    case 'resize':
    case 'seeked':
    case 'submit':
    case 'touchcancel':
    case 'touchend':
    case 'touchstart':
    case 'volumechange':
    case 'change':
    case 'selectionchange':
    case 'textInput':
    case 'compositionstart':
    case 'compositionend':
    case 'compositionupdate':
    case 'beforeblur':
    case 'afterblur':
    case 'beforeinput':
    case 'blur':
    case 'fullscreenchange':
    case 'focus':
    case 'hashchange':
    case 'popstate':
    case 'select':
    case 'selectstart':
      return 1;
    case 'drag':
    case 'dragenter':
    case 'dragexit':
    case 'dragleave':
    case 'dragover':
    case 'mousemove':
    case 'mouseout':
    case 'mouseover':
    case 'pointermove':
    case 'pointerout':
    case 'pointerover':
    case 'scroll':
    case 'toggle':
    case 'touchmove':
    case 'wheel':
    case 'mouseenter':
    case 'mouseleave':
    case 'pointerenter':
    case 'pointerleave':
      return 4;
    case 'message':
      switch (Gx()) {
        case jh:
          return 1;
        case jv:
          return 4;
        case $u:
        case Kx:
          return 16;
        case Bv:
          return 536870912;
        default:
          return 16;
      }
    default:
      return 16;
  }
}
var bi = null,
  Uh = null,
  uu = null;
function Yv() {
  if (uu) return uu;
  var e,
    t = Uh,
    r = t.length,
    n,
    i = 'value' in bi ? bi.value : bi.textContent,
    o = i.length;
  for (e = 0; e < r && t[e] === i[e]; e++);
  var s = r - e;
  for (n = 1; n <= s && t[r - n] === i[o - n]; n++);
  return (uu = i.slice(e, 1 < n ? 1 - n : void 0));
}
function cu(e) {
  var t = e.keyCode;
  return (
    'charCode' in e
      ? ((e = e.charCode), e === 0 && t === 13 && (e = 13))
      : (e = t),
    e === 10 && (e = 13),
    32 <= e || e === 13 ? e : 0
  );
}
function Dl() {
  return !0;
}
function Bg() {
  return !1;
}
function Dn(e) {
  function t(r, n, i, o, s) {
    (this._reactName = r),
      (this._targetInst = i),
      (this.type = n),
      (this.nativeEvent = o),
      (this.target = s),
      (this.currentTarget = null);
    for (var l in e)
      e.hasOwnProperty(l) && ((r = e[l]), (this[l] = r ? r(o) : o[l]));
    return (
      (this.isDefaultPrevented = (
        o.defaultPrevented != null
          ? o.defaultPrevented
          : o.returnValue === !1
      )
        ? Dl
        : Bg),
      (this.isPropagationStopped = Bg),
      this
    );
  }
  return (
    Ft(t.prototype, {
      preventDefault: function () {
        this.defaultPrevented = !0;
        var r = this.nativeEvent;
        r &&
          (r.preventDefault
            ? r.preventDefault()
            : typeof r.returnValue != 'unknown' && (r.returnValue = !1),
          (this.isDefaultPrevented = Dl));
      },
      stopPropagation: function () {
        var r = this.nativeEvent;
        r &&
          (r.stopPropagation
            ? r.stopPropagation()
            : typeof r.cancelBubble != 'unknown' && (r.cancelBubble = !0),
          (this.isPropagationStopped = Dl));
      },
      persist: function () {},
      isPersistent: Dl,
    }),
    t
  );
}
var Ss = {
    eventPhase: 0,
    bubbles: 0,
    cancelable: 0,
    timeStamp: function (e) {
      return e.timeStamp || Date.now();
    },
    defaultPrevented: 0,
    isTrusted: 0,
  },
  Hh = Dn(Ss),
  ol = Ft({}, Ss, { view: 0, detail: 0 }),
  l3 = Dn(ol),
  od,
  sd,
  zs,
  Sc = Ft({}, ol, {
    screenX: 0,
    screenY: 0,
    clientX: 0,
    clientY: 0,
    pageX: 0,
    pageY: 0,
    ctrlKey: 0,
    shiftKey: 0,
    altKey: 0,
    metaKey: 0,
    getModifierState: Qh,
    button: 0,
    buttons: 0,
    relatedTarget: function (e) {
      return e.relatedTarget === void 0
        ? e.fromElement === e.srcElement
          ? e.toElement
          : e.fromElement
        : e.relatedTarget;
    },
    movementX: function (e) {
      return 'movementX' in e
        ? e.movementX
        : (e !== zs &&
            (zs && e.type === 'mousemove'
              ? ((od = e.screenX - zs.screenX), (sd = e.screenY - zs.screenY))
              : (sd = od = 0),
            (zs = e)),
          od);
    },
    movementY: function (e) {
      return 'movementY' in e ? e.movementY : sd;
    },
  }),
  Vg = Dn(Sc),
  u3 = Ft({}, Sc, { dataTransfer: 0 }),
  c3 = Dn(u3),
  f3 = Ft({}, ol, { relatedTarget: 0 }),
  ad = Dn(f3),
  d3 = Ft({}, Ss, { animationName: 0, elapsedTime: 0, pseudoElement: 0 }),
  p3 = Dn(d3),
  h3 = Ft({}, Ss, {
    clipboardData: function (e) {
      return 'clipboardData' in e ? e.clipboardData : window.clipboardData;
    },
  }),
  m3 = Dn(h3),
  g3 = Ft({}, Ss, { data: 0 }),
  Wg = Dn(g3),
  _3 = {
    Esc: 'Escape',
    Spacebar: ' ',
    Left: 'ArrowLeft',
    Up: 'ArrowUp',
    Right: 'ArrowRight',
    Down: 'ArrowDown',
    Del: 'Delete',
    Win: 'OS',
    Menu: 'ContextMenu',
    Apps: 'ContextMenu',
    Scroll: 'ScrollLock',
    MozPrintableKey: 'Unidentified',
  },
  y3 = {
    8: 'Backspace',
    9: 'Tab',
    12: 'Clear',
    13: 'Enter',
    16: 'Shift',
    17: 'Control',
    18: 'Alt',
    19: 'Pause',
    20: 'CapsLock',
    27: 'Escape',
    32: ' ',
    33: 'PageUp',
    34: 'PageDown',
    35: 'End',
    36: 'Home',
    37: 'ArrowLeft',
    38: 'ArrowUp',
    39: 'ArrowRight',
    40: 'ArrowDown',
    45: 'Insert',
    46: 'Delete',
    112: 'F1',
    113: 'F2',
    114: 'F3',
    115: 'F4',
    116: 'F5',
    117: 'F6',
    118: 'F7',
    119: 'F8',
    120: 'F9',
    121: 'F10',
    122: 'F11',
    123: 'F12',
    144: 'NumLock',
    145: 'ScrollLock',
    224: 'Meta',
  },
  v3 = {
    Alt: 'altKey',
    Control: 'ctrlKey',
    Meta: 'metaKey',
    Shift: 'shiftKey',
  };
function b3(e) {
  var t = this.nativeEvent;
  return t.getModifierState ? t.getModifierState(e) : (e = v3[e]) ? !!t[e] : !1;
}
function Qh() {
  return b3;
}
var w3 = Ft({}, ol, {
    key: function (e) {
      if (e.key) {
        var t = _3[e.key] || e.key;
        if (t !== 'Unidentified') return t;
      }
      return e.type === 'keypress'
        ? ((e = cu(e)), e === 13 ? 'Enter' : String.fromCharCode(e))
        : e.type === 'keydown' || e.type === 'keyup'
          ? y3[e.keyCode] || 'Unidentified'
          : '';
    },
    code: 0,
    location: 0,
    ctrlKey: 0,
    shiftKey: 0,
    altKey: 0,
    metaKey: 0,
    repeat: 0,
    locale: 0,
    getModifierState: Qh,
    charCode: function (e) {
      return e.type === 'keypress' ? cu(e) : 0;
    },
    keyCode: function (e) {
      return e.type === 'keydown' || e.type === 'keyup' ? e.keyCode : 0;
    },
    which: function (e) {
      return e.type === 'keypress'
        ? cu(e)
        : e.type === 'keydown' || e.type === 'keyup'
          ? e.keyCode
          : 0;
    },
  }),
  S3 = Dn(w3),
  x3 = Ft({}, Sc, {
    pointerId: 0,
    width: 0,
    height: 0,
    pressure: 0,
    tangentialPressure: 0,
    tiltX: 0,
    tiltY: 0,
    twist: 0,
    pointerType: 0,
    isPrimary: 0,
  }),
  Ug = Dn(x3),
  k3 = Ft({}, ol, {
    touches: 0,
    targetTouches: 0,
    changedTouches: 0,
    altKey: 0,
    metaKey: 0,
    ctrlKey: 0,
    shiftKey: 0,
    getModifierState: Qh,
  }),
  E3 = Dn(k3),
  T3 = Ft({}, Ss, { propertyName: 0, elapsedTime: 0, pseudoElement: 0 }),
  C3 = Dn(T3),
  A3 = Ft({}, Sc, {
    deltaX: function (e) {
      return 'deltaX' in e ? e.deltaX : 'wheelDeltaX' in e ? -e.wheelDeltaX : 0;
    },
    deltaY: function (e) {
      return 'deltaY' in e
        ? e.deltaY
        : 'wheelDeltaY' in e
          ? -e.wheelDeltaY
          : 'wheelDelta' in e
            ? -e.wheelDelta
            : 0;
    },
    deltaZ: 0,
    deltaMode: 0,
  }),
  P3 = Dn(A3),
  q3 = [9, 13, 27, 32],
  Gh = Xr && 'CompositionEvent' in window,
  aa = null;
Xr && 'documentMode' in document && (aa = document.documentMode);
var I3 = Xr && 'TextEvent' in window && !aa,
  Jv = Xr && (!Gh || (aa && 8 < aa && 11 >= aa)),
  Hg = ' ',
  Qg = !1;
function Zv(e, t) {
  switch (e) {
    case 'keyup':
      return q3.indexOf(t.keyCode) !== -1;
    case 'keydown':
      return t.keyCode !== 229;
    case 'keypress':
    case 'mousedown':
    case 'focusout':
      return !0;
    default:
      return !1;
  }
}
function eb(e) {
  return (e = e.detail), typeof e == 'object' && 'data' in e ? e.data : null;
}
var qo = !1;
function F3(e, t) {
  switch (e) {
    case 'compositionend':
      return eb(t);
    case 'keypress':
      return t.which !== 32 ? null : ((Qg = !0), Hg);
    case 'textInput':
      return (e = t.data), e === Hg && Qg ? null : e;
    default:
      return null;
  }
}
function R3(e, t) {
  if (qo)
    return e === 'compositionend' || (!Gh && Zv(e, t))
      ? ((e = Yv()), (uu = Uh = bi = null), (qo = !1), e)
      : null;
  switch (e) {
    case 'paste':
      return null;
    case 'keypress':
      if (!(t.ctrlKey || t.altKey || t.metaKey) || (t.ctrlKey && t.altKey)) {
        if (t.char && 1 < t.char.length) return t.char;
        if (t.which) return String.fromCharCode(t.which);
      }
      return null;
    case 'compositionend':
      return Jv && t.locale !== 'ko' ? null : t.data;
    default:
      return null;
  }
}
var O3 = {
  color: !0,
  date: !0,
  datetime: !0,
  'datetime-local': !0,
  email: !0,
  month: !0,
  number: !0,
  password: !0,
  range: !0,
  search: !0,
  tel: !0,
  text: !0,
  time: !0,
  url: !0,
  week: !0,
};
function Gg(e) {
  var t = e && e.nodeName && e.nodeName.toLowerCase();
  return t === 'input' ? !!O3[e.type] : t === 'textarea';
}
function tb(e, t, r, n) {
  Fv(n),
    (t = Vu(t, 'onChange')),
    0 < t.length &&
      ((r = new Hh('onChange', 'change', null, r, n)),
      e.push({ event: r, listeners: t }));
}
var la = null,
  Fa = null;
function L3(e) {
  db(e, 0);
}
function xc(e) {
  var t = Ro(e);
  if (Ev(t)) return e;
}
function M3(e, t) {
  if (e === 'change') return t;
}
var nb = !1;
if (Xr) {
  var ld;
  if (Xr) {
    var ud = 'oninput' in document;
    if (!ud) {
      var Kg = document.createElement('div');
      Kg.setAttribute('oninput', 'return;'),
        (ud = typeof Kg.oninput == 'function');
    }
    ld = ud;
  } else ld = !1;
  nb = ld && (!document.documentMode || 9 < document.documentMode);
}
function Xg() {
  la && (la.detachEvent('onpropertychange', rb), (Fa = la = null));
}
function rb(e) {
  if (e.propertyName === 'value' && xc(Fa)) {
    var t = [];
    tb(t, Fa, e, Nh(e)), Mv(L3, t);
  }
}
function D3(e, t, r) {
  e === 'focusin'
    ? (Xg(), (la = t), (Fa = r), la.attachEvent('onpropertychange', rb))
    : e === 'focusout' && Xg();
}
function z3(e) {
  if (e === 'selectionchange' || e === 'keyup' || e === 'keydown')
    return xc(Fa);
}
function $3(e, t) {
  if (e === 'click') return xc(t);
}
function N3(e, t) {
  if (e === 'input' || e === 'change') return xc(t);
}
function j3(e, t) {
  return (e === t && (e !== 0 || 1 / e === 1 / t)) || (e !== e && t !== t);
}
var dr = typeof Object.is == 'function' ? Object.is : j3;
function Ra(e, t) {
  if (dr(e, t)) return !0;
  if (typeof e != 'object' || e === null || typeof t != 'object' || t === null)
    return !1;
  var r = Object.keys(e),
    n = Object.keys(t);
  if (r.length !== n.length) return !1;
  for (n = 0; n < r.length; n++) {
    var i = r[n];
    if (!op.call(t, i) || !dr(e[i], t[i])) return !1;
  }
  return !0;
}
function Yg(e) {
  for (; e && e.firstChild; ) e = e.firstChild;
  return e;
}
function Jg(e, t) {
  var r = Yg(e);
  e = 0;
  for (var n; r; ) {
    if (r.nodeType === 3) {
      if (((n = e + r.textContent.length), e <= t && n >= t))
        return { node: r, offset: t - e };
      e = n;
    }
    e: {
      for (; r; ) {
        if (r.nextSibling) {
          r = r.nextSibling;
          break e;
        }
        r = r.parentNode;
      }
      r = void 0;
    }
    r = Yg(r);
  }
}
function ib(e, t) {
  return e && t
    ? e === t
      ? !0
      : e && e.nodeType === 3
        ? !1
        : t && t.nodeType === 3
          ? ib(e, t.parentNode)
          : 'contains' in e
            ? e.contains(t)
            : e.compareDocumentPosition
              ? !!(e.compareDocumentPosition(t) & 16)
              : !1
    : !1;
}
function ob() {
  for (var e = window, t = Mu(); t instanceof e.HTMLIFrameElement; ) {
    try {
      var r = typeof t.contentWindow.location.href == 'string';
    } catch {
      r = !1;
    }
    if (r) e = t.contentWindow;
    else break;
    t = Mu(e.document);
  }
  return t;
}
function Kh(e) {
  var t = e && e.nodeName && e.nodeName.toLowerCase();
  return (
    t &&
    ((t === 'input' &&
      (e.type === 'text' ||
        e.type === 'search' ||
        e.type === 'tel' ||
        e.type === 'url' ||
        e.type === 'password')) ||
      t === 'textarea' ||
      e.contentEditable === 'true')
  );
}
function B3(e) {
  var t = ob(),
    r = e.focusedElem,
    n = e.selectionRange;
  if (
    t !== r &&
    r &&
    r.ownerDocument &&
    ib(r.ownerDocument.documentElement, r)
  ) {
    if (n !== null && Kh(r)) {
      if (
        ((t = n.start),
        (e = n.end),
        e === void 0 && (e = t),
        'selectionStart' in r)
      )
        (r.selectionStart = t), (r.selectionEnd = Math.min(e, r.value.length));
      else if (
        ((e = ((t = r.ownerDocument || document) && t.defaultView) || window),
        e.getSelection)
      ) {
        e = e.getSelection();
        var i = r.textContent.length,
          o = Math.min(n.start, i);
        (n = n.end === void 0 ? o : Math.min(n.end, i)),
          !e.extend && o > n && ((i = n), (n = o), (o = i)),
          (i = Jg(r, o));
        var s = Jg(r, n);
        i &&
          s &&
          (e.rangeCount !== 1 ||
            e.anchorNode !== i.node ||
            e.anchorOffset !== i.offset ||
            e.focusNode !== s.node ||
            e.focusOffset !== s.offset) &&
          ((t = t.createRange()),
          t.setStart(i.node, i.offset),
          e.removeAllRanges(),
          o > n
            ? (e.addRange(t), e.extend(s.node, s.offset))
            : (t.setEnd(s.node, s.offset), e.addRange(t)));
      }
    }
    for (t = [], e = r; (e = e.parentNode); )
      e.nodeType === 1 &&
        t.push({ element: e, left: e.scrollLeft, top: e.scrollTop });
    for (typeof r.focus == 'function' && r.focus(), r = 0; r < t.length; r++)
      (e = t[r]),
        (e.element.scrollLeft = e.left),
        (e.element.scrollTop = e.top);
  }
}
var V3 = Xr && 'documentMode' in document && 11 >= document.documentMode,
  Io = null,
  kp = null,
  ua = null,
  Ep = !1;
function Zg(e, t, r) {
  var n = r.window === r ? r.document : r.nodeType === 9 ? r : r.ownerDocument;
  Ep ||
    Io == null ||
    Io !== Mu(n) ||
    ((n = Io),
    'selectionStart' in n && Kh(n)
      ? (n = { start: n.selectionStart, end: n.selectionEnd })
      : ((n = (
          (n.ownerDocument && n.ownerDocument.defaultView) ||
          window
        ).getSelection()),
        (n = {
          anchorNode: n.anchorNode,
          anchorOffset: n.anchorOffset,
          focusNode: n.focusNode,
          focusOffset: n.focusOffset,
        })),
    (ua && Ra(ua, n)) ||
      ((ua = n),
      (n = Vu(kp, 'onSelect')),
      0 < n.length &&
        ((t = new Hh('onSelect', 'select', null, t, r)),
        e.push({ event: t, listeners: n }),
        (t.target = Io))));
}
function zl(e, t) {
  var r = {};
  return (
    (r[e.toLowerCase()] = t.toLowerCase()),
    (r['Webkit' + e] = 'webkit' + t),
    (r['Moz' + e] = 'moz' + t),
    r
  );
}
var Fo = {
    animationend: zl('Animation', 'AnimationEnd'),
    animationiteration: zl('Animation', 'AnimationIteration'),
    animationstart: zl('Animation', 'AnimationStart'),
    transitionend: zl('Transition', 'TransitionEnd'),
  },
  cd = {},
  sb = {};
Xr &&
  ((sb = document.createElement('div').style),
  'AnimationEvent' in window ||
    (delete Fo.animationend.animation,
    delete Fo.animationiteration.animation,
    delete Fo.animationstart.animation),
  'TransitionEvent' in window || delete Fo.transitionend.transition);
function kc(e) {
  if (cd[e]) return cd[e];
  if (!Fo[e]) return e;
  var t = Fo[e],
    r;
  for (r in t) if (t.hasOwnProperty(r) && r in sb) return (cd[e] = t[r]);
  return e;
}
var ab = kc('animationend'),
  lb = kc('animationiteration'),
  ub = kc('animationstart'),
  cb = kc('transitionend'),
  fb = new Map(),
  e_ =
    'abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel'.split(
      ' ',
    );
function Li(e, t) {
  fb.set(e, t), mo(t, [e]);
}
for (var fd = 0; fd < e_.length; fd++) {
  var dd = e_[fd],
    W3 = dd.toLowerCase(),
    U3 = dd[0].toUpperCase() + dd.slice(1);
  Li(W3, 'on' + U3);
}
Li(ab, 'onAnimationEnd');
Li(lb, 'onAnimationIteration');
Li(ub, 'onAnimationStart');
Li('dblclick', 'onDoubleClick');
Li('focusin', 'onFocus');
Li('focusout', 'onBlur');
Li(cb, 'onTransitionEnd');
us('onMouseEnter', ['mouseout', 'mouseover']);
us('onMouseLeave', ['mouseout', 'mouseover']);
us('onPointerEnter', ['pointerout', 'pointerover']);
us('onPointerLeave', ['pointerout', 'pointerover']);
mo(
  'onChange',
  'change click focusin focusout input keydown keyup selectionchange'.split(
    ' ',
  ),
);
mo(
  'onSelect',
  'focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange'.split(
    ' ',
  ),
);
mo('onBeforeInput', ['compositionend', 'keypress', 'textInput', 'paste']);
mo(
  'onCompositionEnd',
  'compositionend focusout keydown keypress keyup mousedown'.split(' '),
);
mo(
  'onCompositionStart',
  'compositionstart focusout keydown keypress keyup mousedown'.split(' '),
);
mo(
  'onCompositionUpdate',
  'compositionupdate focusout keydown keypress keyup mousedown'.split(' '),
);
var Ys =
    'abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting'.split(
      ' ',
    ),
  H3 = new Set('cancel close invalid load scroll toggle'.split(' ').concat(Ys));
function t_(e, t, r) {
  var n = e.type || 'unknown-event';
  (e.currentTarget = r), Wx(n, t, void 0, e), (e.currentTarget = null);
}
function db(e, t) {
  t = (t & 4) !== 0;
  for (var r = 0; r < e.length; r++) {
    var n = e[r],
      i = n.event;
    n = n.listeners;
    e: {
      var o = void 0;
      if (t)
        for (var s = n.length - 1; 0 <= s; s--) {
          var l = n[s],
            c = l.instance,
            h = l.currentTarget;
          if (((l = l.listener), c !== o && i.isPropagationStopped())) break e;
          t_(i, l, h), (o = c);
        }
      else
        for (s = 0; s < n.length; s++) {
          if (
            ((l = n[s]),
            (c = l.instance),
            (h = l.currentTarget),
            (l = l.listener),
            c !== o && i.isPropagationStopped())
          )
            break e;
          t_(i, l, h), (o = c);
        }
    }
  }
  if (zu) throw ((e = bp), (zu = !1), (bp = null), e);
}
function kt(e, t) {
  var r = t[qp];
  r === void 0 && (r = t[qp] = new Set());
  var n = e + '__bubble';
  r.has(n) || (pb(t, e, 2, !1), r.add(n));
}
function pd(e, t, r) {
  var n = 0;
  t && (n |= 4), pb(r, e, n, t);
}
var $l = '_reactListening' + Math.random().toString(36).slice(2);
function Oa(e) {
  if (!e[$l]) {
    (e[$l] = !0),
      bv.forEach(function (r) {
        r !== 'selectionchange' && (H3.has(r) || pd(r, !1, e), pd(r, !0, e));
      });
    var t = e.nodeType === 9 ? e : e.ownerDocument;
    t === null || t[$l] || ((t[$l] = !0), pd('selectionchange', !1, t));
  }
}
function pb(e, t, r, n) {
  switch (Xv(t)) {
    case 1:
      var i = s3;
      break;
    case 4:
      i = a3;
      break;
    default:
      i = Wh;
  }
  (r = i.bind(null, t, r, e)),
    (i = void 0),
    !vp ||
      (t !== 'touchstart' && t !== 'touchmove' && t !== 'wheel') ||
      (i = !0),
    n
      ? i !== void 0
        ? e.addEventListener(t, r, { capture: !0, passive: i })
        : e.addEventListener(t, r, !0)
      : i !== void 0
        ? e.addEventListener(t, r, { passive: i })
        : e.addEventListener(t, r, !1);
}
function hd(e, t, r, n, i) {
  var o = n;
  if (!(t & 1) && !(t & 2) && n !== null)
    e: for (;;) {
      if (n === null) return;
      var s = n.tag;
      if (s === 3 || s === 4) {
        var l = n.stateNode.containerInfo;
        if (l === i || (l.nodeType === 8 && l.parentNode === i)) break;
        if (s === 4)
          for (s = n.return; s !== null; ) {
            var c = s.tag;
            if (
              (c === 3 || c === 4) &&
              ((c = s.stateNode.containerInfo),
              c === i || (c.nodeType === 8 && c.parentNode === i))
            )
              return;
            s = s.return;
          }
        for (; l !== null; ) {
          if (((s = Xi(l)), s === null)) return;
          if (((c = s.tag), c === 5 || c === 6)) {
            n = o = s;
            continue e;
          }
          l = l.parentNode;
        }
      }
      n = n.return;
    }
  Mv(function () {
    var h = o,
      y = Nh(r),
      m = [];
    e: {
      var x = fb.get(e);
      if (x !== void 0) {
        var I = Hh,
          $ = e;
        switch (e) {
          case 'keypress':
            if (cu(r) === 0) break e;
          case 'keydown':
          case 'keyup':
            I = S3;
            break;
          case 'focusin':
            ($ = 'focus'), (I = ad);
            break;
          case 'focusout':
            ($ = 'blur'), (I = ad);
            break;
          case 'beforeblur':
          case 'afterblur':
            I = ad;
            break;
          case 'click':
            if (r.button === 2) break e;
          case 'auxclick':
          case 'dblclick':
          case 'mousedown':
          case 'mousemove':
          case 'mouseup':
          case 'mouseout':
          case 'mouseover':
          case 'contextmenu':
            I = Vg;
            break;
          case 'drag':
          case 'dragend':
          case 'dragenter':
          case 'dragexit':
          case 'dragleave':
          case 'dragover':
          case 'dragstart':
          case 'drop':
            I = c3;
            break;
          case 'touchcancel':
          case 'touchend':
          case 'touchmove':
          case 'touchstart':
            I = E3;
            break;
          case ab:
          case lb:
          case ub:
            I = p3;
            break;
          case cb:
            I = C3;
            break;
          case 'scroll':
            I = l3;
            break;
          case 'wheel':
            I = P3;
            break;
          case 'copy':
          case 'cut':
          case 'paste':
            I = m3;
            break;
          case 'gotpointercapture':
          case 'lostpointercapture':
          case 'pointercancel':
          case 'pointerdown':
          case 'pointermove':
          case 'pointerout':
          case 'pointerover':
          case 'pointerup':
            I = Ug;
        }
        var j = (t & 4) !== 0,
          G = !j && e === 'scroll',
          C = j ? (x !== null ? x + 'Capture' : null) : x;
        j = [];
        for (var T = h, q; T !== null; ) {
          q = T;
          var H = q.stateNode;
          if (
            (q.tag === 5 &&
              H !== null &&
              ((q = H),
              C !== null && ((H = Aa(T, C)), H != null && j.push(La(T, H, q)))),
            G)
          )
            break;
          T = T.return;
        }
        0 < j.length &&
          ((x = new I(x, $, null, r, y)), m.push({ event: x, listeners: j }));
      }
    }
    if (!(t & 7)) {
      e: {
        if (
          ((x = e === 'mouseover' || e === 'pointerover'),
          (I = e === 'mouseout' || e === 'pointerout'),
          x &&
            r !== _p &&
            ($ = r.relatedTarget || r.fromElement) &&
            (Xi($) || $[Yr]))
        )
          break e;
        if (
          (I || x) &&
          ((x =
            y.window === y
              ? y
              : (x = y.ownerDocument)
                ? x.defaultView || x.parentWindow
                : window),
          I
            ? (($ = r.relatedTarget || r.toElement),
              (I = h),
              ($ = $ ? Xi($) : null),
              $ !== null &&
                ((G = go($)), $ !== G || ($.tag !== 5 && $.tag !== 6)) &&
                ($ = null))
            : ((I = null), ($ = h)),
          I !== $)
        ) {
          if (
            ((j = Vg),
            (H = 'onMouseLeave'),
            (C = 'onMouseEnter'),
            (T = 'mouse'),
            (e === 'pointerout' || e === 'pointerover') &&
              ((j = Ug),
              (H = 'onPointerLeave'),
              (C = 'onPointerEnter'),
              (T = 'pointer')),
            (G = I == null ? x : Ro(I)),
            (q = $ == null ? x : Ro($)),
            (x = new j(H, T + 'leave', I, r, y)),
            (x.target = G),
            (x.relatedTarget = q),
            (H = null),
            Xi(y) === h &&
              ((j = new j(C, T + 'enter', $, r, y)),
              (j.target = q),
              (j.relatedTarget = G),
              (H = j)),
            (G = H),
            I && $)
          )
            t: {
              for (j = I, C = $, T = 0, q = j; q; q = Eo(q)) T++;
              for (q = 0, H = C; H; H = Eo(H)) q++;
              for (; 0 < T - q; ) (j = Eo(j)), T--;
              for (; 0 < q - T; ) (C = Eo(C)), q--;
              for (; T--; ) {
                if (j === C || (C !== null && j === C.alternate)) break t;
                (j = Eo(j)), (C = Eo(C));
              }
              j = null;
            }
          else j = null;
          I !== null && n_(m, x, I, j, !1),
            $ !== null && G !== null && n_(m, G, $, j, !0);
        }
      }
      e: {
        if (
          ((x = h ? Ro(h) : window),
          (I = x.nodeName && x.nodeName.toLowerCase()),
          I === 'select' || (I === 'input' && x.type === 'file'))
        )
          var ie = M3;
        else if (Gg(x))
          if (nb) ie = N3;
          else {
            ie = z3;
            var he = D3;
          }
        else
          (I = x.nodeName) &&
            I.toLowerCase() === 'input' &&
            (x.type === 'checkbox' || x.type === 'radio') &&
            (ie = $3);
        if (ie && (ie = ie(e, h))) {
          tb(m, ie, r, y);
          break e;
        }
        he && he(e, x, h),
          e === 'focusout' &&
            (he = x._wrapperState) &&
            he.controlled &&
            x.type === 'number' &&
            dp(x, 'number', x.value);
      }
      switch (((he = h ? Ro(h) : window), e)) {
        case 'focusin':
          (Gg(he) || he.contentEditable === 'true') &&
            ((Io = he), (kp = h), (ua = null));
          break;
        case 'focusout':
          ua = kp = Io = null;
          break;
        case 'mousedown':
          Ep = !0;
          break;
        case 'contextmenu':
        case 'mouseup':
        case 'dragend':
          (Ep = !1), Zg(m, r, y);
          break;
        case 'selectionchange':
          if (V3) break;
        case 'keydown':
        case 'keyup':
          Zg(m, r, y);
      }
      var le;
      if (Gh)
        e: {
          switch (e) {
            case 'compositionstart':
              var de = 'onCompositionStart';
              break e;
            case 'compositionend':
              de = 'onCompositionEnd';
              break e;
            case 'compositionupdate':
              de = 'onCompositionUpdate';
              break e;
          }
          de = void 0;
        }
      else
        qo
          ? Zv(e, r) && (de = 'onCompositionEnd')
          : e === 'keydown' && r.keyCode === 229 && (de = 'onCompositionStart');
      de &&
        (Jv &&
          r.locale !== 'ko' &&
          (qo || de !== 'onCompositionStart'
            ? de === 'onCompositionEnd' && qo && (le = Yv())
            : ((bi = y),
              (Uh = 'value' in bi ? bi.value : bi.textContent),
              (qo = !0))),
        (he = Vu(h, de)),
        0 < he.length &&
          ((de = new Wg(de, e, null, r, y)),
          m.push({ event: de, listeners: he }),
          le ? (de.data = le) : ((le = eb(r)), le !== null && (de.data = le)))),
        (le = I3 ? F3(e, r) : R3(e, r)) &&
          ((h = Vu(h, 'onBeforeInput')),
          0 < h.length &&
            ((y = new Wg('onBeforeInput', 'beforeinput', null, r, y)),
            m.push({ event: y, listeners: h }),
            (y.data = le)));
    }
    db(m, t);
  });
}
function La(e, t, r) {
  return { instance: e, listener: t, currentTarget: r };
}
function Vu(e, t) {
  for (var r = t + 'Capture', n = []; e !== null; ) {
    var i = e,
      o = i.stateNode;
    i.tag === 5 &&
      o !== null &&
      ((i = o),
      (o = Aa(e, r)),
      o != null && n.unshift(La(e, o, i)),
      (o = Aa(e, t)),
      o != null && n.push(La(e, o, i))),
      (e = e.return);
  }
  return n;
}
function Eo(e) {
  if (e === null) return null;
  do e = e.return;
  while (e && e.tag !== 5);
  return e || null;
}
function n_(e, t, r, n, i) {
  for (var o = t._reactName, s = []; r !== null && r !== n; ) {
    var l = r,
      c = l.alternate,
      h = l.stateNode;
    if (c !== null && c === n) break;
    l.tag === 5 &&
      h !== null &&
      ((l = h),
      i
        ? ((c = Aa(r, o)), c != null && s.unshift(La(r, c, l)))
        : i || ((c = Aa(r, o)), c != null && s.push(La(r, c, l)))),
      (r = r.return);
  }
  s.length !== 0 && e.push({ event: t, listeners: s });
}
var Q3 = /\r\n?/g,
  G3 = /\u0000|\uFFFD/g;
function r_(e) {
  return (typeof e == 'string' ? e : '' + e)
    .replace(
      Q3,
      `
`,
    )
    .replace(G3, '');
}
function Nl(e, t, r) {
  if (((t = r_(t)), r_(e) !== t && r)) throw Error(ve(425));
}
function Wu() {}
var Tp = null,
  Cp = null;
function Ap(e, t) {
  return (
    e === 'textarea' ||
    e === 'noscript' ||
    typeof t.children == 'string' ||
    typeof t.children == 'number' ||
    (typeof t.dangerouslySetInnerHTML == 'object' &&
      t.dangerouslySetInnerHTML !== null &&
      t.dangerouslySetInnerHTML.__html != null)
  );
}
var Pp = typeof setTimeout == 'function' ? setTimeout : void 0,
  K3 = typeof clearTimeout == 'function' ? clearTimeout : void 0,
  i_ = typeof Promise == 'function' ? Promise : void 0,
  X3 =
    typeof queueMicrotask == 'function'
      ? queueMicrotask
      : typeof i_ < 'u'
        ? function (e) {
            return i_.resolve(null).then(e).catch(Y3);
          }
        : Pp;
function Y3(e) {
  setTimeout(function () {
    throw e;
  });
}
function md(e, t) {
  var r = t,
    n = 0;
  do {
    var i = r.nextSibling;
    if ((e.removeChild(r), i && i.nodeType === 8))
      if (((r = i.data), r === '/$')) {
        if (n === 0) {
          e.removeChild(i), Ia(t);
          return;
        }
        n--;
      } else (r !== '$' && r !== '$?' && r !== '$!') || n++;
    r = i;
  } while (r);
  Ia(t);
}
function Ti(e) {
  for (; e != null; e = e.nextSibling) {
    var t = e.nodeType;
    if (t === 1 || t === 3) break;
    if (t === 8) {
      if (((t = e.data), t === '$' || t === '$!' || t === '$?')) break;
      if (t === '/$') return null;
    }
  }
  return e;
}
function o_(e) {
  e = e.previousSibling;
  for (var t = 0; e; ) {
    if (e.nodeType === 8) {
      var r = e.data;
      if (r === '$' || r === '$!' || r === '$?') {
        if (t === 0) return e;
        t--;
      } else r === '/$' && t++;
    }
    e = e.previousSibling;
  }
  return null;
}
var xs = Math.random().toString(36).slice(2),
  Sr = '__reactFiber$' + xs,
  Ma = '__reactProps$' + xs,
  Yr = '__reactContainer$' + xs,
  qp = '__reactEvents$' + xs,
  J3 = '__reactListeners$' + xs,
  Z3 = '__reactHandles$' + xs;
function Xi(e) {
  var t = e[Sr];
  if (t) return t;
  for (var r = e.parentNode; r; ) {
    if ((t = r[Yr] || r[Sr])) {
      if (
        ((r = t.alternate),
        t.child !== null || (r !== null && r.child !== null))
      )
        for (e = o_(e); e !== null; ) {
          if ((r = e[Sr])) return r;
          e = o_(e);
        }
      return t;
    }
    (e = r), (r = e.parentNode);
  }
  return null;
}
function sl(e) {
  return (
    (e = e[Sr] || e[Yr]),
    !e || (e.tag !== 5 && e.tag !== 6 && e.tag !== 13 && e.tag !== 3) ? null : e
  );
}
function Ro(e) {
  if (e.tag === 5 || e.tag === 6) return e.stateNode;
  throw Error(ve(33));
}
function Ec(e) {
  return e[Ma] || null;
}
var Ip = [],
  Oo = -1;
function Mi(e) {
  return { current: e };
}
function Tt(e) {
  0 > Oo || ((e.current = Ip[Oo]), (Ip[Oo] = null), Oo--);
}
function yt(e, t) {
  Oo++, (Ip[Oo] = e.current), (e.current = t);
}
var Fi = {},
  cn = Mi(Fi),
  xn = Mi(!1),
  lo = Fi;
function cs(e, t) {
  var r = e.type.contextTypes;
  if (!r) return Fi;
  var n = e.stateNode;
  if (n && n.__reactInternalMemoizedUnmaskedChildContext === t)
    return n.__reactInternalMemoizedMaskedChildContext;
  var i = {},
    o;
  for (o in r) i[o] = t[o];
  return (
    n &&
      ((e = e.stateNode),
      (e.__reactInternalMemoizedUnmaskedChildContext = t),
      (e.__reactInternalMemoizedMaskedChildContext = i)),
    i
  );
}
function kn(e) {
  return (e = e.childContextTypes), e != null;
}
function Uu() {
  Tt(xn), Tt(cn);
}
function s_(e, t, r) {
  if (cn.current !== Fi) throw Error(ve(168));
  yt(cn, t), yt(xn, r);
}
function hb(e, t, r) {
  var n = e.stateNode;
  if (((t = t.childContextTypes), typeof n.getChildContext != 'function'))
    return r;
  n = n.getChildContext();
  for (var i in n) if (!(i in t)) throw Error(ve(108, Dx(e) || 'Unknown', i));
  return Ft({}, r, n);
}
function Hu(e) {
  return (
    (e =
      ((e = e.stateNode) && e.__reactInternalMemoizedMergedChildContext) || Fi),
    (lo = cn.current),
    yt(cn, e),
    yt(xn, xn.current),
    !0
  );
}
function a_(e, t, r) {
  var n = e.stateNode;
  if (!n) throw Error(ve(169));
  r
    ? ((e = hb(e, t, lo)),
      (n.__reactInternalMemoizedMergedChildContext = e),
      Tt(xn),
      Tt(cn),
      yt(cn, e))
    : Tt(xn),
    yt(xn, r);
}
var Mr = null,
  Tc = !1,
  gd = !1;
function mb(e) {
  Mr === null ? (Mr = [e]) : Mr.push(e);
}
function ek(e) {
  (Tc = !0), mb(e);
}
function Di() {
  if (!gd && Mr !== null) {
    gd = !0;
    var e = 0,
      t = ft;
    try {
      var r = Mr;
      for (ft = 1; e < r.length; e++) {
        var n = r[e];
        do n = n(!0);
        while (n !== null);
      }
      (Mr = null), (Tc = !1);
    } catch (i) {
      throw (Mr !== null && (Mr = Mr.slice(e + 1)), Nv(jh, Di), i);
    } finally {
      (ft = t), (gd = !1);
    }
  }
  return null;
}
var Lo = [],
  Mo = 0,
  Qu = null,
  Gu = 0,
  Qn = [],
  Gn = 0,
  uo = null,
  $r = 1,
  Nr = '';
function Wi(e, t) {
  (Lo[Mo++] = Gu), (Lo[Mo++] = Qu), (Qu = e), (Gu = t);
}
function gb(e, t, r) {
  (Qn[Gn++] = $r), (Qn[Gn++] = Nr), (Qn[Gn++] = uo), (uo = e);
  var n = $r;
  e = Nr;
  var i = 32 - ur(n) - 1;
  (n &= ~(1 << i)), (r += 1);
  var o = 32 - ur(t) + i;
  if (30 < o) {
    var s = i - (i % 5);
    (o = (n & ((1 << s) - 1)).toString(32)),
      (n >>= s),
      (i -= s),
      ($r = (1 << (32 - ur(t) + i)) | (r << i) | n),
      (Nr = o + e);
  } else ($r = (1 << o) | (r << i) | n), (Nr = e);
}
function Xh(e) {
  e.return !== null && (Wi(e, 1), gb(e, 1, 0));
}
function Yh(e) {
  for (; e === Qu; )
    (Qu = Lo[--Mo]), (Lo[Mo] = null), (Gu = Lo[--Mo]), (Lo[Mo] = null);
  for (; e === uo; )
    (uo = Qn[--Gn]),
      (Qn[Gn] = null),
      (Nr = Qn[--Gn]),
      (Qn[Gn] = null),
      ($r = Qn[--Gn]),
      (Qn[Gn] = null);
}
var In = null,
  qn = null,
  Ct = !1,
  ar = null;
function _b(e, t) {
  var r = Kn(5, null, null, 0);
  (r.elementType = 'DELETED'),
    (r.stateNode = t),
    (r.return = e),
    (t = e.deletions),
    t === null ? ((e.deletions = [r]), (e.flags |= 16)) : t.push(r);
}
function l_(e, t) {
  switch (e.tag) {
    case 5:
      var r = e.type;
      return (
        (t =
          t.nodeType !== 1 || r.toLowerCase() !== t.nodeName.toLowerCase()
            ? null
            : t),
        t !== null
          ? ((e.stateNode = t), (In = e), (qn = Ti(t.firstChild)), !0)
          : !1
      );
    case 6:
      return (
        (t = e.pendingProps === '' || t.nodeType !== 3 ? null : t),
        t !== null ? ((e.stateNode = t), (In = e), (qn = null), !0) : !1
      );
    case 13:
      return (
        (t = t.nodeType !== 8 ? null : t),
        t !== null
          ? ((r = uo !== null ? { id: $r, overflow: Nr } : null),
            (e.memoizedState = {
              dehydrated: t,
              treeContext: r,
              retryLane: 1073741824,
            }),
            (r = Kn(18, null, null, 0)),
            (r.stateNode = t),
            (r.return = e),
            (e.child = r),
            (In = e),
            (qn = null),
            !0)
          : !1
      );
    default:
      return !1;
  }
}
function Fp(e) {
  return (e.mode & 1) !== 0 && (e.flags & 128) === 0;
}
function Rp(e) {
  if (Ct) {
    var t = qn;
    if (t) {
      var r = t;
      if (!l_(e, t)) {
        if (Fp(e)) throw Error(ve(418));
        t = Ti(r.nextSibling);
        var n = In;
        t && l_(e, t)
          ? _b(n, r)
          : ((e.flags = (e.flags & -4097) | 2), (Ct = !1), (In = e));
      }
    } else {
      if (Fp(e)) throw Error(ve(418));
      (e.flags = (e.flags & -4097) | 2), (Ct = !1), (In = e);
    }
  }
}
function u_(e) {
  for (e = e.return; e !== null && e.tag !== 5 && e.tag !== 3 && e.tag !== 13; )
    e = e.return;
  In = e;
}
function jl(e) {
  if (e !== In) return !1;
  if (!Ct) return u_(e), (Ct = !0), !1;
  var t;
  if (
    ((t = e.tag !== 3) &&
      !(t = e.tag !== 5) &&
      ((t = e.type),
      (t = t !== 'head' && t !== 'body' && !Ap(e.type, e.memoizedProps))),
    t && (t = qn))
  ) {
    if (Fp(e)) throw (yb(), Error(ve(418)));
    for (; t; ) _b(e, t), (t = Ti(t.nextSibling));
  }
  if ((u_(e), e.tag === 13)) {
    if (((e = e.memoizedState), (e = e !== null ? e.dehydrated : null), !e))
      throw Error(ve(317));
    e: {
      for (e = e.nextSibling, t = 0; e; ) {
        if (e.nodeType === 8) {
          var r = e.data;
          if (r === '/$') {
            if (t === 0) {
              qn = Ti(e.nextSibling);
              break e;
            }
            t--;
          } else (r !== '$' && r !== '$!' && r !== '$?') || t++;
        }
        e = e.nextSibling;
      }
      qn = null;
    }
  } else qn = In ? Ti(e.stateNode.nextSibling) : null;
  return !0;
}
function yb() {
  for (var e = qn; e; ) e = Ti(e.nextSibling);
}
function fs() {
  (qn = In = null), (Ct = !1);
}
function Jh(e) {
  ar === null ? (ar = [e]) : ar.push(e);
}
var tk = ni.ReactCurrentBatchConfig;
function $s(e, t, r) {
  if (
    ((e = r.ref), e !== null && typeof e != 'function' && typeof e != 'object')
  ) {
    if (r._owner) {
      if (((r = r._owner), r)) {
        if (r.tag !== 1) throw Error(ve(309));
        var n = r.stateNode;
      }
      if (!n) throw Error(ve(147, e));
      var i = n,
        o = '' + e;
      return t !== null &&
        t.ref !== null &&
        typeof t.ref == 'function' &&
        t.ref._stringRef === o
        ? t.ref
        : ((t = function (s) {
            var l = i.refs;
            s === null ? delete l[o] : (l[o] = s);
          }),
          (t._stringRef = o),
          t);
    }
    if (typeof e != 'string') throw Error(ve(284));
    if (!r._owner) throw Error(ve(290, e));
  }
  return e;
}
function Bl(e, t) {
  throw (
    ((e = Object.prototype.toString.call(t)),
    Error(
      ve(
        31,
        e === '[object Object]'
          ? 'object with keys {' + Object.keys(t).join(', ') + '}'
          : e,
      ),
    ))
  );
}
function c_(e) {
  var t = e._init;
  return t(e._payload);
}
function vb(e) {
  function t(C, T) {
    if (e) {
      var q = C.deletions;
      q === null ? ((C.deletions = [T]), (C.flags |= 16)) : q.push(T);
    }
  }
  function r(C, T) {
    if (!e) return null;
    for (; T !== null; ) t(C, T), (T = T.sibling);
    return null;
  }
  function n(C, T) {
    for (C = new Map(); T !== null; )
      T.key !== null ? C.set(T.key, T) : C.set(T.index, T), (T = T.sibling);
    return C;
  }
  function i(C, T) {
    return (C = qi(C, T)), (C.index = 0), (C.sibling = null), C;
  }
  function o(C, T, q) {
    return (
      (C.index = q),
      e
        ? ((q = C.alternate),
          q !== null
            ? ((q = q.index), q < T ? ((C.flags |= 2), T) : q)
            : ((C.flags |= 2), T))
        : ((C.flags |= 1048576), T)
    );
  }
  function s(C) {
    return e && C.alternate === null && (C.flags |= 2), C;
  }
  function l(C, T, q, H) {
    return T === null || T.tag !== 6
      ? ((T = xd(q, C.mode, H)), (T.return = C), T)
      : ((T = i(T, q)), (T.return = C), T);
  }
  function c(C, T, q, H) {
    var ie = q.type;
    return ie === Po
      ? y(C, T, q.props.children, H, q.key)
      : T !== null &&
          (T.elementType === ie ||
            (typeof ie == 'object' &&
              ie !== null &&
              ie.$$typeof === mi &&
              c_(ie) === T.type))
        ? ((H = i(T, q.props)), (H.ref = $s(C, T, q)), (H.return = C), H)
        : ((H = _u(q.type, q.key, q.props, null, C.mode, H)),
          (H.ref = $s(C, T, q)),
          (H.return = C),
          H);
  }
  function h(C, T, q, H) {
    return T === null ||
      T.tag !== 4 ||
      T.stateNode.containerInfo !== q.containerInfo ||
      T.stateNode.implementation !== q.implementation
      ? ((T = kd(q, C.mode, H)), (T.return = C), T)
      : ((T = i(T, q.children || [])), (T.return = C), T);
  }
  function y(C, T, q, H, ie) {
    return T === null || T.tag !== 7
      ? ((T = no(q, C.mode, H, ie)), (T.return = C), T)
      : ((T = i(T, q)), (T.return = C), T);
  }
  function m(C, T, q) {
    if ((typeof T == 'string' && T !== '') || typeof T == 'number')
      return (T = xd('' + T, C.mode, q)), (T.return = C), T;
    if (typeof T == 'object' && T !== null) {
      switch (T.$$typeof) {
        case Il:
          return (
            (q = _u(T.type, T.key, T.props, null, C.mode, q)),
            (q.ref = $s(C, null, T)),
            (q.return = C),
            q
          );
        case Ao:
          return (T = kd(T, C.mode, q)), (T.return = C), T;
        case mi:
          var H = T._init;
          return m(C, H(T._payload), q);
      }
      if (Ks(T) || Os(T))
        return (T = no(T, C.mode, q, null)), (T.return = C), T;
      Bl(C, T);
    }
    return null;
  }
  function x(C, T, q, H) {
    var ie = T !== null ? T.key : null;
    if ((typeof q == 'string' && q !== '') || typeof q == 'number')
      return ie !== null ? null : l(C, T, '' + q, H);
    if (typeof q == 'object' && q !== null) {
      switch (q.$$typeof) {
        case Il:
          return q.key === ie ? c(C, T, q, H) : null;
        case Ao:
          return q.key === ie ? h(C, T, q, H) : null;
        case mi:
          return (ie = q._init), x(C, T, ie(q._payload), H);
      }
      if (Ks(q) || Os(q)) return ie !== null ? null : y(C, T, q, H, null);
      Bl(C, q);
    }
    return null;
  }
  function I(C, T, q, H, ie) {
    if ((typeof H == 'string' && H !== '') || typeof H == 'number')
      return (C = C.get(q) || null), l(T, C, '' + H, ie);
    if (typeof H == 'object' && H !== null) {
      switch (H.$$typeof) {
        case Il:
          return (
            (C = C.get(H.key === null ? q : H.key) || null), c(T, C, H, ie)
          );
        case Ao:
          return (
            (C = C.get(H.key === null ? q : H.key) || null), h(T, C, H, ie)
          );
        case mi:
          var he = H._init;
          return I(C, T, q, he(H._payload), ie);
      }
      if (Ks(H) || Os(H)) return (C = C.get(q) || null), y(T, C, H, ie, null);
      Bl(T, H);
    }
    return null;
  }
  function $(C, T, q, H) {
    for (
      var ie = null, he = null, le = T, de = (T = 0), Fe = null;
      le !== null && de < q.length;
      de++
    ) {
      le.index > de ? ((Fe = le), (le = null)) : (Fe = le.sibling);
      var Ae = x(C, le, q[de], H);
      if (Ae === null) {
        le === null && (le = Fe);
        break;
      }
      e && le && Ae.alternate === null && t(C, le),
        (T = o(Ae, T, de)),
        he === null ? (ie = Ae) : (he.sibling = Ae),
        (he = Ae),
        (le = Fe);
    }
    if (de === q.length) return r(C, le), Ct && Wi(C, de), ie;
    if (le === null) {
      for (; de < q.length; de++)
        (le = m(C, q[de], H)),
          le !== null &&
            ((T = o(le, T, de)),
            he === null ? (ie = le) : (he.sibling = le),
            (he = le));
      return Ct && Wi(C, de), ie;
    }
    for (le = n(C, le); de < q.length; de++)
      (Fe = I(le, C, de, q[de], H)),
        Fe !== null &&
          (e &&
            Fe.alternate !== null &&
            le.delete(Fe.key === null ? de : Fe.key),
          (T = o(Fe, T, de)),
          he === null ? (ie = Fe) : (he.sibling = Fe),
          (he = Fe));
    return (
      e &&
        le.forEach(function (ut) {
          return t(C, ut);
        }),
      Ct && Wi(C, de),
      ie
    );
  }
  function j(C, T, q, H) {
    var ie = Os(q);
    if (typeof ie != 'function') throw Error(ve(150));
    if (((q = ie.call(q)), q == null)) throw Error(ve(151));
    for (
      var he = (ie = null), le = T, de = (T = 0), Fe = null, Ae = q.next();
      le !== null && !Ae.done;
      de++, Ae = q.next()
    ) {
      le.index > de ? ((Fe = le), (le = null)) : (Fe = le.sibling);
      var ut = x(C, le, Ae.value, H);
      if (ut === null) {
        le === null && (le = Fe);
        break;
      }
      e && le && ut.alternate === null && t(C, le),
        (T = o(ut, T, de)),
        he === null ? (ie = ut) : (he.sibling = ut),
        (he = ut),
        (le = Fe);
    }
    if (Ae.done) return r(C, le), Ct && Wi(C, de), ie;
    if (le === null) {
      for (; !Ae.done; de++, Ae = q.next())
        (Ae = m(C, Ae.value, H)),
          Ae !== null &&
            ((T = o(Ae, T, de)),
            he === null ? (ie = Ae) : (he.sibling = Ae),
            (he = Ae));
      return Ct && Wi(C, de), ie;
    }
    for (le = n(C, le); !Ae.done; de++, Ae = q.next())
      (Ae = I(le, C, de, Ae.value, H)),
        Ae !== null &&
          (e &&
            Ae.alternate !== null &&
            le.delete(Ae.key === null ? de : Ae.key),
          (T = o(Ae, T, de)),
          he === null ? (ie = Ae) : (he.sibling = Ae),
          (he = Ae));
    return (
      e &&
        le.forEach(function (bt) {
          return t(C, bt);
        }),
      Ct && Wi(C, de),
      ie
    );
  }
  function G(C, T, q, H) {
    if (
      (typeof q == 'object' &&
        q !== null &&
        q.type === Po &&
        q.key === null &&
        (q = q.props.children),
      typeof q == 'object' && q !== null)
    ) {
      switch (q.$$typeof) {
        case Il:
          e: {
            for (var ie = q.key, he = T; he !== null; ) {
              if (he.key === ie) {
                if (((ie = q.type), ie === Po)) {
                  if (he.tag === 7) {
                    r(C, he.sibling),
                      (T = i(he, q.props.children)),
                      (T.return = C),
                      (C = T);
                    break e;
                  }
                } else if (
                  he.elementType === ie ||
                  (typeof ie == 'object' &&
                    ie !== null &&
                    ie.$$typeof === mi &&
                    c_(ie) === he.type)
                ) {
                  r(C, he.sibling),
                    (T = i(he, q.props)),
                    (T.ref = $s(C, he, q)),
                    (T.return = C),
                    (C = T);
                  break e;
                }
                r(C, he);
                break;
              } else t(C, he);
              he = he.sibling;
            }
            q.type === Po
              ? ((T = no(q.props.children, C.mode, H, q.key)),
                (T.return = C),
                (C = T))
              : ((H = _u(q.type, q.key, q.props, null, C.mode, H)),
                (H.ref = $s(C, T, q)),
                (H.return = C),
                (C = H));
          }
          return s(C);
        case Ao:
          e: {
            for (he = q.key; T !== null; ) {
              if (T.key === he)
                if (
                  T.tag === 4 &&
                  T.stateNode.containerInfo === q.containerInfo &&
                  T.stateNode.implementation === q.implementation
                ) {
                  r(C, T.sibling),
                    (T = i(T, q.children || [])),
                    (T.return = C),
                    (C = T);
                  break e;
                } else {
                  r(C, T);
                  break;
                }
              else t(C, T);
              T = T.sibling;
            }
            (T = kd(q, C.mode, H)), (T.return = C), (C = T);
          }
          return s(C);
        case mi:
          return (he = q._init), G(C, T, he(q._payload), H);
      }
      if (Ks(q)) return $(C, T, q, H);
      if (Os(q)) return j(C, T, q, H);
      Bl(C, q);
    }
    return (typeof q == 'string' && q !== '') || typeof q == 'number'
      ? ((q = '' + q),
        T !== null && T.tag === 6
          ? (r(C, T.sibling), (T = i(T, q)), (T.return = C), (C = T))
          : (r(C, T), (T = xd(q, C.mode, H)), (T.return = C), (C = T)),
        s(C))
      : r(C, T);
  }
  return G;
}
var ds = vb(!0),
  bb = vb(!1),
  Ku = Mi(null),
  Xu = null,
  Do = null,
  Zh = null;
function em() {
  Zh = Do = Xu = null;
}
function tm(e) {
  var t = Ku.current;
  Tt(Ku), (e._currentValue = t);
}
function Op(e, t, r) {
  for (; e !== null; ) {
    var n = e.alternate;
    if (
      ((e.childLanes & t) !== t
        ? ((e.childLanes |= t), n !== null && (n.childLanes |= t))
        : n !== null && (n.childLanes & t) !== t && (n.childLanes |= t),
      e === r)
    )
      break;
    e = e.return;
  }
}
function ns(e, t) {
  (Xu = e),
    (Zh = Do = null),
    (e = e.dependencies),
    e !== null &&
      e.firstContext !== null &&
      (e.lanes & t && (Sn = !0), (e.firstContext = null));
}
function Yn(e) {
  var t = e._currentValue;
  if (Zh !== e)
    if (((e = { context: e, memoizedValue: t, next: null }), Do === null)) {
      if (Xu === null) throw Error(ve(308));
      (Do = e), (Xu.dependencies = { lanes: 0, firstContext: e });
    } else Do = Do.next = e;
  return t;
}
var Yi = null;
function nm(e) {
  Yi === null ? (Yi = [e]) : Yi.push(e);
}
function wb(e, t, r, n) {
  var i = t.interleaved;
  return (
    i === null ? ((r.next = r), nm(t)) : ((r.next = i.next), (i.next = r)),
    (t.interleaved = r),
    Jr(e, n)
  );
}
function Jr(e, t) {
  e.lanes |= t;
  var r = e.alternate;
  for (r !== null && (r.lanes |= t), r = e, e = e.return; e !== null; )
    (e.childLanes |= t),
      (r = e.alternate),
      r !== null && (r.childLanes |= t),
      (r = e),
      (e = e.return);
  return r.tag === 3 ? r.stateNode : null;
}
var gi = !1;
function rm(e) {
  e.updateQueue = {
    baseState: e.memoizedState,
    firstBaseUpdate: null,
    lastBaseUpdate: null,
    shared: { pending: null, interleaved: null, lanes: 0 },
    effects: null,
  };
}
function Sb(e, t) {
  (e = e.updateQueue),
    t.updateQueue === e &&
      (t.updateQueue = {
        baseState: e.baseState,
        firstBaseUpdate: e.firstBaseUpdate,
        lastBaseUpdate: e.lastBaseUpdate,
        shared: e.shared,
        effects: e.effects,
      });
}
function Vr(e, t) {
  return {
    eventTime: e,
    lane: t,
    tag: 0,
    payload: null,
    callback: null,
    next: null,
  };
}
function Ci(e, t, r) {
  var n = e.updateQueue;
  if (n === null) return null;
  if (((n = n.shared), tt & 2)) {
    var i = n.pending;
    return (
      i === null ? (t.next = t) : ((t.next = i.next), (i.next = t)),
      (n.pending = t),
      Jr(e, r)
    );
  }
  return (
    (i = n.interleaved),
    i === null ? ((t.next = t), nm(n)) : ((t.next = i.next), (i.next = t)),
    (n.interleaved = t),
    Jr(e, r)
  );
}
function fu(e, t, r) {
  if (
    ((t = t.updateQueue), t !== null && ((t = t.shared), (r & 4194240) !== 0))
  ) {
    var n = t.lanes;
    (n &= e.pendingLanes), (r |= n), (t.lanes = r), Bh(e, r);
  }
}
function f_(e, t) {
  var r = e.updateQueue,
    n = e.alternate;
  if (n !== null && ((n = n.updateQueue), r === n)) {
    var i = null,
      o = null;
    if (((r = r.firstBaseUpdate), r !== null)) {
      do {
        var s = {
          eventTime: r.eventTime,
          lane: r.lane,
          tag: r.tag,
          payload: r.payload,
          callback: r.callback,
          next: null,
        };
        o === null ? (i = o = s) : (o = o.next = s), (r = r.next);
      } while (r !== null);
      o === null ? (i = o = t) : (o = o.next = t);
    } else i = o = t;
    (r = {
      baseState: n.baseState,
      firstBaseUpdate: i,
      lastBaseUpdate: o,
      shared: n.shared,
      effects: n.effects,
    }),
      (e.updateQueue = r);
    return;
  }
  (e = r.lastBaseUpdate),
    e === null ? (r.firstBaseUpdate = t) : (e.next = t),
    (r.lastBaseUpdate = t);
}
function Yu(e, t, r, n) {
  var i = e.updateQueue;
  gi = !1;
  var o = i.firstBaseUpdate,
    s = i.lastBaseUpdate,
    l = i.shared.pending;
  if (l !== null) {
    i.shared.pending = null;
    var c = l,
      h = c.next;
    (c.next = null), s === null ? (o = h) : (s.next = h), (s = c);
    var y = e.alternate;
    y !== null &&
      ((y = y.updateQueue),
      (l = y.lastBaseUpdate),
      l !== s &&
        (l === null ? (y.firstBaseUpdate = h) : (l.next = h),
        (y.lastBaseUpdate = c)));
  }
  if (o !== null) {
    var m = i.baseState;
    (s = 0), (y = h = c = null), (l = o);
    do {
      var x = l.lane,
        I = l.eventTime;
      if ((n & x) === x) {
        y !== null &&
          (y = y.next =
            {
              eventTime: I,
              lane: 0,
              tag: l.tag,
              payload: l.payload,
              callback: l.callback,
              next: null,
            });
        e: {
          var $ = e,
            j = l;
          switch (((x = t), (I = r), j.tag)) {
            case 1:
              if ((($ = j.payload), typeof $ == 'function')) {
                m = $.call(I, m, x);
                break e;
              }
              m = $;
              break e;
            case 3:
              $.flags = ($.flags & -65537) | 128;
            case 0:
              if (
                (($ = j.payload),
                (x = typeof $ == 'function' ? $.call(I, m, x) : $),
                x == null)
              )
                break e;
              m = Ft({}, m, x);
              break e;
            case 2:
              gi = !0;
          }
        }
        l.callback !== null &&
          l.lane !== 0 &&
          ((e.flags |= 64),
          (x = i.effects),
          x === null ? (i.effects = [l]) : x.push(l));
      } else
        (I = {
          eventTime: I,
          lane: x,
          tag: l.tag,
          payload: l.payload,
          callback: l.callback,
          next: null,
        }),
          y === null ? ((h = y = I), (c = m)) : (y = y.next = I),
          (s |= x);
      if (((l = l.next), l === null)) {
        if (((l = i.shared.pending), l === null)) break;
        (x = l),
          (l = x.next),
          (x.next = null),
          (i.lastBaseUpdate = x),
          (i.shared.pending = null);
      }
    } while (!0);
    if (
      (y === null && (c = m),
      (i.baseState = c),
      (i.firstBaseUpdate = h),
      (i.lastBaseUpdate = y),
      (t = i.shared.interleaved),
      t !== null)
    ) {
      i = t;
      do (s |= i.lane), (i = i.next);
      while (i !== t);
    } else o === null && (i.shared.lanes = 0);
    (fo |= s), (e.lanes = s), (e.memoizedState = m);
  }
}
function d_(e, t, r) {
  if (((e = t.effects), (t.effects = null), e !== null))
    for (t = 0; t < e.length; t++) {
      var n = e[t],
        i = n.callback;
      if (i !== null) {
        if (((n.callback = null), (n = r), typeof i != 'function'))
          throw Error(ve(191, i));
        i.call(n);
      }
    }
}
var al = {},
  Tr = Mi(al),
  Da = Mi(al),
  za = Mi(al);
function Ji(e) {
  if (e === al) throw Error(ve(174));
  return e;
}
function im(e, t) {
  switch ((yt(za, t), yt(Da, e), yt(Tr, al), (e = t.nodeType), e)) {
    case 9:
    case 11:
      t = (t = t.documentElement) ? t.namespaceURI : hp(null, '');
      break;
    default:
      (e = e === 8 ? t.parentNode : t),
        (t = e.namespaceURI || null),
        (e = e.tagName),
        (t = hp(t, e));
  }
  Tt(Tr), yt(Tr, t);
}
function ps() {
  Tt(Tr), Tt(Da), Tt(za);
}
function xb(e) {
  Ji(za.current);
  var t = Ji(Tr.current),
    r = hp(t, e.type);
  t !== r && (yt(Da, e), yt(Tr, r));
}
function om(e) {
  Da.current === e && (Tt(Tr), Tt(Da));
}
var Pt = Mi(0);
function Ju(e) {
  for (var t = e; t !== null; ) {
    if (t.tag === 13) {
      var r = t.memoizedState;
      if (
        r !== null &&
        ((r = r.dehydrated), r === null || r.data === '$?' || r.data === '$!')
      )
        return t;
    } else if (t.tag === 19 && t.memoizedProps.revealOrder !== void 0) {
      if (t.flags & 128) return t;
    } else if (t.child !== null) {
      (t.child.return = t), (t = t.child);
      continue;
    }
    if (t === e) break;
    for (; t.sibling === null; ) {
      if (t.return === null || t.return === e) return null;
      t = t.return;
    }
    (t.sibling.return = t.return), (t = t.sibling);
  }
  return null;
}
var _d = [];
function sm() {
  for (var e = 0; e < _d.length; e++)
    _d[e]._workInProgressVersionPrimary = null;
  _d.length = 0;
}
var du = ni.ReactCurrentDispatcher,
  yd = ni.ReactCurrentBatchConfig,
  co = 0,
  It = null,
  Nt = null,
  Wt = null,
  Zu = !1,
  ca = !1,
  $a = 0,
  nk = 0;
function nn() {
  throw Error(ve(321));
}
function am(e, t) {
  if (t === null) return !1;
  for (var r = 0; r < t.length && r < e.length; r++)
    if (!dr(e[r], t[r])) return !1;
  return !0;
}
function lm(e, t, r, n, i, o) {
  if (
    ((co = o),
    (It = t),
    (t.memoizedState = null),
    (t.updateQueue = null),
    (t.lanes = 0),
    (du.current = e === null || e.memoizedState === null ? sk : ak),
    (e = r(n, i)),
    ca)
  ) {
    o = 0;
    do {
      if (((ca = !1), ($a = 0), 25 <= o)) throw Error(ve(301));
      (o += 1),
        (Wt = Nt = null),
        (t.updateQueue = null),
        (du.current = lk),
        (e = r(n, i));
    } while (ca);
  }
  if (
    ((du.current = ec),
    (t = Nt !== null && Nt.next !== null),
    (co = 0),
    (Wt = Nt = It = null),
    (Zu = !1),
    t)
  )
    throw Error(ve(300));
  return e;
}
function um() {
  var e = $a !== 0;
  return ($a = 0), e;
}
function yr() {
  var e = {
    memoizedState: null,
    baseState: null,
    baseQueue: null,
    queue: null,
    next: null,
  };
  return Wt === null ? (It.memoizedState = Wt = e) : (Wt = Wt.next = e), Wt;
}
function Jn() {
  if (Nt === null) {
    var e = It.alternate;
    e = e !== null ? e.memoizedState : null;
  } else e = Nt.next;
  var t = Wt === null ? It.memoizedState : Wt.next;
  if (t !== null) (Wt = t), (Nt = e);
  else {
    if (e === null) throw Error(ve(310));
    (Nt = e),
      (e = {
        memoizedState: Nt.memoizedState,
        baseState: Nt.baseState,
        baseQueue: Nt.baseQueue,
        queue: Nt.queue,
        next: null,
      }),
      Wt === null ? (It.memoizedState = Wt = e) : (Wt = Wt.next = e);
  }
  return Wt;
}
function Na(e, t) {
  return typeof t == 'function' ? t(e) : t;
}
function vd(e) {
  var t = Jn(),
    r = t.queue;
  if (r === null) throw Error(ve(311));
  r.lastRenderedReducer = e;
  var n = Nt,
    i = n.baseQueue,
    o = r.pending;
  if (o !== null) {
    if (i !== null) {
      var s = i.next;
      (i.next = o.next), (o.next = s);
    }
    (n.baseQueue = i = o), (r.pending = null);
  }
  if (i !== null) {
    (o = i.next), (n = n.baseState);
    var l = (s = null),
      c = null,
      h = o;
    do {
      var y = h.lane;
      if ((co & y) === y)
        c !== null &&
          (c = c.next =
            {
              lane: 0,
              action: h.action,
              hasEagerState: h.hasEagerState,
              eagerState: h.eagerState,
              next: null,
            }),
          (n = h.hasEagerState ? h.eagerState : e(n, h.action));
      else {
        var m = {
          lane: y,
          action: h.action,
          hasEagerState: h.hasEagerState,
          eagerState: h.eagerState,
          next: null,
        };
        c === null ? ((l = c = m), (s = n)) : (c = c.next = m),
          (It.lanes |= y),
          (fo |= y);
      }
      h = h.next;
    } while (h !== null && h !== o);
    c === null ? (s = n) : (c.next = l),
      dr(n, t.memoizedState) || (Sn = !0),
      (t.memoizedState = n),
      (t.baseState = s),
      (t.baseQueue = c),
      (r.lastRenderedState = n);
  }
  if (((e = r.interleaved), e !== null)) {
    i = e;
    do (o = i.lane), (It.lanes |= o), (fo |= o), (i = i.next);
    while (i !== e);
  } else i === null && (r.lanes = 0);
  return [t.memoizedState, r.dispatch];
}
function bd(e) {
  var t = Jn(),
    r = t.queue;
  if (r === null) throw Error(ve(311));
  r.lastRenderedReducer = e;
  var n = r.dispatch,
    i = r.pending,
    o = t.memoizedState;
  if (i !== null) {
    r.pending = null;
    var s = (i = i.next);
    do (o = e(o, s.action)), (s = s.next);
    while (s !== i);
    dr(o, t.memoizedState) || (Sn = !0),
      (t.memoizedState = o),
      t.baseQueue === null && (t.baseState = o),
      (r.lastRenderedState = o);
  }
  return [o, n];
}
function kb() {}
function Eb(e, t) {
  var r = It,
    n = Jn(),
    i = t(),
    o = !dr(n.memoizedState, i);
  if (
    (o && ((n.memoizedState = i), (Sn = !0)),
    (n = n.queue),
    cm(Ab.bind(null, r, n, e), [e]),
    n.getSnapshot !== t || o || (Wt !== null && Wt.memoizedState.tag & 1))
  ) {
    if (
      ((r.flags |= 2048),
      ja(9, Cb.bind(null, r, n, i, t), void 0, null),
      Ut === null)
    )
      throw Error(ve(349));
    co & 30 || Tb(r, t, i);
  }
  return i;
}
function Tb(e, t, r) {
  (e.flags |= 16384),
    (e = { getSnapshot: t, value: r }),
    (t = It.updateQueue),
    t === null
      ? ((t = { lastEffect: null, stores: null }),
        (It.updateQueue = t),
        (t.stores = [e]))
      : ((r = t.stores), r === null ? (t.stores = [e]) : r.push(e));
}
function Cb(e, t, r, n) {
  (t.value = r), (t.getSnapshot = n), Pb(t) && qb(e);
}
function Ab(e, t, r) {
  return r(function () {
    Pb(t) && qb(e);
  });
}
function Pb(e) {
  var t = e.getSnapshot;
  e = e.value;
  try {
    var r = t();
    return !dr(e, r);
  } catch {
    return !0;
  }
}
function qb(e) {
  var t = Jr(e, 1);
  t !== null && cr(t, e, 1, -1);
}
function p_(e) {
  var t = yr();
  return (
    typeof e == 'function' && (e = e()),
    (t.memoizedState = t.baseState = e),
    (e = {
      pending: null,
      interleaved: null,
      lanes: 0,
      dispatch: null,
      lastRenderedReducer: Na,
      lastRenderedState: e,
    }),
    (t.queue = e),
    (e = e.dispatch = ok.bind(null, It, e)),
    [t.memoizedState, e]
  );
}
function ja(e, t, r, n) {
  return (
    (e = { tag: e, create: t, destroy: r, deps: n, next: null }),
    (t = It.updateQueue),
    t === null
      ? ((t = { lastEffect: null, stores: null }),
        (It.updateQueue = t),
        (t.lastEffect = e.next = e))
      : ((r = t.lastEffect),
        r === null
          ? (t.lastEffect = e.next = e)
          : ((n = r.next), (r.next = e), (e.next = n), (t.lastEffect = e))),
    e
  );
}
function Ib() {
  return Jn().memoizedState;
}
function pu(e, t, r, n) {
  var i = yr();
  (It.flags |= e),
    (i.memoizedState = ja(1 | t, r, void 0, n === void 0 ? null : n));
}
function Cc(e, t, r, n) {
  var i = Jn();
  n = n === void 0 ? null : n;
  var o = void 0;
  if (Nt !== null) {
    var s = Nt.memoizedState;
    if (((o = s.destroy), n !== null && am(n, s.deps))) {
      i.memoizedState = ja(t, r, o, n);
      return;
    }
  }
  (It.flags |= e), (i.memoizedState = ja(1 | t, r, o, n));
}
function h_(e, t) {
  return pu(8390656, 8, e, t);
}
function cm(e, t) {
  return Cc(2048, 8, e, t);
}
function Fb(e, t) {
  return Cc(4, 2, e, t);
}
function Rb(e, t) {
  return Cc(4, 4, e, t);
}
function Ob(e, t) {
  if (typeof t == 'function')
    return (
      (e = e()),
      t(e),
      function () {
        t(null);
      }
    );
  if (t != null)
    return (
      (e = e()),
      (t.current = e),
      function () {
        t.current = null;
      }
    );
}
function Lb(e, t, r) {
  return (
    (r = r != null ? r.concat([e]) : null), Cc(4, 4, Ob.bind(null, t, e), r)
  );
}
function fm() {}
function Mb(e, t) {
  var r = Jn();
  t = t === void 0 ? null : t;
  var n = r.memoizedState;
  return n !== null && t !== null && am(t, n[1])
    ? n[0]
    : ((r.memoizedState = [e, t]), e);
}
function Db(e, t) {
  var r = Jn();
  t = t === void 0 ? null : t;
  var n = r.memoizedState;
  return n !== null && t !== null && am(t, n[1])
    ? n[0]
    : ((e = e()), (r.memoizedState = [e, t]), e);
}
function zb(e, t, r) {
  return co & 21
    ? (dr(r, t) || ((r = Vv()), (It.lanes |= r), (fo |= r), (e.baseState = !0)),
      t)
    : (e.baseState && ((e.baseState = !1), (Sn = !0)), (e.memoizedState = r));
}
function rk(e, t) {
  var r = ft;
  (ft = r !== 0 && 4 > r ? r : 4), e(!0);
  var n = yd.transition;
  yd.transition = {};
  try {
    e(!1), t();
  } finally {
    (ft = r), (yd.transition = n);
  }
}
function $b() {
  return Jn().memoizedState;
}
function ik(e, t, r) {
  var n = Pi(e);
  if (
    ((r = {
      lane: n,
      action: r,
      hasEagerState: !1,
      eagerState: null,
      next: null,
    }),
    Nb(e))
  )
    jb(t, r);
  else if (((r = wb(e, t, r, n)), r !== null)) {
    var i = mn();
    cr(r, e, n, i), Bb(r, t, n);
  }
}
function ok(e, t, r) {
  var n = Pi(e),
    i = { lane: n, action: r, hasEagerState: !1, eagerState: null, next: null };
  if (Nb(e)) jb(t, i);
  else {
    var o = e.alternate;
    if (
      e.lanes === 0 &&
      (o === null || o.lanes === 0) &&
      ((o = t.lastRenderedReducer), o !== null)
    )
      try {
        var s = t.lastRenderedState,
          l = o(s, r);
        if (((i.hasEagerState = !0), (i.eagerState = l), dr(l, s))) {
          var c = t.interleaved;
          c === null
            ? ((i.next = i), nm(t))
            : ((i.next = c.next), (c.next = i)),
            (t.interleaved = i);
          return;
        }
      } catch {
      } finally {
      }
    (r = wb(e, t, i, n)),
      r !== null && ((i = mn()), cr(r, e, n, i), Bb(r, t, n));
  }
}
function Nb(e) {
  var t = e.alternate;
  return e === It || (t !== null && t === It);
}
function jb(e, t) {
  ca = Zu = !0;
  var r = e.pending;
  r === null ? (t.next = t) : ((t.next = r.next), (r.next = t)),
    (e.pending = t);
}
function Bb(e, t, r) {
  if (r & 4194240) {
    var n = t.lanes;
    (n &= e.pendingLanes), (r |= n), (t.lanes = r), Bh(e, r);
  }
}
var ec = {
    readContext: Yn,
    useCallback: nn,
    useContext: nn,
    useEffect: nn,
    useImperativeHandle: nn,
    useInsertionEffect: nn,
    useLayoutEffect: nn,
    useMemo: nn,
    useReducer: nn,
    useRef: nn,
    useState: nn,
    useDebugValue: nn,
    useDeferredValue: nn,
    useTransition: nn,
    useMutableSource: nn,
    useSyncExternalStore: nn,
    useId: nn,
    unstable_isNewReconciler: !1,
  },
  sk = {
    readContext: Yn,
    useCallback: function (e, t) {
      return (yr().memoizedState = [e, t === void 0 ? null : t]), e;
    },
    useContext: Yn,
    useEffect: h_,
    useImperativeHandle: function (e, t, r) {
      return (
        (r = r != null ? r.concat([e]) : null),
        pu(4194308, 4, Ob.bind(null, t, e), r)
      );
    },
    useLayoutEffect: function (e, t) {
      return pu(4194308, 4, e, t);
    },
    useInsertionEffect: function (e, t) {
      return pu(4, 2, e, t);
    },
    useMemo: function (e, t) {
      var r = yr();
      return (
        (t = t === void 0 ? null : t), (e = e()), (r.memoizedState = [e, t]), e
      );
    },
    useReducer: function (e, t, r) {
      var n = yr();
      return (
        (t = r !== void 0 ? r(t) : t),
        (n.memoizedState = n.baseState = t),
        (e = {
          pending: null,
          interleaved: null,
          lanes: 0,
          dispatch: null,
          lastRenderedReducer: e,
          lastRenderedState: t,
        }),
        (n.queue = e),
        (e = e.dispatch = ik.bind(null, It, e)),
        [n.memoizedState, e]
      );
    },
    useRef: function (e) {
      var t = yr();
      return (e = { current: e }), (t.memoizedState = e);
    },
    useState: p_,
    useDebugValue: fm,
    useDeferredValue: function (e) {
      return (yr().memoizedState = e);
    },
    useTransition: function () {
      var e = p_(!1),
        t = e[0];
      return (e = rk.bind(null, e[1])), (yr().memoizedState = e), [t, e];
    },
    useMutableSource: function () {},
    useSyncExternalStore: function (e, t, r) {
      var n = It,
        i = yr();
      if (Ct) {
        if (r === void 0) throw Error(ve(407));
        r = r();
      } else {
        if (((r = t()), Ut === null)) throw Error(ve(349));
        co & 30 || Tb(n, t, r);
      }
      i.memoizedState = r;
      var o = { value: r, getSnapshot: t };
      return (
        (i.queue = o),
        h_(Ab.bind(null, n, o, e), [e]),
        (n.flags |= 2048),
        ja(9, Cb.bind(null, n, o, r, t), void 0, null),
        r
      );
    },
    useId: function () {
      var e = yr(),
        t = Ut.identifierPrefix;
      if (Ct) {
        var r = Nr,
          n = $r;
        (r = (n & ~(1 << (32 - ur(n) - 1))).toString(32) + r),
          (t = ':' + t + 'R' + r),
          (r = $a++),
          0 < r && (t += 'H' + r.toString(32)),
          (t += ':');
      } else (r = nk++), (t = ':' + t + 'r' + r.toString(32) + ':');
      return (e.memoizedState = t);
    },
    unstable_isNewReconciler: !1,
  },
  ak = {
    readContext: Yn,
    useCallback: Mb,
    useContext: Yn,
    useEffect: cm,
    useImperativeHandle: Lb,
    useInsertionEffect: Fb,
    useLayoutEffect: Rb,
    useMemo: Db,
    useReducer: vd,
    useRef: Ib,
    useState: function () {
      return vd(Na);
    },
    useDebugValue: fm,
    useDeferredValue: function (e) {
      var t = Jn();
      return zb(t, Nt.memoizedState, e);
    },
    useTransition: function () {
      var e = vd(Na)[0],
        t = Jn().memoizedState;
      return [e, t];
    },
    useMutableSource: kb,
    useSyncExternalStore: Eb,
    useId: $b,
    unstable_isNewReconciler: !1,
  },
  lk = {
    readContext: Yn,
    useCallback: Mb,
    useContext: Yn,
    useEffect: cm,
    useImperativeHandle: Lb,
    useInsertionEffect: Fb,
    useLayoutEffect: Rb,
    useMemo: Db,
    useReducer: bd,
    useRef: Ib,
    useState: function () {
      return bd(Na);
    },
    useDebugValue: fm,
    useDeferredValue: function (e) {
      var t = Jn();
      return Nt === null ? (t.memoizedState = e) : zb(t, Nt.memoizedState, e);
    },
    useTransition: function () {
      var e = bd(Na)[0],
        t = Jn().memoizedState;
      return [e, t];
    },
    useMutableSource: kb,
    useSyncExternalStore: Eb,
    useId: $b,
    unstable_isNewReconciler: !1,
  };
function or(e, t) {
  if (e && e.defaultProps) {
    (t = Ft({}, t)), (e = e.defaultProps);
    for (var r in e) t[r] === void 0 && (t[r] = e[r]);
    return t;
  }
  return t;
}
function Lp(e, t, r, n) {
  (t = e.memoizedState),
    (r = r(n, t)),
    (r = r == null ? t : Ft({}, t, r)),
    (e.memoizedState = r),
    e.lanes === 0 && (e.updateQueue.baseState = r);
}
var Ac = {
  isMounted: function (e) {
    return (e = e._reactInternals) ? go(e) === e : !1;
  },
  enqueueSetState: function (e, t, r) {
    e = e._reactInternals;
    var n = mn(),
      i = Pi(e),
      o = Vr(n, i);
    (o.payload = t),
      r != null && (o.callback = r),
      (t = Ci(e, o, i)),
      t !== null && (cr(t, e, i, n), fu(t, e, i));
  },
  enqueueReplaceState: function (e, t, r) {
    e = e._reactInternals;
    var n = mn(),
      i = Pi(e),
      o = Vr(n, i);
    (o.tag = 1),
      (o.payload = t),
      r != null && (o.callback = r),
      (t = Ci(e, o, i)),
      t !== null && (cr(t, e, i, n), fu(t, e, i));
  },
  enqueueForceUpdate: function (e, t) {
    e = e._reactInternals;
    var r = mn(),
      n = Pi(e),
      i = Vr(r, n);
    (i.tag = 2),
      t != null && (i.callback = t),
      (t = Ci(e, i, n)),
      t !== null && (cr(t, e, n, r), fu(t, e, n));
  },
};
function m_(e, t, r, n, i, o, s) {
  return (
    (e = e.stateNode),
    typeof e.shouldComponentUpdate == 'function'
      ? e.shouldComponentUpdate(n, o, s)
      : t.prototype && t.prototype.isPureReactComponent
        ? !Ra(r, n) || !Ra(i, o)
        : !0
  );
}
function Vb(e, t, r) {
  var n = !1,
    i = Fi,
    o = t.contextType;
  return (
    typeof o == 'object' && o !== null
      ? (o = Yn(o))
      : ((i = kn(t) ? lo : cn.current),
        (n = t.contextTypes),
        (o = (n = n != null) ? cs(e, i) : Fi)),
    (t = new t(r, o)),
    (e.memoizedState = t.state !== null && t.state !== void 0 ? t.state : null),
    (t.updater = Ac),
    (e.stateNode = t),
    (t._reactInternals = e),
    n &&
      ((e = e.stateNode),
      (e.__reactInternalMemoizedUnmaskedChildContext = i),
      (e.__reactInternalMemoizedMaskedChildContext = o)),
    t
  );
}
function g_(e, t, r, n) {
  (e = t.state),
    typeof t.componentWillReceiveProps == 'function' &&
      t.componentWillReceiveProps(r, n),
    typeof t.UNSAFE_componentWillReceiveProps == 'function' &&
      t.UNSAFE_componentWillReceiveProps(r, n),
    t.state !== e && Ac.enqueueReplaceState(t, t.state, null);
}
function Mp(e, t, r, n) {
  var i = e.stateNode;
  (i.props = r), (i.state = e.memoizedState), (i.refs = {}), rm(e);
  var o = t.contextType;
  typeof o == 'object' && o !== null
    ? (i.context = Yn(o))
    : ((o = kn(t) ? lo : cn.current), (i.context = cs(e, o))),
    (i.state = e.memoizedState),
    (o = t.getDerivedStateFromProps),
    typeof o == 'function' && (Lp(e, t, o, r), (i.state = e.memoizedState)),
    typeof t.getDerivedStateFromProps == 'function' ||
      typeof i.getSnapshotBeforeUpdate == 'function' ||
      (typeof i.UNSAFE_componentWillMount != 'function' &&
        typeof i.componentWillMount != 'function') ||
      ((t = i.state),
      typeof i.componentWillMount == 'function' && i.componentWillMount(),
      typeof i.UNSAFE_componentWillMount == 'function' &&
        i.UNSAFE_componentWillMount(),
      t !== i.state && Ac.enqueueReplaceState(i, i.state, null),
      Yu(e, r, i, n),
      (i.state = e.memoizedState)),
    typeof i.componentDidMount == 'function' && (e.flags |= 4194308);
}
function hs(e, t) {
  try {
    var r = '',
      n = t;
    do (r += Mx(n)), (n = n.return);
    while (n);
    var i = r;
  } catch (o) {
    i =
      `
Error generating stack: ` +
      o.message +
      `
` +
      o.stack;
  }
  return { value: e, source: t, stack: i, digest: null };
}
function wd(e, t, r) {
  return { value: e, source: null, stack: r ?? null, digest: t ?? null };
}
function Dp(e, t) {
  try {
    console.error(t.value);
  } catch (r) {
    setTimeout(function () {
      throw r;
    });
  }
}
var uk = typeof WeakMap == 'function' ? WeakMap : Map;
function Wb(e, t, r) {
  (r = Vr(-1, r)), (r.tag = 3), (r.payload = { element: null });
  var n = t.value;
  return (
    (r.callback = function () {
      nc || ((nc = !0), (Qp = n)), Dp(e, t);
    }),
    r
  );
}
function Ub(e, t, r) {
  (r = Vr(-1, r)), (r.tag = 3);
  var n = e.type.getDerivedStateFromError;
  if (typeof n == 'function') {
    var i = t.value;
    (r.payload = function () {
      return n(i);
    }),
      (r.callback = function () {
        Dp(e, t);
      });
  }
  var o = e.stateNode;
  return (
    o !== null &&
      typeof o.componentDidCatch == 'function' &&
      (r.callback = function () {
        Dp(e, t),
          typeof n != 'function' &&
            (Ai === null ? (Ai = new Set([this])) : Ai.add(this));
        var s = t.stack;
        this.componentDidCatch(t.value, {
          componentStack: s !== null ? s : '',
        });
      }),
    r
  );
}
function __(e, t, r) {
  var n = e.pingCache;
  if (n === null) {
    n = e.pingCache = new uk();
    var i = new Set();
    n.set(t, i);
  } else (i = n.get(t)), i === void 0 && ((i = new Set()), n.set(t, i));
  i.has(r) || (i.add(r), (e = xk.bind(null, e, t, r)), t.then(e, e));
}
function y_(e) {
  do {
    var t;
    if (
      ((t = e.tag === 13) &&
        ((t = e.memoizedState), (t = t !== null ? t.dehydrated !== null : !0)),
      t)
    )
      return e;
    e = e.return;
  } while (e !== null);
  return null;
}
function v_(e, t, r, n, i) {
  return e.mode & 1
    ? ((e.flags |= 65536), (e.lanes = i), e)
    : (e === t
        ? (e.flags |= 65536)
        : ((e.flags |= 128),
          (r.flags |= 131072),
          (r.flags &= -52805),
          r.tag === 1 &&
            (r.alternate === null
              ? (r.tag = 17)
              : ((t = Vr(-1, 1)), (t.tag = 2), Ci(r, t, 1))),
          (r.lanes |= 1)),
      e);
}
var ck = ni.ReactCurrentOwner,
  Sn = !1;
function pn(e, t, r, n) {
  t.child = e === null ? bb(t, null, r, n) : ds(t, e.child, r, n);
}
function b_(e, t, r, n, i) {
  r = r.render;
  var o = t.ref;
  return (
    ns(t, i),
    (n = lm(e, t, r, n, o, i)),
    (r = um()),
    e !== null && !Sn
      ? ((t.updateQueue = e.updateQueue),
        (t.flags &= -2053),
        (e.lanes &= ~i),
        Zr(e, t, i))
      : (Ct && r && Xh(t), (t.flags |= 1), pn(e, t, n, i), t.child)
  );
}
function w_(e, t, r, n, i) {
  if (e === null) {
    var o = r.type;
    return typeof o == 'function' &&
      !vm(o) &&
      o.defaultProps === void 0 &&
      r.compare === null &&
      r.defaultProps === void 0
      ? ((t.tag = 15), (t.type = o), Hb(e, t, o, n, i))
      : ((e = _u(r.type, null, n, t, t.mode, i)),
        (e.ref = t.ref),
        (e.return = t),
        (t.child = e));
  }
  if (((o = e.child), !(e.lanes & i))) {
    var s = o.memoizedProps;
    if (
      ((r = r.compare), (r = r !== null ? r : Ra), r(s, n) && e.ref === t.ref)
    )
      return Zr(e, t, i);
  }
  return (
    (t.flags |= 1),
    (e = qi(o, n)),
    (e.ref = t.ref),
    (e.return = t),
    (t.child = e)
  );
}
function Hb(e, t, r, n, i) {
  if (e !== null) {
    var o = e.memoizedProps;
    if (Ra(o, n) && e.ref === t.ref)
      if (((Sn = !1), (t.pendingProps = n = o), (e.lanes & i) !== 0))
        e.flags & 131072 && (Sn = !0);
      else return (t.lanes = e.lanes), Zr(e, t, i);
  }
  return zp(e, t, r, n, i);
}
function Qb(e, t, r) {
  var n = t.pendingProps,
    i = n.children,
    o = e !== null ? e.memoizedState : null;
  if (n.mode === 'hidden')
    if (!(t.mode & 1))
      (t.memoizedState = { baseLanes: 0, cachePool: null, transitions: null }),
        yt($o, Pn),
        (Pn |= r);
    else {
      if (!(r & 1073741824))
        return (
          (e = o !== null ? o.baseLanes | r : r),
          (t.lanes = t.childLanes = 1073741824),
          (t.memoizedState = {
            baseLanes: e,
            cachePool: null,
            transitions: null,
          }),
          (t.updateQueue = null),
          yt($o, Pn),
          (Pn |= e),
          null
        );
      (t.memoizedState = { baseLanes: 0, cachePool: null, transitions: null }),
        (n = o !== null ? o.baseLanes : r),
        yt($o, Pn),
        (Pn |= n);
    }
  else
    o !== null ? ((n = o.baseLanes | r), (t.memoizedState = null)) : (n = r),
      yt($o, Pn),
      (Pn |= n);
  return pn(e, t, i, r), t.child;
}
function Gb(e, t) {
  var r = t.ref;
  ((e === null && r !== null) || (e !== null && e.ref !== r)) &&
    ((t.flags |= 512), (t.flags |= 2097152));
}
function zp(e, t, r, n, i) {
  var o = kn(r) ? lo : cn.current;
  return (
    (o = cs(t, o)),
    ns(t, i),
    (r = lm(e, t, r, n, o, i)),
    (n = um()),
    e !== null && !Sn
      ? ((t.updateQueue = e.updateQueue),
        (t.flags &= -2053),
        (e.lanes &= ~i),
        Zr(e, t, i))
      : (Ct && n && Xh(t), (t.flags |= 1), pn(e, t, r, i), t.child)
  );
}
function S_(e, t, r, n, i) {
  if (kn(r)) {
    var o = !0;
    Hu(t);
  } else o = !1;
  if ((ns(t, i), t.stateNode === null))
    hu(e, t), Vb(t, r, n), Mp(t, r, n, i), (n = !0);
  else if (e === null) {
    var s = t.stateNode,
      l = t.memoizedProps;
    s.props = l;
    var c = s.context,
      h = r.contextType;
    typeof h == 'object' && h !== null
      ? (h = Yn(h))
      : ((h = kn(r) ? lo : cn.current), (h = cs(t, h)));
    var y = r.getDerivedStateFromProps,
      m =
        typeof y == 'function' ||
        typeof s.getSnapshotBeforeUpdate == 'function';
    m ||
      (typeof s.UNSAFE_componentWillReceiveProps != 'function' &&
        typeof s.componentWillReceiveProps != 'function') ||
      ((l !== n || c !== h) && g_(t, s, n, h)),
      (gi = !1);
    var x = t.memoizedState;
    (s.state = x),
      Yu(t, n, s, i),
      (c = t.memoizedState),
      l !== n || x !== c || xn.current || gi
        ? (typeof y == 'function' && (Lp(t, r, y, n), (c = t.memoizedState)),
          (l = gi || m_(t, r, l, n, x, c, h))
            ? (m ||
                (typeof s.UNSAFE_componentWillMount != 'function' &&
                  typeof s.componentWillMount != 'function') ||
                (typeof s.componentWillMount == 'function' &&
                  s.componentWillMount(),
                typeof s.UNSAFE_componentWillMount == 'function' &&
                  s.UNSAFE_componentWillMount()),
              typeof s.componentDidMount == 'function' && (t.flags |= 4194308))
            : (typeof s.componentDidMount == 'function' && (t.flags |= 4194308),
              (t.memoizedProps = n),
              (t.memoizedState = c)),
          (s.props = n),
          (s.state = c),
          (s.context = h),
          (n = l))
        : (typeof s.componentDidMount == 'function' && (t.flags |= 4194308),
          (n = !1));
  } else {
    (s = t.stateNode),
      Sb(e, t),
      (l = t.memoizedProps),
      (h = t.type === t.elementType ? l : or(t.type, l)),
      (s.props = h),
      (m = t.pendingProps),
      (x = s.context),
      (c = r.contextType),
      typeof c == 'object' && c !== null
        ? (c = Yn(c))
        : ((c = kn(r) ? lo : cn.current), (c = cs(t, c)));
    var I = r.getDerivedStateFromProps;
    (y =
      typeof I == 'function' ||
      typeof s.getSnapshotBeforeUpdate == 'function') ||
      (typeof s.UNSAFE_componentWillReceiveProps != 'function' &&
        typeof s.componentWillReceiveProps != 'function') ||
      ((l !== m || x !== c) && g_(t, s, n, c)),
      (gi = !1),
      (x = t.memoizedState),
      (s.state = x),
      Yu(t, n, s, i);
    var $ = t.memoizedState;
    l !== m || x !== $ || xn.current || gi
      ? (typeof I == 'function' && (Lp(t, r, I, n), ($ = t.memoizedState)),
        (h = gi || m_(t, r, h, n, x, $, c) || !1)
          ? (y ||
              (typeof s.UNSAFE_componentWillUpdate != 'function' &&
                typeof s.componentWillUpdate != 'function') ||
              (typeof s.componentWillUpdate == 'function' &&
                s.componentWillUpdate(n, $, c),
              typeof s.UNSAFE_componentWillUpdate == 'function' &&
                s.UNSAFE_componentWillUpdate(n, $, c)),
            typeof s.componentDidUpdate == 'function' && (t.flags |= 4),
            typeof s.getSnapshotBeforeUpdate == 'function' && (t.flags |= 1024))
          : (typeof s.componentDidUpdate != 'function' ||
              (l === e.memoizedProps && x === e.memoizedState) ||
              (t.flags |= 4),
            typeof s.getSnapshotBeforeUpdate != 'function' ||
              (l === e.memoizedProps && x === e.memoizedState) ||
              (t.flags |= 1024),
            (t.memoizedProps = n),
            (t.memoizedState = $)),
        (s.props = n),
        (s.state = $),
        (s.context = c),
        (n = h))
      : (typeof s.componentDidUpdate != 'function' ||
          (l === e.memoizedProps && x === e.memoizedState) ||
          (t.flags |= 4),
        typeof s.getSnapshotBeforeUpdate != 'function' ||
          (l === e.memoizedProps && x === e.memoizedState) ||
          (t.flags |= 1024),
        (n = !1));
  }
  return $p(e, t, r, n, o, i);
}
function $p(e, t, r, n, i, o) {
  Gb(e, t);
  var s = (t.flags & 128) !== 0;
  if (!n && !s) return i && a_(t, r, !1), Zr(e, t, o);
  (n = t.stateNode), (ck.current = t);
  var l =
    s && typeof r.getDerivedStateFromError != 'function' ? null : n.render();
  return (
    (t.flags |= 1),
    e !== null && s
      ? ((t.child = ds(t, e.child, null, o)), (t.child = ds(t, null, l, o)))
      : pn(e, t, l, o),
    (t.memoizedState = n.state),
    i && a_(t, r, !0),
    t.child
  );
}
function Kb(e) {
  var t = e.stateNode;
  t.pendingContext
    ? s_(e, t.pendingContext, t.pendingContext !== t.context)
    : t.context && s_(e, t.context, !1),
    im(e, t.containerInfo);
}
function x_(e, t, r, n, i) {
  return fs(), Jh(i), (t.flags |= 256), pn(e, t, r, n), t.child;
}
var Np = { dehydrated: null, treeContext: null, retryLane: 0 };
function jp(e) {
  return { baseLanes: e, cachePool: null, transitions: null };
}
function Xb(e, t, r) {
  var n = t.pendingProps,
    i = Pt.current,
    o = !1,
    s = (t.flags & 128) !== 0,
    l;
  if (
    ((l = s) ||
      (l = e !== null && e.memoizedState === null ? !1 : (i & 2) !== 0),
    l
      ? ((o = !0), (t.flags &= -129))
      : (e === null || e.memoizedState !== null) && (i |= 1),
    yt(Pt, i & 1),
    e === null)
  )
    return (
      Rp(t),
      (e = t.memoizedState),
      e !== null && ((e = e.dehydrated), e !== null)
        ? (t.mode & 1
            ? e.data === '$!'
              ? (t.lanes = 8)
              : (t.lanes = 1073741824)
            : (t.lanes = 1),
          null)
        : ((s = n.children),
          (e = n.fallback),
          o
            ? ((n = t.mode),
              (o = t.child),
              (s = { mode: 'hidden', children: s }),
              !(n & 1) && o !== null
                ? ((o.childLanes = 0), (o.pendingProps = s))
                : (o = Ic(s, n, 0, null)),
              (e = no(e, n, r, null)),
              (o.return = t),
              (e.return = t),
              (o.sibling = e),
              (t.child = o),
              (t.child.memoizedState = jp(r)),
              (t.memoizedState = Np),
              e)
            : dm(t, s))
    );
  if (((i = e.memoizedState), i !== null && ((l = i.dehydrated), l !== null)))
    return fk(e, t, s, n, l, i, r);
  if (o) {
    (o = n.fallback), (s = t.mode), (i = e.child), (l = i.sibling);
    var c = { mode: 'hidden', children: n.children };
    return (
      !(s & 1) && t.child !== i
        ? ((n = t.child),
          (n.childLanes = 0),
          (n.pendingProps = c),
          (t.deletions = null))
        : ((n = qi(i, c)), (n.subtreeFlags = i.subtreeFlags & 14680064)),
      l !== null ? (o = qi(l, o)) : ((o = no(o, s, r, null)), (o.flags |= 2)),
      (o.return = t),
      (n.return = t),
      (n.sibling = o),
      (t.child = n),
      (n = o),
      (o = t.child),
      (s = e.child.memoizedState),
      (s =
        s === null
          ? jp(r)
          : {
              baseLanes: s.baseLanes | r,
              cachePool: null,
              transitions: s.transitions,
            }),
      (o.memoizedState = s),
      (o.childLanes = e.childLanes & ~r),
      (t.memoizedState = Np),
      n
    );
  }
  return (
    (o = e.child),
    (e = o.sibling),
    (n = qi(o, { mode: 'visible', children: n.children })),
    !(t.mode & 1) && (n.lanes = r),
    (n.return = t),
    (n.sibling = null),
    e !== null &&
      ((r = t.deletions),
      r === null ? ((t.deletions = [e]), (t.flags |= 16)) : r.push(e)),
    (t.child = n),
    (t.memoizedState = null),
    n
  );
}
function dm(e, t) {
  return (
    (t = Ic({ mode: 'visible', children: t }, e.mode, 0, null)),
    (t.return = e),
    (e.child = t)
  );
}
function Vl(e, t, r, n) {
  return (
    n !== null && Jh(n),
    ds(t, e.child, null, r),
    (e = dm(t, t.pendingProps.children)),
    (e.flags |= 2),
    (t.memoizedState = null),
    e
  );
}
function fk(e, t, r, n, i, o, s) {
  if (r)
    return t.flags & 256
      ? ((t.flags &= -257), (n = wd(Error(ve(422)))), Vl(e, t, s, n))
      : t.memoizedState !== null
        ? ((t.child = e.child), (t.flags |= 128), null)
        : ((o = n.fallback),
          (i = t.mode),
          (n = Ic({ mode: 'visible', children: n.children }, i, 0, null)),
          (o = no(o, i, s, null)),
          (o.flags |= 2),
          (n.return = t),
          (o.return = t),
          (n.sibling = o),
          (t.child = n),
          t.mode & 1 && ds(t, e.child, null, s),
          (t.child.memoizedState = jp(s)),
          (t.memoizedState = Np),
          o);
  if (!(t.mode & 1)) return Vl(e, t, s, null);
  if (i.data === '$!') {
    if (((n = i.nextSibling && i.nextSibling.dataset), n)) var l = n.dgst;
    return (
      (n = l), (o = Error(ve(419))), (n = wd(o, n, void 0)), Vl(e, t, s, n)
    );
  }
  if (((l = (s & e.childLanes) !== 0), Sn || l)) {
    if (((n = Ut), n !== null)) {
      switch (s & -s) {
        case 4:
          i = 2;
          break;
        case 16:
          i = 8;
          break;
        case 64:
        case 128:
        case 256:
        case 512:
        case 1024:
        case 2048:
        case 4096:
        case 8192:
        case 16384:
        case 32768:
        case 65536:
        case 131072:
        case 262144:
        case 524288:
        case 1048576:
        case 2097152:
        case 4194304:
        case 8388608:
        case 16777216:
        case 33554432:
        case 67108864:
          i = 32;
          break;
        case 536870912:
          i = 268435456;
          break;
        default:
          i = 0;
      }
      (i = i & (n.suspendedLanes | s) ? 0 : i),
        i !== 0 &&
          i !== o.retryLane &&
          ((o.retryLane = i), Jr(e, i), cr(n, e, i, -1));
    }
    return ym(), (n = wd(Error(ve(421)))), Vl(e, t, s, n);
  }
  return i.data === '$?'
    ? ((t.flags |= 128),
      (t.child = e.child),
      (t = kk.bind(null, e)),
      (i._reactRetry = t),
      null)
    : ((e = o.treeContext),
      (qn = Ti(i.nextSibling)),
      (In = t),
      (Ct = !0),
      (ar = null),
      e !== null &&
        ((Qn[Gn++] = $r),
        (Qn[Gn++] = Nr),
        (Qn[Gn++] = uo),
        ($r = e.id),
        (Nr = e.overflow),
        (uo = t)),
      (t = dm(t, n.children)),
      (t.flags |= 4096),
      t);
}
function k_(e, t, r) {
  e.lanes |= t;
  var n = e.alternate;
  n !== null && (n.lanes |= t), Op(e.return, t, r);
}
function Sd(e, t, r, n, i) {
  var o = e.memoizedState;
  o === null
    ? (e.memoizedState = {
        isBackwards: t,
        rendering: null,
        renderingStartTime: 0,
        last: n,
        tail: r,
        tailMode: i,
      })
    : ((o.isBackwards = t),
      (o.rendering = null),
      (o.renderingStartTime = 0),
      (o.last = n),
      (o.tail = r),
      (o.tailMode = i));
}
function Yb(e, t, r) {
  var n = t.pendingProps,
    i = n.revealOrder,
    o = n.tail;
  if ((pn(e, t, n.children, r), (n = Pt.current), n & 2))
    (n = (n & 1) | 2), (t.flags |= 128);
  else {
    if (e !== null && e.flags & 128)
      e: for (e = t.child; e !== null; ) {
        if (e.tag === 13) e.memoizedState !== null && k_(e, r, t);
        else if (e.tag === 19) k_(e, r, t);
        else if (e.child !== null) {
          (e.child.return = e), (e = e.child);
          continue;
        }
        if (e === t) break e;
        for (; e.sibling === null; ) {
          if (e.return === null || e.return === t) break e;
          e = e.return;
        }
        (e.sibling.return = e.return), (e = e.sibling);
      }
    n &= 1;
  }
  if ((yt(Pt, n), !(t.mode & 1))) t.memoizedState = null;
  else
    switch (i) {
      case 'forwards':
        for (r = t.child, i = null; r !== null; )
          (e = r.alternate),
            e !== null && Ju(e) === null && (i = r),
            (r = r.sibling);
        (r = i),
          r === null
            ? ((i = t.child), (t.child = null))
            : ((i = r.sibling), (r.sibling = null)),
          Sd(t, !1, i, r, o);
        break;
      case 'backwards':
        for (r = null, i = t.child, t.child = null; i !== null; ) {
          if (((e = i.alternate), e !== null && Ju(e) === null)) {
            t.child = i;
            break;
          }
          (e = i.sibling), (i.sibling = r), (r = i), (i = e);
        }
        Sd(t, !0, r, null, o);
        break;
      case 'together':
        Sd(t, !1, null, null, void 0);
        break;
      default:
        t.memoizedState = null;
    }
  return t.child;
}
function hu(e, t) {
  !(t.mode & 1) &&
    e !== null &&
    ((e.alternate = null), (t.alternate = null), (t.flags |= 2));
}
function Zr(e, t, r) {
  if (
    (e !== null && (t.dependencies = e.dependencies),
    (fo |= t.lanes),
    !(r & t.childLanes))
  )
    return null;
  if (e !== null && t.child !== e.child) throw Error(ve(153));
  if (t.child !== null) {
    for (
      e = t.child, r = qi(e, e.pendingProps), t.child = r, r.return = t;
      e.sibling !== null;
    )
      (e = e.sibling), (r = r.sibling = qi(e, e.pendingProps)), (r.return = t);
    r.sibling = null;
  }
  return t.child;
}
function dk(e, t, r) {
  switch (t.tag) {
    case 3:
      Kb(t), fs();
      break;
    case 5:
      xb(t);
      break;
    case 1:
      kn(t.type) && Hu(t);
      break;
    case 4:
      im(t, t.stateNode.containerInfo);
      break;
    case 10:
      var n = t.type._context,
        i = t.memoizedProps.value;
      yt(Ku, n._currentValue), (n._currentValue = i);
      break;
    case 13:
      if (((n = t.memoizedState), n !== null))
        return n.dehydrated !== null
          ? (yt(Pt, Pt.current & 1), (t.flags |= 128), null)
          : r & t.child.childLanes
            ? Xb(e, t, r)
            : (yt(Pt, Pt.current & 1),
              (e = Zr(e, t, r)),
              e !== null ? e.sibling : null);
      yt(Pt, Pt.current & 1);
      break;
    case 19:
      if (((n = (r & t.childLanes) !== 0), e.flags & 128)) {
        if (n) return Yb(e, t, r);
        t.flags |= 128;
      }
      if (
        ((i = t.memoizedState),
        i !== null &&
          ((i.rendering = null), (i.tail = null), (i.lastEffect = null)),
        yt(Pt, Pt.current),
        n)
      )
        break;
      return null;
    case 22:
    case 23:
      return (t.lanes = 0), Qb(e, t, r);
  }
  return Zr(e, t, r);
}
var Jb, Bp, Zb, e1;
Jb = function (e, t) {
  for (var r = t.child; r !== null; ) {
    if (r.tag === 5 || r.tag === 6) e.appendChild(r.stateNode);
    else if (r.tag !== 4 && r.child !== null) {
      (r.child.return = r), (r = r.child);
      continue;
    }
    if (r === t) break;
    for (; r.sibling === null; ) {
      if (r.return === null || r.return === t) return;
      r = r.return;
    }
    (r.sibling.return = r.return), (r = r.sibling);
  }
};
Bp = function () {};
Zb = function (e, t, r, n) {
  var i = e.memoizedProps;
  if (i !== n) {
    (e = t.stateNode), Ji(Tr.current);
    var o = null;
    switch (r) {
      case 'input':
        (i = cp(e, i)), (n = cp(e, n)), (o = []);
        break;
      case 'select':
        (i = Ft({}, i, { value: void 0 })),
          (n = Ft({}, n, { value: void 0 })),
          (o = []);
        break;
      case 'textarea':
        (i = pp(e, i)), (n = pp(e, n)), (o = []);
        break;
      default:
        typeof i.onClick != 'function' &&
          typeof n.onClick == 'function' &&
          (e.onclick = Wu);
    }
    mp(r, n);
    var s;
    r = null;
    for (h in i)
      if (!n.hasOwnProperty(h) && i.hasOwnProperty(h) && i[h] != null)
        if (h === 'style') {
          var l = i[h];
          for (s in l) l.hasOwnProperty(s) && (r || (r = {}), (r[s] = ''));
        } else
          h !== 'dangerouslySetInnerHTML' &&
            h !== 'children' &&
            h !== 'suppressContentEditableWarning' &&
            h !== 'suppressHydrationWarning' &&
            h !== 'autoFocus' &&
            (Ta.hasOwnProperty(h)
              ? o || (o = [])
              : (o = o || []).push(h, null));
    for (h in n) {
      var c = n[h];
      if (
        ((l = i != null ? i[h] : void 0),
        n.hasOwnProperty(h) && c !== l && (c != null || l != null))
      )
        if (h === 'style')
          if (l) {
            for (s in l)
              !l.hasOwnProperty(s) ||
                (c && c.hasOwnProperty(s)) ||
                (r || (r = {}), (r[s] = ''));
            for (s in c)
              c.hasOwnProperty(s) &&
                l[s] !== c[s] &&
                (r || (r = {}), (r[s] = c[s]));
          } else r || (o || (o = []), o.push(h, r)), (r = c);
        else
          h === 'dangerouslySetInnerHTML'
            ? ((c = c ? c.__html : void 0),
              (l = l ? l.__html : void 0),
              c != null && l !== c && (o = o || []).push(h, c))
            : h === 'children'
              ? (typeof c != 'string' && typeof c != 'number') ||
                (o = o || []).push(h, '' + c)
              : h !== 'suppressContentEditableWarning' &&
                h !== 'suppressHydrationWarning' &&
                (Ta.hasOwnProperty(h)
                  ? (c != null && h === 'onScroll' && kt('scroll', e),
                    o || l === c || (o = []))
                  : (o = o || []).push(h, c));
    }
    r && (o = o || []).push('style', r);
    var h = o;
    (t.updateQueue = h) && (t.flags |= 4);
  }
};
e1 = function (e, t, r, n) {
  r !== n && (t.flags |= 4);
};
function Ns(e, t) {
  if (!Ct)
    switch (e.tailMode) {
      case 'hidden':
        t = e.tail;
        for (var r = null; t !== null; )
          t.alternate !== null && (r = t), (t = t.sibling);
        r === null ? (e.tail = null) : (r.sibling = null);
        break;
      case 'collapsed':
        r = e.tail;
        for (var n = null; r !== null; )
          r.alternate !== null && (n = r), (r = r.sibling);
        n === null
          ? t || e.tail === null
            ? (e.tail = null)
            : (e.tail.sibling = null)
          : (n.sibling = null);
    }
}
function rn(e) {
  var t = e.alternate !== null && e.alternate.child === e.child,
    r = 0,
    n = 0;
  if (t)
    for (var i = e.child; i !== null; )
      (r |= i.lanes | i.childLanes),
        (n |= i.subtreeFlags & 14680064),
        (n |= i.flags & 14680064),
        (i.return = e),
        (i = i.sibling);
  else
    for (i = e.child; i !== null; )
      (r |= i.lanes | i.childLanes),
        (n |= i.subtreeFlags),
        (n |= i.flags),
        (i.return = e),
        (i = i.sibling);
  return (e.subtreeFlags |= n), (e.childLanes = r), t;
}
function pk(e, t, r) {
  var n = t.pendingProps;
  switch ((Yh(t), t.tag)) {
    case 2:
    case 16:
    case 15:
    case 0:
    case 11:
    case 7:
    case 8:
    case 12:
    case 9:
    case 14:
      return rn(t), null;
    case 1:
      return kn(t.type) && Uu(), rn(t), null;
    case 3:
      return (
        (n = t.stateNode),
        ps(),
        Tt(xn),
        Tt(cn),
        sm(),
        n.pendingContext &&
          ((n.context = n.pendingContext), (n.pendingContext = null)),
        (e === null || e.child === null) &&
          (jl(t)
            ? (t.flags |= 4)
            : e === null ||
              (e.memoizedState.isDehydrated && !(t.flags & 256)) ||
              ((t.flags |= 1024), ar !== null && (Xp(ar), (ar = null)))),
        Bp(e, t),
        rn(t),
        null
      );
    case 5:
      om(t);
      var i = Ji(za.current);
      if (((r = t.type), e !== null && t.stateNode != null))
        Zb(e, t, r, n, i),
          e.ref !== t.ref && ((t.flags |= 512), (t.flags |= 2097152));
      else {
        if (!n) {
          if (t.stateNode === null) throw Error(ve(166));
          return rn(t), null;
        }
        if (((e = Ji(Tr.current)), jl(t))) {
          (n = t.stateNode), (r = t.type);
          var o = t.memoizedProps;
          switch (((n[Sr] = t), (n[Ma] = o), (e = (t.mode & 1) !== 0), r)) {
            case 'dialog':
              kt('cancel', n), kt('close', n);
              break;
            case 'iframe':
            case 'object':
            case 'embed':
              kt('load', n);
              break;
            case 'video':
            case 'audio':
              for (i = 0; i < Ys.length; i++) kt(Ys[i], n);
              break;
            case 'source':
              kt('error', n);
              break;
            case 'img':
            case 'image':
            case 'link':
              kt('error', n), kt('load', n);
              break;
            case 'details':
              kt('toggle', n);
              break;
            case 'input':
              Rg(n, o), kt('invalid', n);
              break;
            case 'select':
              (n._wrapperState = { wasMultiple: !!o.multiple }),
                kt('invalid', n);
              break;
            case 'textarea':
              Lg(n, o), kt('invalid', n);
          }
          mp(r, o), (i = null);
          for (var s in o)
            if (o.hasOwnProperty(s)) {
              var l = o[s];
              s === 'children'
                ? typeof l == 'string'
                  ? n.textContent !== l &&
                    (o.suppressHydrationWarning !== !0 &&
                      Nl(n.textContent, l, e),
                    (i = ['children', l]))
                  : typeof l == 'number' &&
                    n.textContent !== '' + l &&
                    (o.suppressHydrationWarning !== !0 &&
                      Nl(n.textContent, l, e),
                    (i = ['children', '' + l]))
                : Ta.hasOwnProperty(s) &&
                  l != null &&
                  s === 'onScroll' &&
                  kt('scroll', n);
            }
          switch (r) {
            case 'input':
              Fl(n), Og(n, o, !0);
              break;
            case 'textarea':
              Fl(n), Mg(n);
              break;
            case 'select':
            case 'option':
              break;
            default:
              typeof o.onClick == 'function' && (n.onclick = Wu);
          }
          (n = i), (t.updateQueue = n), n !== null && (t.flags |= 4);
        } else {
          (s = i.nodeType === 9 ? i : i.ownerDocument),
            e === 'http://www.w3.org/1999/xhtml' && (e = Av(r)),
            e === 'http://www.w3.org/1999/xhtml'
              ? r === 'script'
                ? ((e = s.createElement('div')),
                  (e.innerHTML = '<script></script>'),
                  (e = e.removeChild(e.firstChild)))
                : typeof n.is == 'string'
                  ? (e = s.createElement(r, { is: n.is }))
                  : ((e = s.createElement(r)),
                    r === 'select' &&
                      ((s = e),
                      n.multiple
                        ? (s.multiple = !0)
                        : n.size && (s.size = n.size)))
              : (e = s.createElementNS(e, r)),
            (e[Sr] = t),
            (e[Ma] = n),
            Jb(e, t, !1, !1),
            (t.stateNode = e);
          e: {
            switch (((s = gp(r, n)), r)) {
              case 'dialog':
                kt('cancel', e), kt('close', e), (i = n);
                break;
              case 'iframe':
              case 'object':
              case 'embed':
                kt('load', e), (i = n);
                break;
              case 'video':
              case 'audio':
                for (i = 0; i < Ys.length; i++) kt(Ys[i], e);
                i = n;
                break;
              case 'source':
                kt('error', e), (i = n);
                break;
              case 'img':
              case 'image':
              case 'link':
                kt('error', e), kt('load', e), (i = n);
                break;
              case 'details':
                kt('toggle', e), (i = n);
                break;
              case 'input':
                Rg(e, n), (i = cp(e, n)), kt('invalid', e);
                break;
              case 'option':
                i = n;
                break;
              case 'select':
                (e._wrapperState = { wasMultiple: !!n.multiple }),
                  (i = Ft({}, n, { value: void 0 })),
                  kt('invalid', e);
                break;
              case 'textarea':
                Lg(e, n), (i = pp(e, n)), kt('invalid', e);
                break;
              default:
                i = n;
            }
            mp(r, i), (l = i);
            for (o in l)
              if (l.hasOwnProperty(o)) {
                var c = l[o];
                o === 'style'
                  ? Iv(e, c)
                  : o === 'dangerouslySetInnerHTML'
                    ? ((c = c ? c.__html : void 0), c != null && Pv(e, c))
                    : o === 'children'
                      ? typeof c == 'string'
                        ? (r !== 'textarea' || c !== '') && Ca(e, c)
                        : typeof c == 'number' && Ca(e, '' + c)
                      : o !== 'suppressContentEditableWarning' &&
                        o !== 'suppressHydrationWarning' &&
                        o !== 'autoFocus' &&
                        (Ta.hasOwnProperty(o)
                          ? c != null && o === 'onScroll' && kt('scroll', e)
                          : c != null && Mh(e, o, c, s));
              }
            switch (r) {
              case 'input':
                Fl(e), Og(e, n, !1);
                break;
              case 'textarea':
                Fl(e), Mg(e);
                break;
              case 'option':
                n.value != null && e.setAttribute('value', '' + Ii(n.value));
                break;
              case 'select':
                (e.multiple = !!n.multiple),
                  (o = n.value),
                  o != null
                    ? Jo(e, !!n.multiple, o, !1)
                    : n.defaultValue != null &&
                      Jo(e, !!n.multiple, n.defaultValue, !0);
                break;
              default:
                typeof i.onClick == 'function' && (e.onclick = Wu);
            }
            switch (r) {
              case 'button':
              case 'input':
              case 'select':
              case 'textarea':
                n = !!n.autoFocus;
                break e;
              case 'img':
                n = !0;
                break e;
              default:
                n = !1;
            }
          }
          n && (t.flags |= 4);
        }
        t.ref !== null && ((t.flags |= 512), (t.flags |= 2097152));
      }
      return rn(t), null;
    case 6:
      if (e && t.stateNode != null) e1(e, t, e.memoizedProps, n);
      else {
        if (typeof n != 'string' && t.stateNode === null) throw Error(ve(166));
        if (((r = Ji(za.current)), Ji(Tr.current), jl(t))) {
          if (
            ((n = t.stateNode),
            (r = t.memoizedProps),
            (n[Sr] = t),
            (o = n.nodeValue !== r) && ((e = In), e !== null))
          )
            switch (e.tag) {
              case 3:
                Nl(n.nodeValue, r, (e.mode & 1) !== 0);
                break;
              case 5:
                e.memoizedProps.suppressHydrationWarning !== !0 &&
                  Nl(n.nodeValue, r, (e.mode & 1) !== 0);
            }
          o && (t.flags |= 4);
        } else
          (n = (r.nodeType === 9 ? r : r.ownerDocument).createTextNode(n)),
            (n[Sr] = t),
            (t.stateNode = n);
      }
      return rn(t), null;
    case 13:
      if (
        (Tt(Pt),
        (n = t.memoizedState),
        e === null ||
          (e.memoizedState !== null && e.memoizedState.dehydrated !== null))
      ) {
        if (Ct && qn !== null && t.mode & 1 && !(t.flags & 128))
          yb(), fs(), (t.flags |= 98560), (o = !1);
        else if (((o = jl(t)), n !== null && n.dehydrated !== null)) {
          if (e === null) {
            if (!o) throw Error(ve(318));
            if (
              ((o = t.memoizedState),
              (o = o !== null ? o.dehydrated : null),
              !o)
            )
              throw Error(ve(317));
            o[Sr] = t;
          } else
            fs(), !(t.flags & 128) && (t.memoizedState = null), (t.flags |= 4);
          rn(t), (o = !1);
        } else ar !== null && (Xp(ar), (ar = null)), (o = !0);
        if (!o) return t.flags & 65536 ? t : null;
      }
      return t.flags & 128
        ? ((t.lanes = r), t)
        : ((n = n !== null),
          n !== (e !== null && e.memoizedState !== null) &&
            n &&
            ((t.child.flags |= 8192),
            t.mode & 1 &&
              (e === null || Pt.current & 1 ? jt === 0 && (jt = 3) : ym())),
          t.updateQueue !== null && (t.flags |= 4),
          rn(t),
          null);
    case 4:
      return (
        ps(), Bp(e, t), e === null && Oa(t.stateNode.containerInfo), rn(t), null
      );
    case 10:
      return tm(t.type._context), rn(t), null;
    case 17:
      return kn(t.type) && Uu(), rn(t), null;
    case 19:
      if ((Tt(Pt), (o = t.memoizedState), o === null)) return rn(t), null;
      if (((n = (t.flags & 128) !== 0), (s = o.rendering), s === null))
        if (n) Ns(o, !1);
        else {
          if (jt !== 0 || (e !== null && e.flags & 128))
            for (e = t.child; e !== null; ) {
              if (((s = Ju(e)), s !== null)) {
                for (
                  t.flags |= 128,
                    Ns(o, !1),
                    n = s.updateQueue,
                    n !== null && ((t.updateQueue = n), (t.flags |= 4)),
                    t.subtreeFlags = 0,
                    n = r,
                    r = t.child;
                  r !== null;
                )
                  (o = r),
                    (e = n),
                    (o.flags &= 14680066),
                    (s = o.alternate),
                    s === null
                      ? ((o.childLanes = 0),
                        (o.lanes = e),
                        (o.child = null),
                        (o.subtreeFlags = 0),
                        (o.memoizedProps = null),
                        (o.memoizedState = null),
                        (o.updateQueue = null),
                        (o.dependencies = null),
                        (o.stateNode = null))
                      : ((o.childLanes = s.childLanes),
                        (o.lanes = s.lanes),
                        (o.child = s.child),
                        (o.subtreeFlags = 0),
                        (o.deletions = null),
                        (o.memoizedProps = s.memoizedProps),
                        (o.memoizedState = s.memoizedState),
                        (o.updateQueue = s.updateQueue),
                        (o.type = s.type),
                        (e = s.dependencies),
                        (o.dependencies =
                          e === null
                            ? null
                            : {
                                lanes: e.lanes,
                                firstContext: e.firstContext,
                              })),
                    (r = r.sibling);
                return yt(Pt, (Pt.current & 1) | 2), t.child;
              }
              e = e.sibling;
            }
          o.tail !== null &&
            Lt() > ms &&
            ((t.flags |= 128), (n = !0), Ns(o, !1), (t.lanes = 4194304));
        }
      else {
        if (!n)
          if (((e = Ju(s)), e !== null)) {
            if (
              ((t.flags |= 128),
              (n = !0),
              (r = e.updateQueue),
              r !== null && ((t.updateQueue = r), (t.flags |= 4)),
              Ns(o, !0),
              o.tail === null && o.tailMode === 'hidden' && !s.alternate && !Ct)
            )
              return rn(t), null;
          } else
            2 * Lt() - o.renderingStartTime > ms &&
              r !== 1073741824 &&
              ((t.flags |= 128), (n = !0), Ns(o, !1), (t.lanes = 4194304));
        o.isBackwards
          ? ((s.sibling = t.child), (t.child = s))
          : ((r = o.last),
            r !== null ? (r.sibling = s) : (t.child = s),
            (o.last = s));
      }
      return o.tail !== null
        ? ((t = o.tail),
          (o.rendering = t),
          (o.tail = t.sibling),
          (o.renderingStartTime = Lt()),
          (t.sibling = null),
          (r = Pt.current),
          yt(Pt, n ? (r & 1) | 2 : r & 1),
          t)
        : (rn(t), null);
    case 22:
    case 23:
      return (
        _m(),
        (n = t.memoizedState !== null),
        e !== null && (e.memoizedState !== null) !== n && (t.flags |= 8192),
        n && t.mode & 1
          ? Pn & 1073741824 && (rn(t), t.subtreeFlags & 6 && (t.flags |= 8192))
          : rn(t),
        null
      );
    case 24:
      return null;
    case 25:
      return null;
  }
  throw Error(ve(156, t.tag));
}
function hk(e, t) {
  switch ((Yh(t), t.tag)) {
    case 1:
      return (
        kn(t.type) && Uu(),
        (e = t.flags),
        e & 65536 ? ((t.flags = (e & -65537) | 128), t) : null
      );
    case 3:
      return (
        ps(),
        Tt(xn),
        Tt(cn),
        sm(),
        (e = t.flags),
        e & 65536 && !(e & 128) ? ((t.flags = (e & -65537) | 128), t) : null
      );
    case 5:
      return om(t), null;
    case 13:
      if (
        (Tt(Pt), (e = t.memoizedState), e !== null && e.dehydrated !== null)
      ) {
        if (t.alternate === null) throw Error(ve(340));
        fs();
      }
      return (
        (e = t.flags), e & 65536 ? ((t.flags = (e & -65537) | 128), t) : null
      );
    case 19:
      return Tt(Pt), null;
    case 4:
      return ps(), null;
    case 10:
      return tm(t.type._context), null;
    case 22:
    case 23:
      return _m(), null;
    case 24:
      return null;
    default:
      return null;
  }
}
var Wl = !1,
  an = !1,
  mk = typeof WeakSet == 'function' ? WeakSet : Set,
  Pe = null;
function zo(e, t) {
  var r = e.ref;
  if (r !== null)
    if (typeof r == 'function')
      try {
        r(null);
      } catch (n) {
        Rt(e, t, n);
      }
    else r.current = null;
}
function Vp(e, t, r) {
  try {
    r();
  } catch (n) {
    Rt(e, t, n);
  }
}
var E_ = !1;
function gk(e, t) {
  if (((Tp = ju), (e = ob()), Kh(e))) {
    if ('selectionStart' in e)
      var r = { start: e.selectionStart, end: e.selectionEnd };
    else
      e: {
        r = ((r = e.ownerDocument) && r.defaultView) || window;
        var n = r.getSelection && r.getSelection();
        if (n && n.rangeCount !== 0) {
          r = n.anchorNode;
          var i = n.anchorOffset,
            o = n.focusNode;
          n = n.focusOffset;
          try {
            r.nodeType, o.nodeType;
          } catch {
            r = null;
            break e;
          }
          var s = 0,
            l = -1,
            c = -1,
            h = 0,
            y = 0,
            m = e,
            x = null;
          t: for (;;) {
            for (
              var I;
              m !== r || (i !== 0 && m.nodeType !== 3) || (l = s + i),
                m !== o || (n !== 0 && m.nodeType !== 3) || (c = s + n),
                m.nodeType === 3 && (s += m.nodeValue.length),
                (I = m.firstChild) !== null;
            )
              (x = m), (m = I);
            for (;;) {
              if (m === e) break t;
              if (
                (x === r && ++h === i && (l = s),
                x === o && ++y === n && (c = s),
                (I = m.nextSibling) !== null)
              )
                break;
              (m = x), (x = m.parentNode);
            }
            m = I;
          }
          r = l === -1 || c === -1 ? null : { start: l, end: c };
        } else r = null;
      }
    r = r || { start: 0, end: 0 };
  } else r = null;
  for (
    Cp = { focusedElem: e, selectionRange: r }, ju = !1, Pe = t;
    Pe !== null;
  )
    if (((t = Pe), (e = t.child), (t.subtreeFlags & 1028) !== 0 && e !== null))
      (e.return = t), (Pe = e);
    else
      for (; Pe !== null; ) {
        t = Pe;
        try {
          var $ = t.alternate;
          if (t.flags & 1024)
            switch (t.tag) {
              case 0:
              case 11:
              case 15:
                break;
              case 1:
                if ($ !== null) {
                  var j = $.memoizedProps,
                    G = $.memoizedState,
                    C = t.stateNode,
                    T = C.getSnapshotBeforeUpdate(
                      t.elementType === t.type ? j : or(t.type, j),
                      G,
                    );
                  C.__reactInternalSnapshotBeforeUpdate = T;
                }
                break;
              case 3:
                var q = t.stateNode.containerInfo;
                q.nodeType === 1
                  ? (q.textContent = '')
                  : q.nodeType === 9 &&
                    q.documentElement &&
                    q.removeChild(q.documentElement);
                break;
              case 5:
              case 6:
              case 4:
              case 17:
                break;
              default:
                throw Error(ve(163));
            }
        } catch (H) {
          Rt(t, t.return, H);
        }
        if (((e = t.sibling), e !== null)) {
          (e.return = t.return), (Pe = e);
          break;
        }
        Pe = t.return;
      }
  return ($ = E_), (E_ = !1), $;
}
function fa(e, t, r) {
  var n = t.updateQueue;
  if (((n = n !== null ? n.lastEffect : null), n !== null)) {
    var i = (n = n.next);
    do {
      if ((i.tag & e) === e) {
        var o = i.destroy;
        (i.destroy = void 0), o !== void 0 && Vp(t, r, o);
      }
      i = i.next;
    } while (i !== n);
  }
}
function Pc(e, t) {
  if (
    ((t = t.updateQueue), (t = t !== null ? t.lastEffect : null), t !== null)
  ) {
    var r = (t = t.next);
    do {
      if ((r.tag & e) === e) {
        var n = r.create;
        r.destroy = n();
      }
      r = r.next;
    } while (r !== t);
  }
}
function Wp(e) {
  var t = e.ref;
  if (t !== null) {
    var r = e.stateNode;
    switch (e.tag) {
      case 5:
        e = r;
        break;
      default:
        e = r;
    }
    typeof t == 'function' ? t(e) : (t.current = e);
  }
}
function t1(e) {
  var t = e.alternate;
  t !== null && ((e.alternate = null), t1(t)),
    (e.child = null),
    (e.deletions = null),
    (e.sibling = null),
    e.tag === 5 &&
      ((t = e.stateNode),
      t !== null &&
        (delete t[Sr], delete t[Ma], delete t[qp], delete t[J3], delete t[Z3])),
    (e.stateNode = null),
    (e.return = null),
    (e.dependencies = null),
    (e.memoizedProps = null),
    (e.memoizedState = null),
    (e.pendingProps = null),
    (e.stateNode = null),
    (e.updateQueue = null);
}
function n1(e) {
  return e.tag === 5 || e.tag === 3 || e.tag === 4;
}
function T_(e) {
  e: for (;;) {
    for (; e.sibling === null; ) {
      if (e.return === null || n1(e.return)) return null;
      e = e.return;
    }
    for (
      e.sibling.return = e.return, e = e.sibling;
      e.tag !== 5 && e.tag !== 6 && e.tag !== 18;
    ) {
      if (e.flags & 2 || e.child === null || e.tag === 4) continue e;
      (e.child.return = e), (e = e.child);
    }
    if (!(e.flags & 2)) return e.stateNode;
  }
}
function Up(e, t, r) {
  var n = e.tag;
  if (n === 5 || n === 6)
    (e = e.stateNode),
      t
        ? r.nodeType === 8
          ? r.parentNode.insertBefore(e, t)
          : r.insertBefore(e, t)
        : (r.nodeType === 8
            ? ((t = r.parentNode), t.insertBefore(e, r))
            : ((t = r), t.appendChild(e)),
          (r = r._reactRootContainer),
          r != null || t.onclick !== null || (t.onclick = Wu));
  else if (n !== 4 && ((e = e.child), e !== null))
    for (Up(e, t, r), e = e.sibling; e !== null; ) Up(e, t, r), (e = e.sibling);
}
function Hp(e, t, r) {
  var n = e.tag;
  if (n === 5 || n === 6)
    (e = e.stateNode), t ? r.insertBefore(e, t) : r.appendChild(e);
  else if (n !== 4 && ((e = e.child), e !== null))
    for (Hp(e, t, r), e = e.sibling; e !== null; ) Hp(e, t, r), (e = e.sibling);
}
var Yt = null,
  sr = !1;
function ci(e, t, r) {
  for (r = r.child; r !== null; ) r1(e, t, r), (r = r.sibling);
}
function r1(e, t, r) {
  if (Er && typeof Er.onCommitFiberUnmount == 'function')
    try {
      Er.onCommitFiberUnmount(wc, r);
    } catch {}
  switch (r.tag) {
    case 5:
      an || zo(r, t);
    case 6:
      var n = Yt,
        i = sr;
      (Yt = null),
        ci(e, t, r),
        (Yt = n),
        (sr = i),
        Yt !== null &&
          (sr
            ? ((e = Yt),
              (r = r.stateNode),
              e.nodeType === 8 ? e.parentNode.removeChild(r) : e.removeChild(r))
            : Yt.removeChild(r.stateNode));
      break;
    case 18:
      Yt !== null &&
        (sr
          ? ((e = Yt),
            (r = r.stateNode),
            e.nodeType === 8
              ? md(e.parentNode, r)
              : e.nodeType === 1 && md(e, r),
            Ia(e))
          : md(Yt, r.stateNode));
      break;
    case 4:
      (n = Yt),
        (i = sr),
        (Yt = r.stateNode.containerInfo),
        (sr = !0),
        ci(e, t, r),
        (Yt = n),
        (sr = i);
      break;
    case 0:
    case 11:
    case 14:
    case 15:
      if (
        !an &&
        ((n = r.updateQueue), n !== null && ((n = n.lastEffect), n !== null))
      ) {
        i = n = n.next;
        do {
          var o = i,
            s = o.destroy;
          (o = o.tag),
            s !== void 0 && (o & 2 || o & 4) && Vp(r, t, s),
            (i = i.next);
        } while (i !== n);
      }
      ci(e, t, r);
      break;
    case 1:
      if (
        !an &&
        (zo(r, t),
        (n = r.stateNode),
        typeof n.componentWillUnmount == 'function')
      )
        try {
          (n.props = r.memoizedProps),
            (n.state = r.memoizedState),
            n.componentWillUnmount();
        } catch (l) {
          Rt(r, t, l);
        }
      ci(e, t, r);
      break;
    case 21:
      ci(e, t, r);
      break;
    case 22:
      r.mode & 1
        ? ((an = (n = an) || r.memoizedState !== null), ci(e, t, r), (an = n))
        : ci(e, t, r);
      break;
    default:
      ci(e, t, r);
  }
}
function C_(e) {
  var t = e.updateQueue;
  if (t !== null) {
    e.updateQueue = null;
    var r = e.stateNode;
    r === null && (r = e.stateNode = new mk()),
      t.forEach(function (n) {
        var i = Ek.bind(null, e, n);
        r.has(n) || (r.add(n), n.then(i, i));
      });
  }
}
function rr(e, t) {
  var r = t.deletions;
  if (r !== null)
    for (var n = 0; n < r.length; n++) {
      var i = r[n];
      try {
        var o = e,
          s = t,
          l = s;
        e: for (; l !== null; ) {
          switch (l.tag) {
            case 5:
              (Yt = l.stateNode), (sr = !1);
              break e;
            case 3:
              (Yt = l.stateNode.containerInfo), (sr = !0);
              break e;
            case 4:
              (Yt = l.stateNode.containerInfo), (sr = !0);
              break e;
          }
          l = l.return;
        }
        if (Yt === null) throw Error(ve(160));
        r1(o, s, i), (Yt = null), (sr = !1);
        var c = i.alternate;
        c !== null && (c.return = null), (i.return = null);
      } catch (h) {
        Rt(i, t, h);
      }
    }
  if (t.subtreeFlags & 12854)
    for (t = t.child; t !== null; ) i1(t, e), (t = t.sibling);
}
function i1(e, t) {
  var r = e.alternate,
    n = e.flags;
  switch (e.tag) {
    case 0:
    case 11:
    case 14:
    case 15:
      if ((rr(t, e), gr(e), n & 4)) {
        try {
          fa(3, e, e.return), Pc(3, e);
        } catch (j) {
          Rt(e, e.return, j);
        }
        try {
          fa(5, e, e.return);
        } catch (j) {
          Rt(e, e.return, j);
        }
      }
      break;
    case 1:
      rr(t, e), gr(e), n & 512 && r !== null && zo(r, r.return);
      break;
    case 5:
      if (
        (rr(t, e),
        gr(e),
        n & 512 && r !== null && zo(r, r.return),
        e.flags & 32)
      ) {
        var i = e.stateNode;
        try {
          Ca(i, '');
        } catch (j) {
          Rt(e, e.return, j);
        }
      }
      if (n & 4 && ((i = e.stateNode), i != null)) {
        var o = e.memoizedProps,
          s = r !== null ? r.memoizedProps : o,
          l = e.type,
          c = e.updateQueue;
        if (((e.updateQueue = null), c !== null))
          try {
            l === 'input' && o.type === 'radio' && o.name != null && Tv(i, o),
              gp(l, s);
            var h = gp(l, o);
            for (s = 0; s < c.length; s += 2) {
              var y = c[s],
                m = c[s + 1];
              y === 'style'
                ? Iv(i, m)
                : y === 'dangerouslySetInnerHTML'
                  ? Pv(i, m)
                  : y === 'children'
                    ? Ca(i, m)
                    : Mh(i, y, m, h);
            }
            switch (l) {
              case 'input':
                fp(i, o);
                break;
              case 'textarea':
                Cv(i, o);
                break;
              case 'select':
                var x = i._wrapperState.wasMultiple;
                i._wrapperState.wasMultiple = !!o.multiple;
                var I = o.value;
                I != null
                  ? Jo(i, !!o.multiple, I, !1)
                  : x !== !!o.multiple &&
                    (o.defaultValue != null
                      ? Jo(i, !!o.multiple, o.defaultValue, !0)
                      : Jo(i, !!o.multiple, o.multiple ? [] : '', !1));
            }
            i[Ma] = o;
          } catch (j) {
            Rt(e, e.return, j);
          }
      }
      break;
    case 6:
      if ((rr(t, e), gr(e), n & 4)) {
        if (e.stateNode === null) throw Error(ve(162));
        (i = e.stateNode), (o = e.memoizedProps);
        try {
          i.nodeValue = o;
        } catch (j) {
          Rt(e, e.return, j);
        }
      }
      break;
    case 3:
      if (
        (rr(t, e), gr(e), n & 4 && r !== null && r.memoizedState.isDehydrated)
      )
        try {
          Ia(t.containerInfo);
        } catch (j) {
          Rt(e, e.return, j);
        }
      break;
    case 4:
      rr(t, e), gr(e);
      break;
    case 13:
      rr(t, e),
        gr(e),
        (i = e.child),
        i.flags & 8192 &&
          ((o = i.memoizedState !== null),
          (i.stateNode.isHidden = o),
          !o ||
            (i.alternate !== null && i.alternate.memoizedState !== null) ||
            (mm = Lt())),
        n & 4 && C_(e);
      break;
    case 22:
      if (
        ((y = r !== null && r.memoizedState !== null),
        e.mode & 1 ? ((an = (h = an) || y), rr(t, e), (an = h)) : rr(t, e),
        gr(e),
        n & 8192)
      ) {
        if (
          ((h = e.memoizedState !== null),
          (e.stateNode.isHidden = h) && !y && e.mode & 1)
        )
          for (Pe = e, y = e.child; y !== null; ) {
            for (m = Pe = y; Pe !== null; ) {
              switch (((x = Pe), (I = x.child), x.tag)) {
                case 0:
                case 11:
                case 14:
                case 15:
                  fa(4, x, x.return);
                  break;
                case 1:
                  zo(x, x.return);
                  var $ = x.stateNode;
                  if (typeof $.componentWillUnmount == 'function') {
                    (n = x), (r = x.return);
                    try {
                      (t = n),
                        ($.props = t.memoizedProps),
                        ($.state = t.memoizedState),
                        $.componentWillUnmount();
                    } catch (j) {
                      Rt(n, r, j);
                    }
                  }
                  break;
                case 5:
                  zo(x, x.return);
                  break;
                case 22:
                  if (x.memoizedState !== null) {
                    P_(m);
                    continue;
                  }
              }
              I !== null ? ((I.return = x), (Pe = I)) : P_(m);
            }
            y = y.sibling;
          }
        e: for (y = null, m = e; ; ) {
          if (m.tag === 5) {
            if (y === null) {
              y = m;
              try {
                (i = m.stateNode),
                  h
                    ? ((o = i.style),
                      typeof o.setProperty == 'function'
                        ? o.setProperty('display', 'none', 'important')
                        : (o.display = 'none'))
                    : ((l = m.stateNode),
                      (c = m.memoizedProps.style),
                      (s =
                        c != null && c.hasOwnProperty('display')
                          ? c.display
                          : null),
                      (l.style.display = qv('display', s)));
              } catch (j) {
                Rt(e, e.return, j);
              }
            }
          } else if (m.tag === 6) {
            if (y === null)
              try {
                m.stateNode.nodeValue = h ? '' : m.memoizedProps;
              } catch (j) {
                Rt(e, e.return, j);
              }
          } else if (
            ((m.tag !== 22 && m.tag !== 23) ||
              m.memoizedState === null ||
              m === e) &&
            m.child !== null
          ) {
            (m.child.return = m), (m = m.child);
            continue;
          }
          if (m === e) break e;
          for (; m.sibling === null; ) {
            if (m.return === null || m.return === e) break e;
            y === m && (y = null), (m = m.return);
          }
          y === m && (y = null), (m.sibling.return = m.return), (m = m.sibling);
        }
      }
      break;
    case 19:
      rr(t, e), gr(e), n & 4 && C_(e);
      break;
    case 21:
      break;
    default:
      rr(t, e), gr(e);
  }
}
function gr(e) {
  var t = e.flags;
  if (t & 2) {
    try {
      e: {
        for (var r = e.return; r !== null; ) {
          if (n1(r)) {
            var n = r;
            break e;
          }
          r = r.return;
        }
        throw Error(ve(160));
      }
      switch (n.tag) {
        case 5:
          var i = n.stateNode;
          n.flags & 32 && (Ca(i, ''), (n.flags &= -33));
          var o = T_(e);
          Hp(e, o, i);
          break;
        case 3:
        case 4:
          var s = n.stateNode.containerInfo,
            l = T_(e);
          Up(e, l, s);
          break;
        default:
          throw Error(ve(161));
      }
    } catch (c) {
      Rt(e, e.return, c);
    }
    e.flags &= -3;
  }
  t & 4096 && (e.flags &= -4097);
}
function _k(e, t, r) {
  (Pe = e), o1(e);
}
function o1(e, t, r) {
  for (var n = (e.mode & 1) !== 0; Pe !== null; ) {
    var i = Pe,
      o = i.child;
    if (i.tag === 22 && n) {
      var s = i.memoizedState !== null || Wl;
      if (!s) {
        var l = i.alternate,
          c = (l !== null && l.memoizedState !== null) || an;
        l = Wl;
        var h = an;
        if (((Wl = s), (an = c) && !h))
          for (Pe = i; Pe !== null; )
            (s = Pe),
              (c = s.child),
              s.tag === 22 && s.memoizedState !== null
                ? q_(i)
                : c !== null
                  ? ((c.return = s), (Pe = c))
                  : q_(i);
        for (; o !== null; ) (Pe = o), o1(o), (o = o.sibling);
        (Pe = i), (Wl = l), (an = h);
      }
      A_(e);
    } else
      i.subtreeFlags & 8772 && o !== null ? ((o.return = i), (Pe = o)) : A_(e);
  }
}
function A_(e) {
  for (; Pe !== null; ) {
    var t = Pe;
    if (t.flags & 8772) {
      var r = t.alternate;
      try {
        if (t.flags & 8772)
          switch (t.tag) {
            case 0:
            case 11:
            case 15:
              an || Pc(5, t);
              break;
            case 1:
              var n = t.stateNode;
              if (t.flags & 4 && !an)
                if (r === null) n.componentDidMount();
                else {
                  var i =
                    t.elementType === t.type
                      ? r.memoizedProps
                      : or(t.type, r.memoizedProps);
                  n.componentDidUpdate(
                    i,
                    r.memoizedState,
                    n.__reactInternalSnapshotBeforeUpdate,
                  );
                }
              var o = t.updateQueue;
              o !== null && d_(t, o, n);
              break;
            case 3:
              var s = t.updateQueue;
              if (s !== null) {
                if (((r = null), t.child !== null))
                  switch (t.child.tag) {
                    case 5:
                      r = t.child.stateNode;
                      break;
                    case 1:
                      r = t.child.stateNode;
                  }
                d_(t, s, r);
              }
              break;
            case 5:
              var l = t.stateNode;
              if (r === null && t.flags & 4) {
                r = l;
                var c = t.memoizedProps;
                switch (t.type) {
                  case 'button':
                  case 'input':
                  case 'select':
                  case 'textarea':
                    c.autoFocus && r.focus();
                    break;
                  case 'img':
                    c.src && (r.src = c.src);
                }
              }
              break;
            case 6:
              break;
            case 4:
              break;
            case 12:
              break;
            case 13:
              if (t.memoizedState === null) {
                var h = t.alternate;
                if (h !== null) {
                  var y = h.memoizedState;
                  if (y !== null) {
                    var m = y.dehydrated;
                    m !== null && Ia(m);
                  }
                }
              }
              break;
            case 19:
            case 17:
            case 21:
            case 22:
            case 23:
            case 25:
              break;
            default:
              throw Error(ve(163));
          }
        an || (t.flags & 512 && Wp(t));
      } catch (x) {
        Rt(t, t.return, x);
      }
    }
    if (t === e) {
      Pe = null;
      break;
    }
    if (((r = t.sibling), r !== null)) {
      (r.return = t.return), (Pe = r);
      break;
    }
    Pe = t.return;
  }
}
function P_(e) {
  for (; Pe !== null; ) {
    var t = Pe;
    if (t === e) {
      Pe = null;
      break;
    }
    var r = t.sibling;
    if (r !== null) {
      (r.return = t.return), (Pe = r);
      break;
    }
    Pe = t.return;
  }
}
function q_(e) {
  for (; Pe !== null; ) {
    var t = Pe;
    try {
      switch (t.tag) {
        case 0:
        case 11:
        case 15:
          var r = t.return;
          try {
            Pc(4, t);
          } catch (c) {
            Rt(t, r, c);
          }
          break;
        case 1:
          var n = t.stateNode;
          if (typeof n.componentDidMount == 'function') {
            var i = t.return;
            try {
              n.componentDidMount();
            } catch (c) {
              Rt(t, i, c);
            }
          }
          var o = t.return;
          try {
            Wp(t);
          } catch (c) {
            Rt(t, o, c);
          }
          break;
        case 5:
          var s = t.return;
          try {
            Wp(t);
          } catch (c) {
            Rt(t, s, c);
          }
      }
    } catch (c) {
      Rt(t, t.return, c);
    }
    if (t === e) {
      Pe = null;
      break;
    }
    var l = t.sibling;
    if (l !== null) {
      (l.return = t.return), (Pe = l);
      break;
    }
    Pe = t.return;
  }
}
var yk = Math.ceil,
  tc = ni.ReactCurrentDispatcher,
  pm = ni.ReactCurrentOwner,
  Xn = ni.ReactCurrentBatchConfig,
  tt = 0,
  Ut = null,
  $t = null,
  en = 0,
  Pn = 0,
  $o = Mi(0),
  jt = 0,
  Ba = null,
  fo = 0,
  qc = 0,
  hm = 0,
  da = null,
  bn = null,
  mm = 0,
  ms = 1 / 0,
  Lr = null,
  nc = !1,
  Qp = null,
  Ai = null,
  Ul = !1,
  wi = null,
  rc = 0,
  pa = 0,
  Gp = null,
  mu = -1,
  gu = 0;
function mn() {
  return tt & 6 ? Lt() : mu !== -1 ? mu : (mu = Lt());
}
function Pi(e) {
  return e.mode & 1
    ? tt & 2 && en !== 0
      ? en & -en
      : tk.transition !== null
        ? (gu === 0 && (gu = Vv()), gu)
        : ((e = ft),
          e !== 0 || ((e = window.event), (e = e === void 0 ? 16 : Xv(e.type))),
          e)
    : 1;
}
function cr(e, t, r, n) {
  if (50 < pa) throw ((pa = 0), (Gp = null), Error(ve(185)));
  il(e, r, n),
    (!(tt & 2) || e !== Ut) &&
      (e === Ut && (!(tt & 2) && (qc |= r), jt === 4 && yi(e, en)),
      En(e, n),
      r === 1 && tt === 0 && !(t.mode & 1) && ((ms = Lt() + 500), Tc && Di()));
}
function En(e, t) {
  var r = e.callbackNode;
  t3(e, t);
  var n = Nu(e, e === Ut ? en : 0);
  if (n === 0)
    r !== null && $g(r), (e.callbackNode = null), (e.callbackPriority = 0);
  else if (((t = n & -n), e.callbackPriority !== t)) {
    if ((r != null && $g(r), t === 1))
      e.tag === 0 ? ek(I_.bind(null, e)) : mb(I_.bind(null, e)),
        X3(function () {
          !(tt & 6) && Di();
        }),
        (r = null);
    else {
      switch (Wv(n)) {
        case 1:
          r = jh;
          break;
        case 4:
          r = jv;
          break;
        case 16:
          r = $u;
          break;
        case 536870912:
          r = Bv;
          break;
        default:
          r = $u;
      }
      r = p1(r, s1.bind(null, e));
    }
    (e.callbackPriority = t), (e.callbackNode = r);
  }
}
function s1(e, t) {
  if (((mu = -1), (gu = 0), tt & 6)) throw Error(ve(327));
  var r = e.callbackNode;
  if (rs() && e.callbackNode !== r) return null;
  var n = Nu(e, e === Ut ? en : 0);
  if (n === 0) return null;
  if (n & 30 || n & e.expiredLanes || t) t = ic(e, n);
  else {
    t = n;
    var i = tt;
    tt |= 2;
    var o = l1();
    (Ut !== e || en !== t) && ((Lr = null), (ms = Lt() + 500), to(e, t));
    do
      try {
        wk();
        break;
      } catch (l) {
        a1(e, l);
      }
    while (!0);
    em(),
      (tc.current = o),
      (tt = i),
      $t !== null ? (t = 0) : ((Ut = null), (en = 0), (t = jt));
  }
  if (t !== 0) {
    if (
      (t === 2 && ((i = wp(e)), i !== 0 && ((n = i), (t = Kp(e, i)))), t === 1)
    )
      throw ((r = Ba), to(e, 0), yi(e, n), En(e, Lt()), r);
    if (t === 6) yi(e, n);
    else {
      if (
        ((i = e.current.alternate),
        !(n & 30) &&
          !vk(i) &&
          ((t = ic(e, n)),
          t === 2 && ((o = wp(e)), o !== 0 && ((n = o), (t = Kp(e, o)))),
          t === 1))
      )
        throw ((r = Ba), to(e, 0), yi(e, n), En(e, Lt()), r);
      switch (((e.finishedWork = i), (e.finishedLanes = n), t)) {
        case 0:
        case 1:
          throw Error(ve(345));
        case 2:
          Ui(e, bn, Lr);
          break;
        case 3:
          if (
            (yi(e, n), (n & 130023424) === n && ((t = mm + 500 - Lt()), 10 < t))
          ) {
            if (Nu(e, 0) !== 0) break;
            if (((i = e.suspendedLanes), (i & n) !== n)) {
              mn(), (e.pingedLanes |= e.suspendedLanes & i);
              break;
            }
            e.timeoutHandle = Pp(Ui.bind(null, e, bn, Lr), t);
            break;
          }
          Ui(e, bn, Lr);
          break;
        case 4:
          if ((yi(e, n), (n & 4194240) === n)) break;
          for (t = e.eventTimes, i = -1; 0 < n; ) {
            var s = 31 - ur(n);
            (o = 1 << s), (s = t[s]), s > i && (i = s), (n &= ~o);
          }
          if (
            ((n = i),
            (n = Lt() - n),
            (n =
              (120 > n
                ? 120
                : 480 > n
                  ? 480
                  : 1080 > n
                    ? 1080
                    : 1920 > n
                      ? 1920
                      : 3e3 > n
                        ? 3e3
                        : 4320 > n
                          ? 4320
                          : 1960 * yk(n / 1960)) - n),
            10 < n)
          ) {
            e.timeoutHandle = Pp(Ui.bind(null, e, bn, Lr), n);
            break;
          }
          Ui(e, bn, Lr);
          break;
        case 5:
          Ui(e, bn, Lr);
          break;
        default:
          throw Error(ve(329));
      }
    }
  }
  return En(e, Lt()), e.callbackNode === r ? s1.bind(null, e) : null;
}
function Kp(e, t) {
  var r = da;
  return (
    e.current.memoizedState.isDehydrated && (to(e, t).flags |= 256),
    (e = ic(e, t)),
    e !== 2 && ((t = bn), (bn = r), t !== null && Xp(t)),
    e
  );
}
function Xp(e) {
  bn === null ? (bn = e) : bn.push.apply(bn, e);
}
function vk(e) {
  for (var t = e; ; ) {
    if (t.flags & 16384) {
      var r = t.updateQueue;
      if (r !== null && ((r = r.stores), r !== null))
        for (var n = 0; n < r.length; n++) {
          var i = r[n],
            o = i.getSnapshot;
          i = i.value;
          try {
            if (!dr(o(), i)) return !1;
          } catch {
            return !1;
          }
        }
    }
    if (((r = t.child), t.subtreeFlags & 16384 && r !== null))
      (r.return = t), (t = r);
    else {
      if (t === e) break;
      for (; t.sibling === null; ) {
        if (t.return === null || t.return === e) return !0;
        t = t.return;
      }
      (t.sibling.return = t.return), (t = t.sibling);
    }
  }
  return !0;
}
function yi(e, t) {
  for (
    t &= ~hm,
      t &= ~qc,
      e.suspendedLanes |= t,
      e.pingedLanes &= ~t,
      e = e.expirationTimes;
    0 < t;
  ) {
    var r = 31 - ur(t),
      n = 1 << r;
    (e[r] = -1), (t &= ~n);
  }
}
function I_(e) {
  if (tt & 6) throw Error(ve(327));
  rs();
  var t = Nu(e, 0);
  if (!(t & 1)) return En(e, Lt()), null;
  var r = ic(e, t);
  if (e.tag !== 0 && r === 2) {
    var n = wp(e);
    n !== 0 && ((t = n), (r = Kp(e, n)));
  }
  if (r === 1) throw ((r = Ba), to(e, 0), yi(e, t), En(e, Lt()), r);
  if (r === 6) throw Error(ve(345));
  return (
    (e.finishedWork = e.current.alternate),
    (e.finishedLanes = t),
    Ui(e, bn, Lr),
    En(e, Lt()),
    null
  );
}
function gm(e, t) {
  var r = tt;
  tt |= 1;
  try {
    return e(t);
  } finally {
    (tt = r), tt === 0 && ((ms = Lt() + 500), Tc && Di());
  }
}
function po(e) {
  wi !== null && wi.tag === 0 && !(tt & 6) && rs();
  var t = tt;
  tt |= 1;
  var r = Xn.transition,
    n = ft;
  try {
    if (((Xn.transition = null), (ft = 1), e)) return e();
  } finally {
    (ft = n), (Xn.transition = r), (tt = t), !(tt & 6) && Di();
  }
}
function _m() {
  (Pn = $o.current), Tt($o);
}
function to(e, t) {
  (e.finishedWork = null), (e.finishedLanes = 0);
  var r = e.timeoutHandle;
  if ((r !== -1 && ((e.timeoutHandle = -1), K3(r)), $t !== null))
    for (r = $t.return; r !== null; ) {
      var n = r;
      switch ((Yh(n), n.tag)) {
        case 1:
          (n = n.type.childContextTypes), n != null && Uu();
          break;
        case 3:
          ps(), Tt(xn), Tt(cn), sm();
          break;
        case 5:
          om(n);
          break;
        case 4:
          ps();
          break;
        case 13:
          Tt(Pt);
          break;
        case 19:
          Tt(Pt);
          break;
        case 10:
          tm(n.type._context);
          break;
        case 22:
        case 23:
          _m();
      }
      r = r.return;
    }
  if (
    ((Ut = e),
    ($t = e = qi(e.current, null)),
    (en = Pn = t),
    (jt = 0),
    (Ba = null),
    (hm = qc = fo = 0),
    (bn = da = null),
    Yi !== null)
  ) {
    for (t = 0; t < Yi.length; t++)
      if (((r = Yi[t]), (n = r.interleaved), n !== null)) {
        r.interleaved = null;
        var i = n.next,
          o = r.pending;
        if (o !== null) {
          var s = o.next;
          (o.next = i), (n.next = s);
        }
        r.pending = n;
      }
    Yi = null;
  }
  return e;
}
function a1(e, t) {
  do {
    var r = $t;
    try {
      if ((em(), (du.current = ec), Zu)) {
        for (var n = It.memoizedState; n !== null; ) {
          var i = n.queue;
          i !== null && (i.pending = null), (n = n.next);
        }
        Zu = !1;
      }
      if (
        ((co = 0),
        (Wt = Nt = It = null),
        (ca = !1),
        ($a = 0),
        (pm.current = null),
        r === null || r.return === null)
      ) {
        (jt = 1), (Ba = t), ($t = null);
        break;
      }
      e: {
        var o = e,
          s = r.return,
          l = r,
          c = t;
        if (
          ((t = en),
          (l.flags |= 32768),
          c !== null && typeof c == 'object' && typeof c.then == 'function')
        ) {
          var h = c,
            y = l,
            m = y.tag;
          if (!(y.mode & 1) && (m === 0 || m === 11 || m === 15)) {
            var x = y.alternate;
            x
              ? ((y.updateQueue = x.updateQueue),
                (y.memoizedState = x.memoizedState),
                (y.lanes = x.lanes))
              : ((y.updateQueue = null), (y.memoizedState = null));
          }
          var I = y_(s);
          if (I !== null) {
            (I.flags &= -257),
              v_(I, s, l, o, t),
              I.mode & 1 && __(o, h, t),
              (t = I),
              (c = h);
            var $ = t.updateQueue;
            if ($ === null) {
              var j = new Set();
              j.add(c), (t.updateQueue = j);
            } else $.add(c);
            break e;
          } else {
            if (!(t & 1)) {
              __(o, h, t), ym();
              break e;
            }
            c = Error(ve(426));
          }
        } else if (Ct && l.mode & 1) {
          var G = y_(s);
          if (G !== null) {
            !(G.flags & 65536) && (G.flags |= 256),
              v_(G, s, l, o, t),
              Jh(hs(c, l));
            break e;
          }
        }
        (o = c = hs(c, l)),
          jt !== 4 && (jt = 2),
          da === null ? (da = [o]) : da.push(o),
          (o = s);
        do {
          switch (o.tag) {
            case 3:
              (o.flags |= 65536), (t &= -t), (o.lanes |= t);
              var C = Wb(o, c, t);
              f_(o, C);
              break e;
            case 1:
              l = c;
              var T = o.type,
                q = o.stateNode;
              if (
                !(o.flags & 128) &&
                (typeof T.getDerivedStateFromError == 'function' ||
                  (q !== null &&
                    typeof q.componentDidCatch == 'function' &&
                    (Ai === null || !Ai.has(q))))
              ) {
                (o.flags |= 65536), (t &= -t), (o.lanes |= t);
                var H = Ub(o, l, t);
                f_(o, H);
                break e;
              }
          }
          o = o.return;
        } while (o !== null);
      }
      c1(r);
    } catch (ie) {
      (t = ie), $t === r && r !== null && ($t = r = r.return);
      continue;
    }
    break;
  } while (!0);
}
function l1() {
  var e = tc.current;
  return (tc.current = ec), e === null ? ec : e;
}
function ym() {
  (jt === 0 || jt === 3 || jt === 2) && (jt = 4),
    Ut === null || (!(fo & 268435455) && !(qc & 268435455)) || yi(Ut, en);
}
function ic(e, t) {
  var r = tt;
  tt |= 2;
  var n = l1();
  (Ut !== e || en !== t) && ((Lr = null), to(e, t));
  do
    try {
      bk();
      break;
    } catch (i) {
      a1(e, i);
    }
  while (!0);
  if ((em(), (tt = r), (tc.current = n), $t !== null)) throw Error(ve(261));
  return (Ut = null), (en = 0), jt;
}
function bk() {
  for (; $t !== null; ) u1($t);
}
function wk() {
  for (; $t !== null && !Hx(); ) u1($t);
}
function u1(e) {
  var t = d1(e.alternate, e, Pn);
  (e.memoizedProps = e.pendingProps),
    t === null ? c1(e) : ($t = t),
    (pm.current = null);
}
function c1(e) {
  var t = e;
  do {
    var r = t.alternate;
    if (((e = t.return), t.flags & 32768)) {
      if (((r = hk(r, t)), r !== null)) {
        (r.flags &= 32767), ($t = r);
        return;
      }
      if (e !== null)
        (e.flags |= 32768), (e.subtreeFlags = 0), (e.deletions = null);
      else {
        (jt = 6), ($t = null);
        return;
      }
    } else if (((r = pk(r, t, Pn)), r !== null)) {
      $t = r;
      return;
    }
    if (((t = t.sibling), t !== null)) {
      $t = t;
      return;
    }
    $t = t = e;
  } while (t !== null);
  jt === 0 && (jt = 5);
}
function Ui(e, t, r) {
  var n = ft,
    i = Xn.transition;
  try {
    (Xn.transition = null), (ft = 1), Sk(e, t, r, n);
  } finally {
    (Xn.transition = i), (ft = n);
  }
  return null;
}
function Sk(e, t, r, n) {
  do rs();
  while (wi !== null);
  if (tt & 6) throw Error(ve(327));
  r = e.finishedWork;
  var i = e.finishedLanes;
  if (r === null) return null;
  if (((e.finishedWork = null), (e.finishedLanes = 0), r === e.current))
    throw Error(ve(177));
  (e.callbackNode = null), (e.callbackPriority = 0);
  var o = r.lanes | r.childLanes;
  if (
    (n3(e, o),
    e === Ut && (($t = Ut = null), (en = 0)),
    (!(r.subtreeFlags & 2064) && !(r.flags & 2064)) ||
      Ul ||
      ((Ul = !0),
      p1($u, function () {
        return rs(), null;
      })),
    (o = (r.flags & 15990) !== 0),
    r.subtreeFlags & 15990 || o)
  ) {
    (o = Xn.transition), (Xn.transition = null);
    var s = ft;
    ft = 1;
    var l = tt;
    (tt |= 4),
      (pm.current = null),
      gk(e, r),
      i1(r, e),
      B3(Cp),
      (ju = !!Tp),
      (Cp = Tp = null),
      (e.current = r),
      _k(r),
      Qx(),
      (tt = l),
      (ft = s),
      (Xn.transition = o);
  } else e.current = r;
  if (
    (Ul && ((Ul = !1), (wi = e), (rc = i)),
    (o = e.pendingLanes),
    o === 0 && (Ai = null),
    Xx(r.stateNode),
    En(e, Lt()),
    t !== null)
  )
    for (n = e.onRecoverableError, r = 0; r < t.length; r++)
      (i = t[r]), n(i.value, { componentStack: i.stack, digest: i.digest });
  if (nc) throw ((nc = !1), (e = Qp), (Qp = null), e);
  return (
    rc & 1 && e.tag !== 0 && rs(),
    (o = e.pendingLanes),
    o & 1 ? (e === Gp ? pa++ : ((pa = 0), (Gp = e))) : (pa = 0),
    Di(),
    null
  );
}
function rs() {
  if (wi !== null) {
    var e = Wv(rc),
      t = Xn.transition,
      r = ft;
    try {
      if (((Xn.transition = null), (ft = 16 > e ? 16 : e), wi === null))
        var n = !1;
      else {
        if (((e = wi), (wi = null), (rc = 0), tt & 6)) throw Error(ve(331));
        var i = tt;
        for (tt |= 4, Pe = e.current; Pe !== null; ) {
          var o = Pe,
            s = o.child;
          if (Pe.flags & 16) {
            var l = o.deletions;
            if (l !== null) {
              for (var c = 0; c < l.length; c++) {
                var h = l[c];
                for (Pe = h; Pe !== null; ) {
                  var y = Pe;
                  switch (y.tag) {
                    case 0:
                    case 11:
                    case 15:
                      fa(8, y, o);
                  }
                  var m = y.child;
                  if (m !== null) (m.return = y), (Pe = m);
                  else
                    for (; Pe !== null; ) {
                      y = Pe;
                      var x = y.sibling,
                        I = y.return;
                      if ((t1(y), y === h)) {
                        Pe = null;
                        break;
                      }
                      if (x !== null) {
                        (x.return = I), (Pe = x);
                        break;
                      }
                      Pe = I;
                    }
                }
              }
              var $ = o.alternate;
              if ($ !== null) {
                var j = $.child;
                if (j !== null) {
                  $.child = null;
                  do {
                    var G = j.sibling;
                    (j.sibling = null), (j = G);
                  } while (j !== null);
                }
              }
              Pe = o;
            }
          }
          if (o.subtreeFlags & 2064 && s !== null) (s.return = o), (Pe = s);
          else
            e: for (; Pe !== null; ) {
              if (((o = Pe), o.flags & 2048))
                switch (o.tag) {
                  case 0:
                  case 11:
                  case 15:
                    fa(9, o, o.return);
                }
              var C = o.sibling;
              if (C !== null) {
                (C.return = o.return), (Pe = C);
                break e;
              }
              Pe = o.return;
            }
        }
        var T = e.current;
        for (Pe = T; Pe !== null; ) {
          s = Pe;
          var q = s.child;
          if (s.subtreeFlags & 2064 && q !== null) (q.return = s), (Pe = q);
          else
            e: for (s = T; Pe !== null; ) {
              if (((l = Pe), l.flags & 2048))
                try {
                  switch (l.tag) {
                    case 0:
                    case 11:
                    case 15:
                      Pc(9, l);
                  }
                } catch (ie) {
                  Rt(l, l.return, ie);
                }
              if (l === s) {
                Pe = null;
                break e;
              }
              var H = l.sibling;
              if (H !== null) {
                (H.return = l.return), (Pe = H);
                break e;
              }
              Pe = l.return;
            }
        }
        if (
          ((tt = i), Di(), Er && typeof Er.onPostCommitFiberRoot == 'function')
        )
          try {
            Er.onPostCommitFiberRoot(wc, e);
          } catch {}
        n = !0;
      }
      return n;
    } finally {
      (ft = r), (Xn.transition = t);
    }
  }
  return !1;
}
function F_(e, t, r) {
  (t = hs(r, t)),
    (t = Wb(e, t, 1)),
    (e = Ci(e, t, 1)),
    (t = mn()),
    e !== null && (il(e, 1, t), En(e, t));
}
function Rt(e, t, r) {
  if (e.tag === 3) F_(e, e, r);
  else
    for (; t !== null; ) {
      if (t.tag === 3) {
        F_(t, e, r);
        break;
      } else if (t.tag === 1) {
        var n = t.stateNode;
        if (
          typeof t.type.getDerivedStateFromError == 'function' ||
          (typeof n.componentDidCatch == 'function' &&
            (Ai === null || !Ai.has(n)))
        ) {
          (e = hs(r, e)),
            (e = Ub(t, e, 1)),
            (t = Ci(t, e, 1)),
            (e = mn()),
            t !== null && (il(t, 1, e), En(t, e));
          break;
        }
      }
      t = t.return;
    }
}
function xk(e, t, r) {
  var n = e.pingCache;
  n !== null && n.delete(t),
    (t = mn()),
    (e.pingedLanes |= e.suspendedLanes & r),
    Ut === e &&
      (en & r) === r &&
      (jt === 4 || (jt === 3 && (en & 130023424) === en && 500 > Lt() - mm)
        ? to(e, 0)
        : (hm |= r)),
    En(e, t);
}
function f1(e, t) {
  t === 0 &&
    (e.mode & 1
      ? ((t = Ll), (Ll <<= 1), !(Ll & 130023424) && (Ll = 4194304))
      : (t = 1));
  var r = mn();
  (e = Jr(e, t)), e !== null && (il(e, t, r), En(e, r));
}
function kk(e) {
  var t = e.memoizedState,
    r = 0;
  t !== null && (r = t.retryLane), f1(e, r);
}
function Ek(e, t) {
  var r = 0;
  switch (e.tag) {
    case 13:
      var n = e.stateNode,
        i = e.memoizedState;
      i !== null && (r = i.retryLane);
      break;
    case 19:
      n = e.stateNode;
      break;
    default:
      throw Error(ve(314));
  }
  n !== null && n.delete(t), f1(e, r);
}
var d1;
d1 = function (e, t, r) {
  if (e !== null)
    if (e.memoizedProps !== t.pendingProps || xn.current) Sn = !0;
    else {
      if (!(e.lanes & r) && !(t.flags & 128)) return (Sn = !1), dk(e, t, r);
      Sn = !!(e.flags & 131072);
    }
  else (Sn = !1), Ct && t.flags & 1048576 && gb(t, Gu, t.index);
  switch (((t.lanes = 0), t.tag)) {
    case 2:
      var n = t.type;
      hu(e, t), (e = t.pendingProps);
      var i = cs(t, cn.current);
      ns(t, r), (i = lm(null, t, n, e, i, r));
      var o = um();
      return (
        (t.flags |= 1),
        typeof i == 'object' &&
        i !== null &&
        typeof i.render == 'function' &&
        i.$$typeof === void 0
          ? ((t.tag = 1),
            (t.memoizedState = null),
            (t.updateQueue = null),
            kn(n) ? ((o = !0), Hu(t)) : (o = !1),
            (t.memoizedState =
              i.state !== null && i.state !== void 0 ? i.state : null),
            rm(t),
            (i.updater = Ac),
            (t.stateNode = i),
            (i._reactInternals = t),
            Mp(t, n, e, r),
            (t = $p(null, t, n, !0, o, r)))
          : ((t.tag = 0), Ct && o && Xh(t), pn(null, t, i, r), (t = t.child)),
        t
      );
    case 16:
      n = t.elementType;
      e: {
        switch (
          (hu(e, t),
          (e = t.pendingProps),
          (i = n._init),
          (n = i(n._payload)),
          (t.type = n),
          (i = t.tag = Ck(n)),
          (e = or(n, e)),
          i)
        ) {
          case 0:
            t = zp(null, t, n, e, r);
            break e;
          case 1:
            t = S_(null, t, n, e, r);
            break e;
          case 11:
            t = b_(null, t, n, e, r);
            break e;
          case 14:
            t = w_(null, t, n, or(n.type, e), r);
            break e;
        }
        throw Error(ve(306, n, ''));
      }
      return t;
    case 0:
      return (
        (n = t.type),
        (i = t.pendingProps),
        (i = t.elementType === n ? i : or(n, i)),
        zp(e, t, n, i, r)
      );
    case 1:
      return (
        (n = t.type),
        (i = t.pendingProps),
        (i = t.elementType === n ? i : or(n, i)),
        S_(e, t, n, i, r)
      );
    case 3:
      e: {
        if ((Kb(t), e === null)) throw Error(ve(387));
        (n = t.pendingProps),
          (o = t.memoizedState),
          (i = o.element),
          Sb(e, t),
          Yu(t, n, null, r);
        var s = t.memoizedState;
        if (((n = s.element), o.isDehydrated))
          if (
            ((o = {
              element: n,
              isDehydrated: !1,
              cache: s.cache,
              pendingSuspenseBoundaries: s.pendingSuspenseBoundaries,
              transitions: s.transitions,
            }),
            (t.updateQueue.baseState = o),
            (t.memoizedState = o),
            t.flags & 256)
          ) {
            (i = hs(Error(ve(423)), t)), (t = x_(e, t, n, r, i));
            break e;
          } else if (n !== i) {
            (i = hs(Error(ve(424)), t)), (t = x_(e, t, n, r, i));
            break e;
          } else
            for (
              qn = Ti(t.stateNode.containerInfo.firstChild),
                In = t,
                Ct = !0,
                ar = null,
                r = bb(t, null, n, r),
                t.child = r;
              r;
            )
              (r.flags = (r.flags & -3) | 4096), (r = r.sibling);
        else {
          if ((fs(), n === i)) {
            t = Zr(e, t, r);
            break e;
          }
          pn(e, t, n, r);
        }
        t = t.child;
      }
      return t;
    case 5:
      return (
        xb(t),
        e === null && Rp(t),
        (n = t.type),
        (i = t.pendingProps),
        (o = e !== null ? e.memoizedProps : null),
        (s = i.children),
        Ap(n, i) ? (s = null) : o !== null && Ap(n, o) && (t.flags |= 32),
        Gb(e, t),
        pn(e, t, s, r),
        t.child
      );
    case 6:
      return e === null && Rp(t), null;
    case 13:
      return Xb(e, t, r);
    case 4:
      return (
        im(t, t.stateNode.containerInfo),
        (n = t.pendingProps),
        e === null ? (t.child = ds(t, null, n, r)) : pn(e, t, n, r),
        t.child
      );
    case 11:
      return (
        (n = t.type),
        (i = t.pendingProps),
        (i = t.elementType === n ? i : or(n, i)),
        b_(e, t, n, i, r)
      );
    case 7:
      return pn(e, t, t.pendingProps, r), t.child;
    case 8:
      return pn(e, t, t.pendingProps.children, r), t.child;
    case 12:
      return pn(e, t, t.pendingProps.children, r), t.child;
    case 10:
      e: {
        if (
          ((n = t.type._context),
          (i = t.pendingProps),
          (o = t.memoizedProps),
          (s = i.value),
          yt(Ku, n._currentValue),
          (n._currentValue = s),
          o !== null)
        )
          if (dr(o.value, s)) {
            if (o.children === i.children && !xn.current) {
              t = Zr(e, t, r);
              break e;
            }
          } else
            for (o = t.child, o !== null && (o.return = t); o !== null; ) {
              var l = o.dependencies;
              if (l !== null) {
                s = o.child;
                for (var c = l.firstContext; c !== null; ) {
                  if (c.context === n) {
                    if (o.tag === 1) {
                      (c = Vr(-1, r & -r)), (c.tag = 2);
                      var h = o.updateQueue;
                      if (h !== null) {
                        h = h.shared;
                        var y = h.pending;
                        y === null
                          ? (c.next = c)
                          : ((c.next = y.next), (y.next = c)),
                          (h.pending = c);
                      }
                    }
                    (o.lanes |= r),
                      (c = o.alternate),
                      c !== null && (c.lanes |= r),
                      Op(o.return, r, t),
                      (l.lanes |= r);
                    break;
                  }
                  c = c.next;
                }
              } else if (o.tag === 10) s = o.type === t.type ? null : o.child;
              else if (o.tag === 18) {
                if (((s = o.return), s === null)) throw Error(ve(341));
                (s.lanes |= r),
                  (l = s.alternate),
                  l !== null && (l.lanes |= r),
                  Op(s, r, t),
                  (s = o.sibling);
              } else s = o.child;
              if (s !== null) s.return = o;
              else
                for (s = o; s !== null; ) {
                  if (s === t) {
                    s = null;
                    break;
                  }
                  if (((o = s.sibling), o !== null)) {
                    (o.return = s.return), (s = o);
                    break;
                  }
                  s = s.return;
                }
              o = s;
            }
        pn(e, t, i.children, r), (t = t.child);
      }
      return t;
    case 9:
      return (
        (i = t.type),
        (n = t.pendingProps.children),
        ns(t, r),
        (i = Yn(i)),
        (n = n(i)),
        (t.flags |= 1),
        pn(e, t, n, r),
        t.child
      );
    case 14:
      return (
        (n = t.type),
        (i = or(n, t.pendingProps)),
        (i = or(n.type, i)),
        w_(e, t, n, i, r)
      );
    case 15:
      return Hb(e, t, t.type, t.pendingProps, r);
    case 17:
      return (
        (n = t.type),
        (i = t.pendingProps),
        (i = t.elementType === n ? i : or(n, i)),
        hu(e, t),
        (t.tag = 1),
        kn(n) ? ((e = !0), Hu(t)) : (e = !1),
        ns(t, r),
        Vb(t, n, i),
        Mp(t, n, i, r),
        $p(null, t, n, !0, e, r)
      );
    case 19:
      return Yb(e, t, r);
    case 22:
      return Qb(e, t, r);
  }
  throw Error(ve(156, t.tag));
};
function p1(e, t) {
  return Nv(e, t);
}
function Tk(e, t, r, n) {
  (this.tag = e),
    (this.key = r),
    (this.sibling =
      this.child =
      this.return =
      this.stateNode =
      this.type =
      this.elementType =
        null),
    (this.index = 0),
    (this.ref = null),
    (this.pendingProps = t),
    (this.dependencies =
      this.memoizedState =
      this.updateQueue =
      this.memoizedProps =
        null),
    (this.mode = n),
    (this.subtreeFlags = this.flags = 0),
    (this.deletions = null),
    (this.childLanes = this.lanes = 0),
    (this.alternate = null);
}
function Kn(e, t, r, n) {
  return new Tk(e, t, r, n);
}
function vm(e) {
  return (e = e.prototype), !(!e || !e.isReactComponent);
}
function Ck(e) {
  if (typeof e == 'function') return vm(e) ? 1 : 0;
  if (e != null) {
    if (((e = e.$$typeof), e === zh)) return 11;
    if (e === $h) return 14;
  }
  return 2;
}
function qi(e, t) {
  var r = e.alternate;
  return (
    r === null
      ? ((r = Kn(e.tag, t, e.key, e.mode)),
        (r.elementType = e.elementType),
        (r.type = e.type),
        (r.stateNode = e.stateNode),
        (r.alternate = e),
        (e.alternate = r))
      : ((r.pendingProps = t),
        (r.type = e.type),
        (r.flags = 0),
        (r.subtreeFlags = 0),
        (r.deletions = null)),
    (r.flags = e.flags & 14680064),
    (r.childLanes = e.childLanes),
    (r.lanes = e.lanes),
    (r.child = e.child),
    (r.memoizedProps = e.memoizedProps),
    (r.memoizedState = e.memoizedState),
    (r.updateQueue = e.updateQueue),
    (t = e.dependencies),
    (r.dependencies =
      t === null ? null : { lanes: t.lanes, firstContext: t.firstContext }),
    (r.sibling = e.sibling),
    (r.index = e.index),
    (r.ref = e.ref),
    r
  );
}
function _u(e, t, r, n, i, o) {
  var s = 2;
  if (((n = e), typeof e == 'function')) vm(e) && (s = 1);
  else if (typeof e == 'string') s = 5;
  else
    e: switch (e) {
      case Po:
        return no(r.children, i, o, t);
      case Dh:
        (s = 8), (i |= 8);
        break;
      case sp:
        return (
          (e = Kn(12, r, t, i | 2)), (e.elementType = sp), (e.lanes = o), e
        );
      case ap:
        return (e = Kn(13, r, t, i)), (e.elementType = ap), (e.lanes = o), e;
      case lp:
        return (e = Kn(19, r, t, i)), (e.elementType = lp), (e.lanes = o), e;
      case xv:
        return Ic(r, i, o, t);
      default:
        if (typeof e == 'object' && e !== null)
          switch (e.$$typeof) {
            case wv:
              s = 10;
              break e;
            case Sv:
              s = 9;
              break e;
            case zh:
              s = 11;
              break e;
            case $h:
              s = 14;
              break e;
            case mi:
              (s = 16), (n = null);
              break e;
          }
        throw Error(ve(130, e == null ? e : typeof e, ''));
    }
  return (
    (t = Kn(s, r, t, i)), (t.elementType = e), (t.type = n), (t.lanes = o), t
  );
}
function no(e, t, r, n) {
  return (e = Kn(7, e, n, t)), (e.lanes = r), e;
}
function Ic(e, t, r, n) {
  return (
    (e = Kn(22, e, n, t)),
    (e.elementType = xv),
    (e.lanes = r),
    (e.stateNode = { isHidden: !1 }),
    e
  );
}
function xd(e, t, r) {
  return (e = Kn(6, e, null, t)), (e.lanes = r), e;
}
function kd(e, t, r) {
  return (
    (t = Kn(4, e.children !== null ? e.children : [], e.key, t)),
    (t.lanes = r),
    (t.stateNode = {
      containerInfo: e.containerInfo,
      pendingChildren: null,
      implementation: e.implementation,
    }),
    t
  );
}
function Ak(e, t, r, n, i) {
  (this.tag = t),
    (this.containerInfo = e),
    (this.finishedWork =
      this.pingCache =
      this.current =
      this.pendingChildren =
        null),
    (this.timeoutHandle = -1),
    (this.callbackNode = this.pendingContext = this.context = null),
    (this.callbackPriority = 0),
    (this.eventTimes = id(0)),
    (this.expirationTimes = id(-1)),
    (this.entangledLanes =
      this.finishedLanes =
      this.mutableReadLanes =
      this.expiredLanes =
      this.pingedLanes =
      this.suspendedLanes =
      this.pendingLanes =
        0),
    (this.entanglements = id(0)),
    (this.identifierPrefix = n),
    (this.onRecoverableError = i),
    (this.mutableSourceEagerHydrationData = null);
}
function bm(e, t, r, n, i, o, s, l, c) {
  return (
    (e = new Ak(e, t, r, l, c)),
    t === 1 ? ((t = 1), o === !0 && (t |= 8)) : (t = 0),
    (o = Kn(3, null, null, t)),
    (e.current = o),
    (o.stateNode = e),
    (o.memoizedState = {
      element: n,
      isDehydrated: r,
      cache: null,
      transitions: null,
      pendingSuspenseBoundaries: null,
    }),
    rm(o),
    e
  );
}
function Pk(e, t, r) {
  var n = 3 < arguments.length && arguments[3] !== void 0 ? arguments[3] : null;
  return {
    $$typeof: Ao,
    key: n == null ? null : '' + n,
    children: e,
    containerInfo: t,
    implementation: r,
  };
}
function h1(e) {
  if (!e) return Fi;
  e = e._reactInternals;
  e: {
    if (go(e) !== e || e.tag !== 1) throw Error(ve(170));
    var t = e;
    do {
      switch (t.tag) {
        case 3:
          t = t.stateNode.context;
          break e;
        case 1:
          if (kn(t.type)) {
            t = t.stateNode.__reactInternalMemoizedMergedChildContext;
            break e;
          }
      }
      t = t.return;
    } while (t !== null);
    throw Error(ve(171));
  }
  if (e.tag === 1) {
    var r = e.type;
    if (kn(r)) return hb(e, r, t);
  }
  return t;
}
function m1(e, t, r, n, i, o, s, l, c) {
  return (
    (e = bm(r, n, !0, e, i, o, s, l, c)),
    (e.context = h1(null)),
    (r = e.current),
    (n = mn()),
    (i = Pi(r)),
    (o = Vr(n, i)),
    (o.callback = t ?? null),
    Ci(r, o, i),
    (e.current.lanes = i),
    il(e, i, n),
    En(e, n),
    e
  );
}
function Fc(e, t, r, n) {
  var i = t.current,
    o = mn(),
    s = Pi(i);
  return (
    (r = h1(r)),
    t.context === null ? (t.context = r) : (t.pendingContext = r),
    (t = Vr(o, s)),
    (t.payload = { element: e }),
    (n = n === void 0 ? null : n),
    n !== null && (t.callback = n),
    (e = Ci(i, t, s)),
    e !== null && (cr(e, i, s, o), fu(e, i, s)),
    s
  );
}
function oc(e) {
  if (((e = e.current), !e.child)) return null;
  switch (e.child.tag) {
    case 5:
      return e.child.stateNode;
    default:
      return e.child.stateNode;
  }
}
function R_(e, t) {
  if (((e = e.memoizedState), e !== null && e.dehydrated !== null)) {
    var r = e.retryLane;
    e.retryLane = r !== 0 && r < t ? r : t;
  }
}
function wm(e, t) {
  R_(e, t), (e = e.alternate) && R_(e, t);
}
function qk() {
  return null;
}
var g1 =
  typeof reportError == 'function'
    ? reportError
    : function (e) {
        console.error(e);
      };
function Sm(e) {
  this._internalRoot = e;
}
Rc.prototype.render = Sm.prototype.render = function (e) {
  var t = this._internalRoot;
  if (t === null) throw Error(ve(409));
  Fc(e, t, null, null);
};
Rc.prototype.unmount = Sm.prototype.unmount = function () {
  var e = this._internalRoot;
  if (e !== null) {
    this._internalRoot = null;
    var t = e.containerInfo;
    po(function () {
      Fc(null, e, null, null);
    }),
      (t[Yr] = null);
  }
};
function Rc(e) {
  this._internalRoot = e;
}
Rc.prototype.unstable_scheduleHydration = function (e) {
  if (e) {
    var t = Qv();
    e = { blockedOn: null, target: e, priority: t };
    for (var r = 0; r < _i.length && t !== 0 && t < _i[r].priority; r++);
    _i.splice(r, 0, e), r === 0 && Kv(e);
  }
};
function xm(e) {
  return !(!e || (e.nodeType !== 1 && e.nodeType !== 9 && e.nodeType !== 11));
}
function Oc(e) {
  return !(
    !e ||
    (e.nodeType !== 1 &&
      e.nodeType !== 9 &&
      e.nodeType !== 11 &&
      (e.nodeType !== 8 || e.nodeValue !== ' react-mount-point-unstable '))
  );
}
function O_() {}
function Ik(e, t, r, n, i) {
  if (i) {
    if (typeof n == 'function') {
      var o = n;
      n = function () {
        var h = oc(s);
        o.call(h);
      };
    }
    var s = m1(t, n, e, 0, null, !1, !1, '', O_);
    return (
      (e._reactRootContainer = s),
      (e[Yr] = s.current),
      Oa(e.nodeType === 8 ? e.parentNode : e),
      po(),
      s
    );
  }
  for (; (i = e.lastChild); ) e.removeChild(i);
  if (typeof n == 'function') {
    var l = n;
    n = function () {
      var h = oc(c);
      l.call(h);
    };
  }
  var c = bm(e, 0, !1, null, null, !1, !1, '', O_);
  return (
    (e._reactRootContainer = c),
    (e[Yr] = c.current),
    Oa(e.nodeType === 8 ? e.parentNode : e),
    po(function () {
      Fc(t, c, r, n);
    }),
    c
  );
}
function Lc(e, t, r, n, i) {
  var o = r._reactRootContainer;
  if (o) {
    var s = o;
    if (typeof i == 'function') {
      var l = i;
      i = function () {
        var c = oc(s);
        l.call(c);
      };
    }
    Fc(t, s, e, i);
  } else s = Ik(r, t, e, i, n);
  return oc(s);
}
Uv = function (e) {
  switch (e.tag) {
    case 3:
      var t = e.stateNode;
      if (t.current.memoizedState.isDehydrated) {
        var r = Xs(t.pendingLanes);
        r !== 0 &&
          (Bh(t, r | 1), En(t, Lt()), !(tt & 6) && ((ms = Lt() + 500), Di()));
      }
      break;
    case 13:
      po(function () {
        var n = Jr(e, 1);
        if (n !== null) {
          var i = mn();
          cr(n, e, 1, i);
        }
      }),
        wm(e, 1);
  }
};
Vh = function (e) {
  if (e.tag === 13) {
    var t = Jr(e, 134217728);
    if (t !== null) {
      var r = mn();
      cr(t, e, 134217728, r);
    }
    wm(e, 134217728);
  }
};
Hv = function (e) {
  if (e.tag === 13) {
    var t = Pi(e),
      r = Jr(e, t);
    if (r !== null) {
      var n = mn();
      cr(r, e, t, n);
    }
    wm(e, t);
  }
};
Qv = function () {
  return ft;
};
Gv = function (e, t) {
  var r = ft;
  try {
    return (ft = e), t();
  } finally {
    ft = r;
  }
};
yp = function (e, t, r) {
  switch (t) {
    case 'input':
      if ((fp(e, r), (t = r.name), r.type === 'radio' && t != null)) {
        for (r = e; r.parentNode; ) r = r.parentNode;
        for (
          r = r.querySelectorAll(
            'input[name=' + JSON.stringify('' + t) + '][type="radio"]',
          ),
            t = 0;
          t < r.length;
          t++
        ) {
          var n = r[t];
          if (n !== e && n.form === e.form) {
            var i = Ec(n);
            if (!i) throw Error(ve(90));
            Ev(n), fp(n, i);
          }
        }
      }
      break;
    case 'textarea':
      Cv(e, r);
      break;
    case 'select':
      (t = r.value), t != null && Jo(e, !!r.multiple, t, !1);
  }
};
Ov = gm;
Lv = po;
var Fk = { usingClientEntryPoint: !1, Events: [sl, Ro, Ec, Fv, Rv, gm] },
  js = {
    findFiberByHostInstance: Xi,
    bundleType: 0,
    version: '18.3.1',
    rendererPackageName: 'react-dom',
  },
  Rk = {
    bundleType: js.bundleType,
    version: js.version,
    rendererPackageName: js.rendererPackageName,
    rendererConfig: js.rendererConfig,
    overrideHookState: null,
    overrideHookStateDeletePath: null,
    overrideHookStateRenamePath: null,
    overrideProps: null,
    overridePropsDeletePath: null,
    overridePropsRenamePath: null,
    setErrorHandler: null,
    setSuspenseHandler: null,
    scheduleUpdate: null,
    currentDispatcherRef: ni.ReactCurrentDispatcher,
    findHostInstanceByFiber: function (e) {
      return (e = zv(e)), e === null ? null : e.stateNode;
    },
    findFiberByHostInstance: js.findFiberByHostInstance || qk,
    findHostInstancesForRefresh: null,
    scheduleRefresh: null,
    scheduleRoot: null,
    setRefreshHandler: null,
    getCurrentFiber: null,
    reconcilerVersion: '18.3.1-next-f1338f8080-20240426',
  };
if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ < 'u') {
  var Hl = __REACT_DEVTOOLS_GLOBAL_HOOK__;
  if (!Hl.isDisabled && Hl.supportsFiber)
    try {
      (wc = Hl.inject(Rk)), (Er = Hl);
    } catch {}
}
Mn.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = Fk;
Mn.createPortal = function (e, t) {
  var r = 2 < arguments.length && arguments[2] !== void 0 ? arguments[2] : null;
  if (!xm(t)) throw Error(ve(200));
  return Pk(e, t, null, r);
};
Mn.createRoot = function (e, t) {
  if (!xm(e)) throw Error(ve(299));
  var r = !1,
    n = '',
    i = g1;
  return (
    t != null &&
      (t.unstable_strictMode === !0 && (r = !0),
      t.identifierPrefix !== void 0 && (n = t.identifierPrefix),
      t.onRecoverableError !== void 0 && (i = t.onRecoverableError)),
    (t = bm(e, 1, !1, null, null, r, !1, n, i)),
    (e[Yr] = t.current),
    Oa(e.nodeType === 8 ? e.parentNode : e),
    new Sm(t)
  );
};
Mn.findDOMNode = function (e) {
  if (e == null) return null;
  if (e.nodeType === 1) return e;
  var t = e._reactInternals;
  if (t === void 0)
    throw typeof e.render == 'function'
      ? Error(ve(188))
      : ((e = Object.keys(e).join(',')), Error(ve(268, e)));
  return (e = zv(t)), (e = e === null ? null : e.stateNode), e;
};
Mn.flushSync = function (e) {
  return po(e);
};
Mn.hydrate = function (e, t, r) {
  if (!Oc(t)) throw Error(ve(200));
  return Lc(null, e, t, !0, r);
};
Mn.hydrateRoot = function (e, t, r) {
  if (!xm(e)) throw Error(ve(405));
  var n = (r != null && r.hydratedSources) || null,
    i = !1,
    o = '',
    s = g1;
  if (
    (r != null &&
      (r.unstable_strictMode === !0 && (i = !0),
      r.identifierPrefix !== void 0 && (o = r.identifierPrefix),
      r.onRecoverableError !== void 0 && (s = r.onRecoverableError)),
    (t = m1(t, null, e, 1, r ?? null, i, !1, o, s)),
    (e[Yr] = t.current),
    Oa(e),
    n)
  )
    for (e = 0; e < n.length; e++)
      (r = n[e]),
        (i = r._getVersion),
        (i = i(r._source)),
        t.mutableSourceEagerHydrationData == null
          ? (t.mutableSourceEagerHydrationData = [r, i])
          : t.mutableSourceEagerHydrationData.push(r, i);
  return new Rc(t);
};
Mn.render = function (e, t, r) {
  if (!Oc(t)) throw Error(ve(200));
  return Lc(null, e, t, !1, r);
};
Mn.unmountComponentAtNode = function (e) {
  if (!Oc(e)) throw Error(ve(40));
  return e._reactRootContainer
    ? (po(function () {
        Lc(null, null, e, !1, function () {
          (e._reactRootContainer = null), (e[Yr] = null);
        });
      }),
      !0)
    : !1;
};
Mn.unstable_batchedUpdates = gm;
Mn.unstable_renderSubtreeIntoContainer = function (e, t, r, n) {
  if (!Oc(r)) throw Error(ve(200));
  if (e == null || e._reactInternals === void 0) throw Error(ve(38));
  return Lc(e, t, r, !1, n);
};
Mn.version = '18.3.1-next-f1338f8080-20240426';
function _1() {
  if (
    !(
      typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ > 'u' ||
      typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE != 'function'
    )
  )
    try {
      __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(_1);
    } catch (e) {
      console.error(e);
    }
}
_1(), (_v.exports = Mn);
var km = _v.exports,
  y1,
  L_ = km;
(y1 = L_.createRoot), L_.hydrateRoot;
var Ok = !1;
function Lk(e) {
  if (e.sheet) return e.sheet;
  for (var t = 0; t < document.styleSheets.length; t++)
    if (document.styleSheets[t].ownerNode === e) return document.styleSheets[t];
}
function Mk(e) {
  var t = document.createElement('style');
  return (
    t.setAttribute('data-emotion', e.key),
    e.nonce !== void 0 && t.setAttribute('nonce', e.nonce),
    t.appendChild(document.createTextNode('')),
    t.setAttribute('data-s', ''),
    t
  );
}
var Dk = (function () {
    function e(r) {
      var n = this;
      (this._insertTag = function (i) {
        var o;
        n.tags.length === 0
          ? n.insertionPoint
            ? (o = n.insertionPoint.nextSibling)
            : n.prepend
              ? (o = n.container.firstChild)
              : (o = n.before)
          : (o = n.tags[n.tags.length - 1].nextSibling),
          n.container.insertBefore(i, o),
          n.tags.push(i);
      }),
        (this.isSpeedy = r.speedy === void 0 ? !Ok : r.speedy),
        (this.tags = []),
        (this.ctr = 0),
        (this.nonce = r.nonce),
        (this.key = r.key),
        (this.container = r.container),
        (this.prepend = r.prepend),
        (this.insertionPoint = r.insertionPoint),
        (this.before = null);
    }
    var t = e.prototype;
    return (
      (t.hydrate = function (n) {
        n.forEach(this._insertTag);
      }),
      (t.insert = function (n) {
        this.ctr % (this.isSpeedy ? 65e3 : 1) === 0 &&
          this._insertTag(Mk(this));
        var i = this.tags[this.tags.length - 1];
        if (this.isSpeedy) {
          var o = Lk(i);
          try {
            o.insertRule(n, o.cssRules.length);
          } catch {}
        } else i.appendChild(document.createTextNode(n));
        this.ctr++;
      }),
      (t.flush = function () {
        this.tags.forEach(function (n) {
          var i;
          return (i = n.parentNode) == null ? void 0 : i.removeChild(n);
        }),
          (this.tags = []),
          (this.ctr = 0);
      }),
      e
    );
  })(),
  on = '-ms-',
  sc = '-moz-',
  rt = '-webkit-',
  v1 = 'comm',
  Em = 'rule',
  Tm = 'decl',
  zk = '@import',
  b1 = '@keyframes',
  $k = '@layer',
  Nk = Math.abs,
  Mc = String.fromCharCode,
  jk = Object.assign;
function Bk(e, t) {
  return Zt(e, 0) ^ 45
    ? (((((((t << 2) ^ Zt(e, 0)) << 2) ^ Zt(e, 1)) << 2) ^ Zt(e, 2)) << 2) ^
        Zt(e, 3)
    : 0;
}
function w1(e) {
  return e.trim();
}
function Vk(e, t) {
  return (e = t.exec(e)) ? e[0] : e;
}
function it(e, t, r) {
  return e.replace(t, r);
}
function Yp(e, t) {
  return e.indexOf(t);
}
function Zt(e, t) {
  return e.charCodeAt(t) | 0;
}
function Va(e, t, r) {
  return e.slice(t, r);
}
function br(e) {
  return e.length;
}
function Cm(e) {
  return e.length;
}
function Ql(e, t) {
  return t.push(e), e;
}
function Wk(e, t) {
  return e.map(t).join('');
}
var Dc = 1,
  gs = 1,
  S1 = 0,
  Tn = 0,
  zt = 0,
  ks = '';
function zc(e, t, r, n, i, o, s) {
  return {
    value: e,
    root: t,
    parent: r,
    type: n,
    props: i,
    children: o,
    line: Dc,
    column: gs,
    length: s,
    return: '',
  };
}
function Bs(e, t) {
  return jk(zc('', null, null, '', null, null, 0), e, { length: -e.length }, t);
}
function Uk() {
  return zt;
}
function Hk() {
  return (
    (zt = Tn > 0 ? Zt(ks, --Tn) : 0), gs--, zt === 10 && ((gs = 1), Dc--), zt
  );
}
function Fn() {
  return (
    (zt = Tn < S1 ? Zt(ks, Tn++) : 0), gs++, zt === 10 && ((gs = 1), Dc++), zt
  );
}
function Cr() {
  return Zt(ks, Tn);
}
function yu() {
  return Tn;
}
function ll(e, t) {
  return Va(ks, e, t);
}
function Wa(e) {
  switch (e) {
    case 0:
    case 9:
    case 10:
    case 13:
    case 32:
      return 5;
    case 33:
    case 43:
    case 44:
    case 47:
    case 62:
    case 64:
    case 126:
    case 59:
    case 123:
    case 125:
      return 4;
    case 58:
      return 3;
    case 34:
    case 39:
    case 40:
    case 91:
      return 2;
    case 41:
    case 93:
      return 1;
  }
  return 0;
}
function x1(e) {
  return (Dc = gs = 1), (S1 = br((ks = e))), (Tn = 0), [];
}
function k1(e) {
  return (ks = ''), e;
}
function vu(e) {
  return w1(ll(Tn - 1, Jp(e === 91 ? e + 2 : e === 40 ? e + 1 : e)));
}
function Qk(e) {
  for (; (zt = Cr()) && zt < 33; ) Fn();
  return Wa(e) > 2 || Wa(zt) > 3 ? '' : ' ';
}
function Gk(e, t) {
  for (
    ;
    --t &&
    Fn() &&
    !(zt < 48 || zt > 102 || (zt > 57 && zt < 65) || (zt > 70 && zt < 97));
  );
  return ll(e, yu() + (t < 6 && Cr() == 32 && Fn() == 32));
}
function Jp(e) {
  for (; Fn(); )
    switch (zt) {
      case e:
        return Tn;
      case 34:
      case 39:
        e !== 34 && e !== 39 && Jp(zt);
        break;
      case 40:
        e === 41 && Jp(e);
        break;
      case 92:
        Fn();
        break;
    }
  return Tn;
}
function Kk(e, t) {
  for (; Fn() && e + zt !== 57; ) if (e + zt === 84 && Cr() === 47) break;
  return '/*' + ll(t, Tn - 1) + '*' + Mc(e === 47 ? e : Fn());
}
function Xk(e) {
  for (; !Wa(Cr()); ) Fn();
  return ll(e, Tn);
}
function Yk(e) {
  return k1(bu('', null, null, null, [''], (e = x1(e)), 0, [0], e));
}
function bu(e, t, r, n, i, o, s, l, c) {
  for (
    var h = 0,
      y = 0,
      m = s,
      x = 0,
      I = 0,
      $ = 0,
      j = 1,
      G = 1,
      C = 1,
      T = 0,
      q = '',
      H = i,
      ie = o,
      he = n,
      le = q;
    G;
  )
    switch ((($ = T), (T = Fn()))) {
      case 40:
        if ($ != 108 && Zt(le, m - 1) == 58) {
          Yp((le += it(vu(T), '&', '&\f')), '&\f') != -1 && (C = -1);
          break;
        }
      case 34:
      case 39:
      case 91:
        le += vu(T);
        break;
      case 9:
      case 10:
      case 13:
      case 32:
        le += Qk($);
        break;
      case 92:
        le += Gk(yu() - 1, 7);
        continue;
      case 47:
        switch (Cr()) {
          case 42:
          case 47:
            Ql(Jk(Kk(Fn(), yu()), t, r), c);
            break;
          default:
            le += '/';
        }
        break;
      case 123 * j:
        l[h++] = br(le) * C;
      case 125 * j:
      case 59:
      case 0:
        switch (T) {
          case 0:
          case 125:
            G = 0;
          case 59 + y:
            C == -1 && (le = it(le, /\f/g, '')),
              I > 0 &&
                br(le) - m &&
                Ql(
                  I > 32
                    ? D_(le + ';', n, r, m - 1)
                    : D_(it(le, ' ', '') + ';', n, r, m - 2),
                  c,
                );
            break;
          case 59:
            le += ';';
          default:
            if (
              (Ql(
                (he = M_(le, t, r, h, y, i, l, q, (H = []), (ie = []), m)),
                o,
              ),
              T === 123)
            )
              if (y === 0) bu(le, t, he, he, H, o, m, l, ie);
              else
                switch (x === 99 && Zt(le, 3) === 110 ? 100 : x) {
                  case 100:
                  case 108:
                  case 109:
                  case 115:
                    bu(
                      e,
                      he,
                      he,
                      n && Ql(M_(e, he, he, 0, 0, i, l, q, i, (H = []), m), ie),
                      i,
                      ie,
                      m,
                      l,
                      n ? H : ie,
                    );
                    break;
                  default:
                    bu(le, he, he, he, [''], ie, 0, l, ie);
                }
        }
        (h = y = I = 0), (j = C = 1), (q = le = ''), (m = s);
        break;
      case 58:
        (m = 1 + br(le)), (I = $);
      default:
        if (j < 1) {
          if (T == 123) --j;
          else if (T == 125 && j++ == 0 && Hk() == 125) continue;
        }
        switch (((le += Mc(T)), T * j)) {
          case 38:
            C = y > 0 ? 1 : ((le += '\f'), -1);
            break;
          case 44:
            (l[h++] = (br(le) - 1) * C), (C = 1);
            break;
          case 64:
            Cr() === 45 && (le += vu(Fn())),
              (x = Cr()),
              (y = m = br((q = le += Xk(yu())))),
              T++;
            break;
          case 45:
            $ === 45 && br(le) == 2 && (j = 0);
        }
    }
  return o;
}
function M_(e, t, r, n, i, o, s, l, c, h, y) {
  for (
    var m = i - 1, x = i === 0 ? o : [''], I = Cm(x), $ = 0, j = 0, G = 0;
    $ < n;
    ++$
  )
    for (var C = 0, T = Va(e, m + 1, (m = Nk((j = s[$])))), q = e; C < I; ++C)
      (q = w1(j > 0 ? x[C] + ' ' + T : it(T, /&\f/g, x[C]))) && (c[G++] = q);
  return zc(e, t, r, i === 0 ? Em : l, c, h, y);
}
function Jk(e, t, r) {
  return zc(e, t, r, v1, Mc(Uk()), Va(e, 2, -2), 0);
}
function D_(e, t, r, n) {
  return zc(e, t, r, Tm, Va(e, 0, n), Va(e, n + 1, -1), n);
}
function is(e, t) {
  for (var r = '', n = Cm(e), i = 0; i < n; i++) r += t(e[i], i, e, t) || '';
  return r;
}
function Zk(e, t, r, n) {
  switch (e.type) {
    case $k:
      if (e.children.length) break;
    case zk:
    case Tm:
      return (e.return = e.return || e.value);
    case v1:
      return '';
    case b1:
      return (e.return = e.value + '{' + is(e.children, n) + '}');
    case Em:
      e.value = e.props.join(',');
  }
  return br((r = is(e.children, n)))
    ? (e.return = e.value + '{' + r + '}')
    : '';
}
function eE(e) {
  var t = Cm(e);
  return function (r, n, i, o) {
    for (var s = '', l = 0; l < t; l++) s += e[l](r, n, i, o) || '';
    return s;
  };
}
function tE(e) {
  return function (t) {
    t.root || ((t = t.return) && e(t));
  };
}
var z_ = function (t) {
  var r = new WeakMap();
  return function (n) {
    if (r.has(n)) return r.get(n);
    var i = t(n);
    return r.set(n, i), i;
  };
};
function E1(e) {
  var t = Object.create(null);
  return function (r) {
    return t[r] === void 0 && (t[r] = e(r)), t[r];
  };
}
var nE = function (t, r, n) {
    for (
      var i = 0, o = 0;
      (i = o), (o = Cr()), i === 38 && o === 12 && (r[n] = 1), !Wa(o);
    )
      Fn();
    return ll(t, Tn);
  },
  rE = function (t, r) {
    var n = -1,
      i = 44;
    do
      switch (Wa(i)) {
        case 0:
          i === 38 && Cr() === 12 && (r[n] = 1), (t[n] += nE(Tn - 1, r, n));
          break;
        case 2:
          t[n] += vu(i);
          break;
        case 4:
          if (i === 44) {
            (t[++n] = Cr() === 58 ? '&\f' : ''), (r[n] = t[n].length);
            break;
          }
        default:
          t[n] += Mc(i);
      }
    while ((i = Fn()));
    return t;
  },
  iE = function (t, r) {
    return k1(rE(x1(t), r));
  },
  $_ = new WeakMap(),
  oE = function (t) {
    if (!(t.type !== 'rule' || !t.parent || t.length < 1)) {
      for (
        var r = t.value,
          n = t.parent,
          i = t.column === n.column && t.line === n.line;
        n.type !== 'rule';
      )
        if (((n = n.parent), !n)) return;
      if (
        !(t.props.length === 1 && r.charCodeAt(0) !== 58 && !$_.get(n)) &&
        !i
      ) {
        $_.set(t, !0);
        for (
          var o = [], s = iE(r, o), l = n.props, c = 0, h = 0;
          c < s.length;
          c++
        )
          for (var y = 0; y < l.length; y++, h++)
            t.props[h] = o[c] ? s[c].replace(/&\f/g, l[y]) : l[y] + ' ' + s[c];
      }
    }
  },
  sE = function (t) {
    if (t.type === 'decl') {
      var r = t.value;
      r.charCodeAt(0) === 108 &&
        r.charCodeAt(2) === 98 &&
        ((t.return = ''), (t.value = ''));
    }
  };
function T1(e, t) {
  switch (Bk(e, t)) {
    case 5103:
      return rt + 'print-' + e + e;
    case 5737:
    case 4201:
    case 3177:
    case 3433:
    case 1641:
    case 4457:
    case 2921:
    case 5572:
    case 6356:
    case 5844:
    case 3191:
    case 6645:
    case 3005:
    case 6391:
    case 5879:
    case 5623:
    case 6135:
    case 4599:
    case 4855:
    case 4215:
    case 6389:
    case 5109:
    case 5365:
    case 5621:
    case 3829:
      return rt + e + e;
    case 5349:
    case 4246:
    case 4810:
    case 6968:
    case 2756:
      return rt + e + sc + e + on + e + e;
    case 6828:
    case 4268:
      return rt + e + on + e + e;
    case 6165:
      return rt + e + on + 'flex-' + e + e;
    case 5187:
      return (
        rt + e + it(e, /(\w+).+(:[^]+)/, rt + 'box-$1$2' + on + 'flex-$1$2') + e
      );
    case 5443:
      return rt + e + on + 'flex-item-' + it(e, /flex-|-self/, '') + e;
    case 4675:
      return (
        rt +
        e +
        on +
        'flex-line-pack' +
        it(e, /align-content|flex-|-self/, '') +
        e
      );
    case 5548:
      return rt + e + on + it(e, 'shrink', 'negative') + e;
    case 5292:
      return rt + e + on + it(e, 'basis', 'preferred-size') + e;
    case 6060:
      return (
        rt +
        'box-' +
        it(e, '-grow', '') +
        rt +
        e +
        on +
        it(e, 'grow', 'positive') +
        e
      );
    case 4554:
      return rt + it(e, /([^-])(transform)/g, '$1' + rt + '$2') + e;
    case 6187:
      return (
        it(
          it(it(e, /(zoom-|grab)/, rt + '$1'), /(image-set)/, rt + '$1'),
          e,
          '',
        ) + e
      );
    case 5495:
    case 3959:
      return it(e, /(image-set\([^]*)/, rt + '$1$`$1');
    case 4968:
      return (
        it(
          it(e, /(.+:)(flex-)?(.*)/, rt + 'box-pack:$3' + on + 'flex-pack:$3'),
          /s.+-b[^;]+/,
          'justify',
        ) +
        rt +
        e +
        e
      );
    case 4095:
    case 3583:
    case 4068:
    case 2532:
      return it(e, /(.+)-inline(.+)/, rt + '$1$2') + e;
    case 8116:
    case 7059:
    case 5753:
    case 5535:
    case 5445:
    case 5701:
    case 4933:
    case 4677:
    case 5533:
    case 5789:
    case 5021:
    case 4765:
      if (br(e) - 1 - t > 6)
        switch (Zt(e, t + 1)) {
          case 109:
            if (Zt(e, t + 4) !== 45) break;
          case 102:
            return (
              it(
                e,
                /(.+:)(.+)-([^]+)/,
                '$1' +
                  rt +
                  '$2-$3$1' +
                  sc +
                  (Zt(e, t + 3) == 108 ? '$3' : '$2-$3'),
              ) + e
            );
          case 115:
            return ~Yp(e, 'stretch')
              ? T1(it(e, 'stretch', 'fill-available'), t) + e
              : e;
        }
      break;
    case 4949:
      if (Zt(e, t + 1) !== 115) break;
    case 6444:
      switch (Zt(e, br(e) - 3 - (~Yp(e, '!important') && 10))) {
        case 107:
          return it(e, ':', ':' + rt) + e;
        case 101:
          return (
            it(
              e,
              /(.+:)([^;!]+)(;|!.+)?/,
              '$1' +
                rt +
                (Zt(e, 14) === 45 ? 'inline-' : '') +
                'box$3$1' +
                rt +
                '$2$3$1' +
                on +
                '$2box$3',
            ) + e
          );
      }
      break;
    case 5936:
      switch (Zt(e, t + 11)) {
        case 114:
          return rt + e + on + it(e, /[svh]\w+-[tblr]{2}/, 'tb') + e;
        case 108:
          return rt + e + on + it(e, /[svh]\w+-[tblr]{2}/, 'tb-rl') + e;
        case 45:
          return rt + e + on + it(e, /[svh]\w+-[tblr]{2}/, 'lr') + e;
      }
      return rt + e + on + e + e;
  }
  return e;
}
var aE = function (t, r, n, i) {
    if (t.length > -1 && !t.return)
      switch (t.type) {
        case Tm:
          t.return = T1(t.value, t.length);
          break;
        case b1:
          return is([Bs(t, { value: it(t.value, '@', '@' + rt) })], i);
        case Em:
          if (t.length)
            return Wk(t.props, function (o) {
              switch (Vk(o, /(::plac\w+|:read-\w+)/)) {
                case ':read-only':
                case ':read-write':
                  return is(
                    [Bs(t, { props: [it(o, /:(read-\w+)/, ':' + sc + '$1')] })],
                    i,
                  );
                case '::placeholder':
                  return is(
                    [
                      Bs(t, {
                        props: [it(o, /:(plac\w+)/, ':' + rt + 'input-$1')],
                      }),
                      Bs(t, { props: [it(o, /:(plac\w+)/, ':' + sc + '$1')] }),
                      Bs(t, { props: [it(o, /:(plac\w+)/, on + 'input-$1')] }),
                    ],
                    i,
                  );
              }
              return '';
            });
      }
  },
  lE = [aE],
  uE = function (t) {
    var r = t.key;
    if (r === 'css') {
      var n = document.querySelectorAll('style[data-emotion]:not([data-s])');
      Array.prototype.forEach.call(n, function (j) {
        var G = j.getAttribute('data-emotion');
        G.indexOf(' ') !== -1 &&
          (document.head.appendChild(j), j.setAttribute('data-s', ''));
      });
    }
    var i = t.stylisPlugins || lE,
      o = {},
      s,
      l = [];
    (s = t.container || document.head),
      Array.prototype.forEach.call(
        document.querySelectorAll('style[data-emotion^="' + r + ' "]'),
        function (j) {
          for (
            var G = j.getAttribute('data-emotion').split(' '), C = 1;
            C < G.length;
            C++
          )
            o[G[C]] = !0;
          l.push(j);
        },
      );
    var c,
      h = [oE, sE];
    {
      var y,
        m = [
          Zk,
          tE(function (j) {
            y.insert(j);
          }),
        ],
        x = eE(h.concat(i, m)),
        I = function (G) {
          return is(Yk(G), x);
        };
      c = function (G, C, T, q) {
        (y = T),
          I(G ? G + '{' + C.styles + '}' : C.styles),
          q && ($.inserted[C.name] = !0);
      };
    }
    var $ = {
      key: r,
      sheet: new Dk({
        key: r,
        container: s,
        nonce: t.nonce,
        speedy: t.speedy,
        prepend: t.prepend,
        insertionPoint: t.insertionPoint,
      }),
      nonce: t.nonce,
      inserted: o,
      registered: {},
      insert: c,
    };
    return $.sheet.hydrate(l), $;
  };
function ac() {
  return (
    (ac = Object.assign
      ? Object.assign.bind()
      : function (e) {
          for (var t = 1; t < arguments.length; t++) {
            var r = arguments[t];
            for (var n in r) ({}).hasOwnProperty.call(r, n) && (e[n] = r[n]);
          }
          return e;
        }),
    ac.apply(null, arguments)
  );
}
var C1 = { exports: {} },
  pt = {}; /** @license React v16.13.1
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var Ht = typeof Symbol == 'function' && Symbol.for,
  Am = Ht ? Symbol.for('react.element') : 60103,
  Pm = Ht ? Symbol.for('react.portal') : 60106,
  $c = Ht ? Symbol.for('react.fragment') : 60107,
  Nc = Ht ? Symbol.for('react.strict_mode') : 60108,
  jc = Ht ? Symbol.for('react.profiler') : 60114,
  Bc = Ht ? Symbol.for('react.provider') : 60109,
  Vc = Ht ? Symbol.for('react.context') : 60110,
  qm = Ht ? Symbol.for('react.async_mode') : 60111,
  Wc = Ht ? Symbol.for('react.concurrent_mode') : 60111,
  Uc = Ht ? Symbol.for('react.forward_ref') : 60112,
  Hc = Ht ? Symbol.for('react.suspense') : 60113,
  cE = Ht ? Symbol.for('react.suspense_list') : 60120,
  Qc = Ht ? Symbol.for('react.memo') : 60115,
  Gc = Ht ? Symbol.for('react.lazy') : 60116,
  fE = Ht ? Symbol.for('react.block') : 60121,
  dE = Ht ? Symbol.for('react.fundamental') : 60117,
  pE = Ht ? Symbol.for('react.responder') : 60118,
  hE = Ht ? Symbol.for('react.scope') : 60119;
function zn(e) {
  if (typeof e == 'object' && e !== null) {
    var t = e.$$typeof;
    switch (t) {
      case Am:
        switch (((e = e.type), e)) {
          case qm:
          case Wc:
          case $c:
          case jc:
          case Nc:
          case Hc:
            return e;
          default:
            switch (((e = e && e.$$typeof), e)) {
              case Vc:
              case Uc:
              case Gc:
              case Qc:
              case Bc:
                return e;
              default:
                return t;
            }
        }
      case Pm:
        return t;
    }
  }
}
function A1(e) {
  return zn(e) === Wc;
}
pt.AsyncMode = qm;
pt.ConcurrentMode = Wc;
pt.ContextConsumer = Vc;
pt.ContextProvider = Bc;
pt.Element = Am;
pt.ForwardRef = Uc;
pt.Fragment = $c;
pt.Lazy = Gc;
pt.Memo = Qc;
pt.Portal = Pm;
pt.Profiler = jc;
pt.StrictMode = Nc;
pt.Suspense = Hc;
pt.isAsyncMode = function (e) {
  return A1(e) || zn(e) === qm;
};
pt.isConcurrentMode = A1;
pt.isContextConsumer = function (e) {
  return zn(e) === Vc;
};
pt.isContextProvider = function (e) {
  return zn(e) === Bc;
};
pt.isElement = function (e) {
  return typeof e == 'object' && e !== null && e.$$typeof === Am;
};
pt.isForwardRef = function (e) {
  return zn(e) === Uc;
};
pt.isFragment = function (e) {
  return zn(e) === $c;
};
pt.isLazy = function (e) {
  return zn(e) === Gc;
};
pt.isMemo = function (e) {
  return zn(e) === Qc;
};
pt.isPortal = function (e) {
  return zn(e) === Pm;
};
pt.isProfiler = function (e) {
  return zn(e) === jc;
};
pt.isStrictMode = function (e) {
  return zn(e) === Nc;
};
pt.isSuspense = function (e) {
  return zn(e) === Hc;
};
pt.isValidElementType = function (e) {
  return (
    typeof e == 'string' ||
    typeof e == 'function' ||
    e === $c ||
    e === Wc ||
    e === jc ||
    e === Nc ||
    e === Hc ||
    e === cE ||
    (typeof e == 'object' &&
      e !== null &&
      (e.$$typeof === Gc ||
        e.$$typeof === Qc ||
        e.$$typeof === Bc ||
        e.$$typeof === Vc ||
        e.$$typeof === Uc ||
        e.$$typeof === dE ||
        e.$$typeof === pE ||
        e.$$typeof === hE ||
        e.$$typeof === fE))
  );
};
pt.typeOf = zn;
C1.exports = pt;
var mE = C1.exports,
  P1 = mE,
  gE = {
    $$typeof: !0,
    render: !0,
    defaultProps: !0,
    displayName: !0,
    propTypes: !0,
  },
  _E = {
    $$typeof: !0,
    compare: !0,
    defaultProps: !0,
    displayName: !0,
    propTypes: !0,
    type: !0,
  },
  q1 = {};
q1[P1.ForwardRef] = gE;
q1[P1.Memo] = _E;
var yE = !0;
function vE(e, t, r) {
  var n = '';
  return (
    r.split(' ').forEach(function (i) {
      e[i] !== void 0 ? t.push(e[i] + ';') : (n += i + ' ');
    }),
    n
  );
}
var I1 = function (t, r, n) {
    var i = t.key + '-' + r.name;
    (n === !1 || yE === !1) &&
      t.registered[i] === void 0 &&
      (t.registered[i] = r.styles);
  },
  F1 = function (t, r, n) {
    I1(t, r, n);
    var i = t.key + '-' + r.name;
    if (t.inserted[r.name] === void 0) {
      var o = r;
      do t.insert(r === o ? '.' + i : '', o, t.sheet, !0), (o = o.next);
      while (o !== void 0);
    }
  };
function bE(e) {
  for (var t = 0, r, n = 0, i = e.length; i >= 4; ++n, i -= 4)
    (r =
      (e.charCodeAt(n) & 255) |
      ((e.charCodeAt(++n) & 255) << 8) |
      ((e.charCodeAt(++n) & 255) << 16) |
      ((e.charCodeAt(++n) & 255) << 24)),
      (r = (r & 65535) * 1540483477 + (((r >>> 16) * 59797) << 16)),
      (r ^= r >>> 24),
      (t =
        ((r & 65535) * 1540483477 + (((r >>> 16) * 59797) << 16)) ^
        ((t & 65535) * 1540483477 + (((t >>> 16) * 59797) << 16)));
  switch (i) {
    case 3:
      t ^= (e.charCodeAt(n + 2) & 255) << 16;
    case 2:
      t ^= (e.charCodeAt(n + 1) & 255) << 8;
    case 1:
      (t ^= e.charCodeAt(n) & 255),
        (t = (t & 65535) * 1540483477 + (((t >>> 16) * 59797) << 16));
  }
  return (
    (t ^= t >>> 13),
    (t = (t & 65535) * 1540483477 + (((t >>> 16) * 59797) << 16)),
    ((t ^ (t >>> 15)) >>> 0).toString(36)
  );
}
var wE = {
    animationIterationCount: 1,
    aspectRatio: 1,
    borderImageOutset: 1,
    borderImageSlice: 1,
    borderImageWidth: 1,
    boxFlex: 1,
    boxFlexGroup: 1,
    boxOrdinalGroup: 1,
    columnCount: 1,
    columns: 1,
    flex: 1,
    flexGrow: 1,
    flexPositive: 1,
    flexShrink: 1,
    flexNegative: 1,
    flexOrder: 1,
    gridRow: 1,
    gridRowEnd: 1,
    gridRowSpan: 1,
    gridRowStart: 1,
    gridColumn: 1,
    gridColumnEnd: 1,
    gridColumnSpan: 1,
    gridColumnStart: 1,
    msGridRow: 1,
    msGridRowSpan: 1,
    msGridColumn: 1,
    msGridColumnSpan: 1,
    fontWeight: 1,
    lineHeight: 1,
    opacity: 1,
    order: 1,
    orphans: 1,
    scale: 1,
    tabSize: 1,
    widows: 1,
    zIndex: 1,
    zoom: 1,
    WebkitLineClamp: 1,
    fillOpacity: 1,
    floodOpacity: 1,
    stopOpacity: 1,
    strokeDasharray: 1,
    strokeDashoffset: 1,
    strokeMiterlimit: 1,
    strokeOpacity: 1,
    strokeWidth: 1,
  },
  SE = !1,
  xE = /[A-Z]|^ms/g,
  kE = /_EMO_([^_]+?)_([^]*?)_EMO_/g,
  R1 = function (t) {
    return t.charCodeAt(1) === 45;
  },
  N_ = function (t) {
    return t != null && typeof t != 'boolean';
  },
  Ed = E1(function (e) {
    return R1(e) ? e : e.replace(xE, '-$&').toLowerCase();
  }),
  j_ = function (t, r) {
    switch (t) {
      case 'animation':
      case 'animationName':
        if (typeof r == 'string')
          return r.replace(kE, function (n, i, o) {
            return (wr = { name: i, styles: o, next: wr }), i;
          });
    }
    return wE[t] !== 1 && !R1(t) && typeof r == 'number' && r !== 0
      ? r + 'px'
      : r;
  },
  EE =
    'Component selectors can only be used in conjunction with @emotion/babel-plugin, the swc Emotion plugin, or another Emotion-aware compiler transform.';
function Ua(e, t, r) {
  if (r == null) return '';
  var n = r;
  if (n.__emotion_styles !== void 0) return n;
  switch (typeof r) {
    case 'boolean':
      return '';
    case 'object': {
      var i = r;
      if (i.anim === 1)
        return (wr = { name: i.name, styles: i.styles, next: wr }), i.name;
      var o = r;
      if (o.styles !== void 0) {
        var s = o.next;
        if (s !== void 0)
          for (; s !== void 0; )
            (wr = { name: s.name, styles: s.styles, next: wr }), (s = s.next);
        var l = o.styles + ';';
        return l;
      }
      return TE(e, t, r);
    }
    case 'function': {
      if (e !== void 0) {
        var c = wr,
          h = r(e);
        return (wr = c), Ua(e, t, h);
      }
      break;
    }
  }
  var y = r;
  if (t == null) return y;
  var m = t[y];
  return m !== void 0 ? m : y;
}
function TE(e, t, r) {
  var n = '';
  if (Array.isArray(r))
    for (var i = 0; i < r.length; i++) n += Ua(e, t, r[i]) + ';';
  else
    for (var o in r) {
      var s = r[o];
      if (typeof s != 'object') {
        var l = s;
        t != null && t[l] !== void 0
          ? (n += o + '{' + t[l] + '}')
          : N_(l) && (n += Ed(o) + ':' + j_(o, l) + ';');
      } else {
        if (o === 'NO_COMPONENT_SELECTOR' && SE) throw new Error(EE);
        if (
          Array.isArray(s) &&
          typeof s[0] == 'string' &&
          (t == null || t[s[0]] === void 0)
        )
          for (var c = 0; c < s.length; c++)
            N_(s[c]) && (n += Ed(o) + ':' + j_(o, s[c]) + ';');
        else {
          var h = Ua(e, t, s);
          switch (o) {
            case 'animation':
            case 'animationName': {
              n += Ed(o) + ':' + h + ';';
              break;
            }
            default:
              n += o + '{' + h + '}';
          }
        }
      }
    }
  return n;
}
var B_ = /label:\s*([^\s;\n{]+)\s*(;|$)/g,
  wr;
function Im(e, t, r) {
  if (
    e.length === 1 &&
    typeof e[0] == 'object' &&
    e[0] !== null &&
    e[0].styles !== void 0
  )
    return e[0];
  var n = !0,
    i = '';
  wr = void 0;
  var o = e[0];
  if (o == null || o.raw === void 0) (n = !1), (i += Ua(r, t, o));
  else {
    var s = o;
    i += s[0];
  }
  for (var l = 1; l < e.length; l++)
    if (((i += Ua(r, t, e[l])), n)) {
      var c = o;
      i += c[l];
    }
  B_.lastIndex = 0;
  for (var h = '', y; (y = B_.exec(i)) !== null; ) h += '-' + y[1];
  var m = bE(i) + h;
  return { name: m, styles: i, next: wr };
}
var CE = function (t) {
    return t();
  },
  O1 = Pg.useInsertionEffect ? Pg.useInsertionEffect : !1,
  AE = O1 || CE,
  V_ = O1 || K.useLayoutEffect,
  L1 = K.createContext(typeof HTMLElement < 'u' ? uE({ key: 'css' }) : null);
L1.Provider;
var M1 = function (t) {
    return K.forwardRef(function (r, n) {
      var i = K.useContext(L1);
      return t(r, i, n);
    });
  },
  Ha = K.createContext({}),
  PE = function (t, r) {
    if (typeof r == 'function') {
      var n = r(t);
      return n;
    }
    return ac({}, t, r);
  },
  qE = z_(function (e) {
    return z_(function (t) {
      return PE(e, t);
    });
  }),
  IE = function (t) {
    var r = K.useContext(Ha);
    return (
      t.theme !== r && (r = qE(r)(t.theme)),
      K.createElement(Ha.Provider, { value: r }, t.children)
    );
  },
  Kc = M1(function (e, t) {
    var r = e.styles,
      n = Im([r], void 0, K.useContext(Ha)),
      i = K.useRef();
    return (
      V_(
        function () {
          var o = t.key + '-global',
            s = new t.sheet.constructor({
              key: o,
              nonce: t.sheet.nonce,
              container: t.sheet.container,
              speedy: t.sheet.isSpeedy,
            }),
            l = !1,
            c = document.querySelector(
              'style[data-emotion="' + o + ' ' + n.name + '"]',
            );
          return (
            t.sheet.tags.length && (s.before = t.sheet.tags[0]),
            c !== null &&
              ((l = !0), c.setAttribute('data-emotion', o), s.hydrate([c])),
            (i.current = [s, l]),
            function () {
              s.flush();
            }
          );
        },
        [t],
      ),
      V_(
        function () {
          var o = i.current,
            s = o[0],
            l = o[1];
          if (l) {
            o[1] = !1;
            return;
          }
          if ((n.next !== void 0 && F1(t, n.next, !0), s.tags.length)) {
            var c = s.tags[s.tags.length - 1].nextElementSibling;
            (s.before = c), s.flush();
          }
          t.insert('', n, s, !1);
        },
        [t, n.name],
      ),
      null
    );
  });
function FE() {
  for (var e = arguments.length, t = new Array(e), r = 0; r < e; r++)
    t[r] = arguments[r];
  return Im(t);
}
var Xc = function () {
    var t = FE.apply(void 0, arguments),
      r = 'animation-' + t.name;
    return {
      name: r,
      styles: '@keyframes ' + r + '{' + t.styles + '}',
      anim: 1,
      toString: function () {
        return '_EMO_' + this.name + '_' + this.styles + '_EMO_';
      },
    };
  },
  D1 = String.raw,
  z1 = D1`
  :root,
  :host {
    --chakra-vh: 100vh;
  }

  @supports (height: -webkit-fill-available) {
    :root,
    :host {
      --chakra-vh: -webkit-fill-available;
    }
  }

  @supports (height: -moz-fill-available) {
    :root,
    :host {
      --chakra-vh: -moz-fill-available;
    }
  }

  @supports (height: 100dvh) {
    :root,
    :host {
      --chakra-vh: 100dvh;
    }
  }
`,
  RE = () => te.jsx(Kc, { styles: z1 }),
  OE = ({ scope: e = '' }) =>
    te.jsx(Kc, {
      styles: D1`
      html {
        line-height: 1.5;
        -webkit-text-size-adjust: 100%;
        font-family: system-ui, sans-serif;
        -webkit-font-smoothing: antialiased;
        text-rendering: optimizeLegibility;
        -moz-osx-font-smoothing: grayscale;
        touch-action: manipulation;
      }

      body {
        position: relative;
        min-height: 100%;
        margin: 0;
        font-feature-settings: "kern";
      }

      ${e} :where(*, *::before, *::after) {
        border-width: 0;
        border-style: solid;
        box-sizing: border-box;
        word-wrap: break-word;
      }

      main {
        display: block;
      }

      ${e} hr {
        border-top-width: 1px;
        box-sizing: content-box;
        height: 0;
        overflow: visible;
      }

      ${e} :where(pre, code, kbd,samp) {
        font-family: SFMono-Regular, Menlo, Monaco, Consolas, monospace;
        font-size: 1em;
      }

      ${e} a {
        background-color: transparent;
        color: inherit;
        text-decoration: inherit;
      }

      ${e} abbr[title] {
        border-bottom: none;
        text-decoration: underline;
        -webkit-text-decoration: underline dotted;
        text-decoration: underline dotted;
      }

      ${e} :where(b, strong) {
        font-weight: bold;
      }

      ${e} small {
        font-size: 80%;
      }

      ${e} :where(sub,sup) {
        font-size: 75%;
        line-height: 0;
        position: relative;
        vertical-align: baseline;
      }

      ${e} sub {
        bottom: -0.25em;
      }

      ${e} sup {
        top: -0.5em;
      }

      ${e} img {
        border-style: none;
      }

      ${e} :where(button, input, optgroup, select, textarea) {
        font-family: inherit;
        font-size: 100%;
        line-height: 1.15;
        margin: 0;
      }

      ${e} :where(button, input) {
        overflow: visible;
      }

      ${e} :where(button, select) {
        text-transform: none;
      }

      ${e} :where(
          button::-moz-focus-inner,
          [type="button"]::-moz-focus-inner,
          [type="reset"]::-moz-focus-inner,
          [type="submit"]::-moz-focus-inner
        ) {
        border-style: none;
        padding: 0;
      }

      ${e} fieldset {
        padding: 0.35em 0.75em 0.625em;
      }

      ${e} legend {
        box-sizing: border-box;
        color: inherit;
        display: table;
        max-width: 100%;
        padding: 0;
        white-space: normal;
      }

      ${e} progress {
        vertical-align: baseline;
      }

      ${e} textarea {
        overflow: auto;
      }

      ${e} :where([type="checkbox"], [type="radio"]) {
        box-sizing: border-box;
        padding: 0;
      }

      ${e} input[type="number"]::-webkit-inner-spin-button,
      ${e} input[type="number"]::-webkit-outer-spin-button {
        -webkit-appearance: none !important;
      }

      ${e} input[type="number"] {
        -moz-appearance: textfield;
      }

      ${e} input[type="search"] {
        -webkit-appearance: textfield;
        outline-offset: -2px;
      }

      ${e} input[type="search"]::-webkit-search-decoration {
        -webkit-appearance: none !important;
      }

      ${e} ::-webkit-file-upload-button {
        -webkit-appearance: button;
        font: inherit;
      }

      ${e} details {
        display: block;
      }

      ${e} summary {
        display: list-item;
      }

      template {
        display: none;
      }

      [hidden] {
        display: none !important;
      }

      ${e} :where(
          blockquote,
          dl,
          dd,
          h1,
          h2,
          h3,
          h4,
          h5,
          h6,
          hr,
          figure,
          p,
          pre
        ) {
        margin: 0;
      }

      ${e} button {
        background: transparent;
        padding: 0;
      }

      ${e} fieldset {
        margin: 0;
        padding: 0;
      }

      ${e} :where(ol, ul) {
        margin: 0;
        padding: 0;
      }

      ${e} textarea {
        resize: vertical;
      }

      ${e} :where(button, [role="button"]) {
        cursor: pointer;
      }

      ${e} button::-moz-focus-inner {
        border: 0 !important;
      }

      ${e} table {
        border-collapse: collapse;
      }

      ${e} :where(h1, h2, h3, h4, h5, h6) {
        font-size: inherit;
        font-weight: inherit;
      }

      ${e} :where(button, input, optgroup, select, textarea) {
        padding: 0;
        line-height: inherit;
        color: inherit;
      }

      ${e} :where(img, svg, video, canvas, audio, iframe, embed, object) {
        display: block;
      }

      ${e} :where(img, video) {
        max-width: 100%;
        height: auto;
      }

      [data-js-focus-visible]
        :focus:not([data-focus-visible-added]):not(
          [data-focus-visible-disabled]
        ) {
        outline: none;
        box-shadow: none;
      }

      ${e} select::-ms-expand {
        display: none;
      }

      ${z1}
    `,
    });
function LE(e, t) {
  return `${e} returned \`undefined\`. Seems you forgot to wrap component within ${t}`;
}
function ri(e = {}) {
  const {
      name: t,
      strict: r = !0,
      hookName: n = 'useContext',
      providerName: i = 'Provider',
      errorMessage: o,
      defaultValue: s,
    } = e,
    l = K.createContext(s);
  l.displayName = t;
  function c() {
    var h;
    const y = K.useContext(l);
    if (!y && r) {
      const m = new Error(o ?? LE(n, i));
      throw (
        ((m.name = 'ContextError'),
        (h = Error.captureStackTrace) == null || h.call(Error, m, c),
        m)
      );
    }
    return y;
  }
  return [l.Provider, c, l];
}
var [ME, DE] = ri({ strict: !1, name: 'PortalManagerContext' });
function $1(e) {
  const { children: t, zIndex: r } = e;
  return te.jsx(ME, { value: { zIndex: r }, children: t });
}
$1.displayName = 'PortalManager';
var ro =
    globalThis != null && globalThis.document ? K.useLayoutEffect : K.useEffect,
  [N1, zE] = ri({ strict: !1, name: 'PortalContext' }),
  Fm = 'chakra-portal',
  $E = '.chakra-portal',
  NE = (e) =>
    te.jsx('div', {
      className: 'chakra-portal-zIndex',
      style: {
        position: 'absolute',
        zIndex: e.zIndex,
        top: 0,
        left: 0,
        right: 0,
      },
      children: e.children,
    }),
  jE = (e) => {
    const { appendToParentPortal: t, children: r } = e,
      [n, i] = K.useState(null),
      o = K.useRef(null),
      [, s] = K.useState({});
    K.useEffect(() => s({}), []);
    const l = zE(),
      c = DE();
    ro(() => {
      if (!n) return;
      const y = n.ownerDocument,
        m = t ? (l ?? y.body) : y.body;
      if (!m) return;
      (o.current = y.createElement('div')),
        (o.current.className = Fm),
        m.appendChild(o.current),
        s({});
      const x = o.current;
      return () => {
        m.contains(x) && m.removeChild(x);
      };
    }, [n]);
    const h =
      c != null && c.zIndex
        ? te.jsx(NE, { zIndex: c == null ? void 0 : c.zIndex, children: r })
        : r;
    return o.current
      ? km.createPortal(
          te.jsx(N1, { value: o.current, children: h }),
          o.current,
        )
      : te.jsx('span', {
          ref: (y) => {
            y && i(y);
          },
        });
  },
  BE = (e) => {
    const { children: t, containerRef: r, appendToParentPortal: n } = e,
      i = r.current,
      o = i ?? (typeof window < 'u' ? document.body : void 0),
      s = K.useMemo(() => {
        const c = i == null ? void 0 : i.ownerDocument.createElement('div');
        return c && (c.className = Fm), c;
      }, [i]),
      [, l] = K.useState({});
    return (
      ro(() => l({}), []),
      ro(() => {
        if (!(!s || !o))
          return (
            o.appendChild(s),
            () => {
              o.removeChild(s);
            }
          );
      }, [s, o]),
      o && s
        ? km.createPortal(te.jsx(N1, { value: n ? s : null, children: t }), s)
        : null
    );
  };
function Yc(e) {
  const t = { appendToParentPortal: !0, ...e },
    { containerRef: r, ...n } = t;
  return r ? te.jsx(BE, { containerRef: r, ...n }) : te.jsx(jE, { ...n });
}
Yc.className = Fm;
Yc.selector = $E;
Yc.displayName = 'Portal';
function VE() {
  const e = K.useContext(Ha);
  if (!e)
    throw Error(
      'useTheme: `theme` is undefined. Seems you forgot to wrap your app in `<ChakraProvider />` or `<ThemeProvider />`',
    );
  return e;
}
var Rm = K.createContext({});
Rm.displayName = 'ColorModeContext';
function Om() {
  const e = K.useContext(Rm);
  if (e === void 0)
    throw new Error('useColorMode must be used within a ColorModeProvider');
  return e;
}
var Gl = { light: 'chakra-ui-light', dark: 'chakra-ui-dark' };
function WE(e = {}) {
  const { preventTransition: t = !0 } = e,
    r = {
      setDataset: (n) => {
        const i = t ? r.preventTransition() : void 0;
        (document.documentElement.dataset.theme = n),
          (document.documentElement.style.colorScheme = n),
          i == null || i();
      },
      setClassName(n) {
        document.body.classList.add(n ? Gl.dark : Gl.light),
          document.body.classList.remove(n ? Gl.light : Gl.dark);
      },
      query() {
        return window.matchMedia('(prefers-color-scheme: dark)');
      },
      getSystemTheme(n) {
        var i;
        return ((i = r.query().matches) != null ? i : n === 'dark')
          ? 'dark'
          : 'light';
      },
      addListener(n) {
        const i = r.query(),
          o = (s) => {
            n(s.matches ? 'dark' : 'light');
          };
        return (
          typeof i.addListener == 'function'
            ? i.addListener(o)
            : i.addEventListener('change', o),
          () => {
            typeof i.removeListener == 'function'
              ? i.removeListener(o)
              : i.removeEventListener('change', o);
          }
        );
      },
      preventTransition() {
        const n = document.createElement('style');
        return (
          n.appendChild(
            document.createTextNode(
              '*{-webkit-transition:none!important;-moz-transition:none!important;-o-transition:none!important;-ms-transition:none!important;transition:none!important}',
            ),
          ),
          document.head.appendChild(n),
          () => {
            window.getComputedStyle(document.body),
              requestAnimationFrame(() => {
                requestAnimationFrame(() => {
                  document.head.removeChild(n);
                });
              });
          }
        );
      },
    };
  return r;
}
var UE = 'chakra-ui-color-mode';
function HE(e) {
  return {
    ssr: !1,
    type: 'localStorage',
    get(t) {
      if (!(globalThis != null && globalThis.document)) return t;
      let r;
      try {
        r = localStorage.getItem(e) || t;
      } catch {}
      return r || t;
    },
    set(t) {
      try {
        localStorage.setItem(e, t);
      } catch {}
    },
  };
}
var QE = HE(UE),
  W_ = () => {};
function U_(e, t) {
  return e.type === 'cookie' && e.ssr ? e.get(t) : t;
}
function j1(e) {
  const {
      value: t,
      children: r,
      options: {
        useSystemColorMode: n,
        initialColorMode: i,
        disableTransitionOnChange: o,
      } = {},
      colorModeManager: s = QE,
    } = e,
    l = i === 'dark' ? 'dark' : 'light',
    [c, h] = K.useState(() => U_(s, l)),
    [y, m] = K.useState(() => U_(s)),
    {
      getSystemTheme: x,
      setClassName: I,
      setDataset: $,
      addListener: j,
    } = K.useMemo(() => WE({ preventTransition: o }), [o]),
    G = i === 'system' && !c ? y : c,
    C = K.useCallback(
      (H) => {
        const ie = H === 'system' ? x() : H;
        h(ie), I(ie === 'dark'), $(ie), s.set(ie);
      },
      [s, x, I, $],
    );
  ro(() => {
    i === 'system' && m(x());
  }, []),
    K.useEffect(() => {
      const H = s.get();
      if (H) {
        C(H);
        return;
      }
      if (i === 'system') {
        C('system');
        return;
      }
      C(l);
    }, [s, l, i, C]);
  const T = K.useCallback(() => {
    C(G === 'dark' ? 'light' : 'dark');
  }, [G, C]);
  K.useEffect(() => {
    if (n) return j(C);
  }, [n, j, C]);
  const q = K.useMemo(
    () => ({
      colorMode: t ?? G,
      toggleColorMode: t ? W_ : T,
      setColorMode: t ? W_ : C,
      forced: t !== void 0,
    }),
    [G, T, C, t],
  );
  return te.jsx(Rm.Provider, { value: q, children: r });
}
j1.displayName = 'ColorModeProvider';
function GE() {
  const e = Om(),
    t = VE();
  return { ...e, theme: t };
}
var fn = (...e) => e.filter(Boolean).join(' ');
function fr(e) {
  const t = typeof e;
  return e != null && (t === 'object' || t === 'function') && !Array.isArray(e);
}
function Si(e, ...t) {
  return KE(e) ? e(...t) : e;
}
var KE = (e) => typeof e == 'function',
  et = (e) => (e ? '' : void 0),
  Td = (e) => (e ? !0 : void 0);
function An(...e) {
  return function (r) {
    e.some((n) => (n == null || n(r), r == null ? void 0 : r.defaultPrevented));
  };
}
function XE(...e) {
  return function (r) {
    e.forEach((n) => {
      n == null || n(r);
    });
  };
}
var lc = { exports: {} };
lc.exports;
(function (e, t) {
  var r = 200,
    n = '__lodash_hash_undefined__',
    i = 800,
    o = 16,
    s = 9007199254740991,
    l = '[object Arguments]',
    c = '[object Array]',
    h = '[object AsyncFunction]',
    y = '[object Boolean]',
    m = '[object Date]',
    x = '[object Error]',
    I = '[object Function]',
    $ = '[object GeneratorFunction]',
    j = '[object Map]',
    G = '[object Number]',
    C = '[object Null]',
    T = '[object Object]',
    q = '[object Proxy]',
    H = '[object RegExp]',
    ie = '[object Set]',
    he = '[object String]',
    le = '[object Undefined]',
    de = '[object WeakMap]',
    Fe = '[object ArrayBuffer]',
    Ae = '[object DataView]',
    ut = '[object Float32Array]',
    bt = '[object Float64Array]',
    ht = '[object Int8Array]',
    Dt = '[object Int16Array]',
    wt = '[object Int32Array]',
    qe = '[object Uint8Array]',
    Qe = '[object Uint8ClampedArray]',
    Se = '[object Uint16Array]',
    Ne = '[object Uint32Array]',
    je = /[\\^$.*+?()[\]{}|]/g,
    mt = /^\[object .+?Constructor\]$/,
    gt = /^(?:0|[1-9]\d*)$/,
    Xe = {};
  (Xe[ut] =
    Xe[bt] =
    Xe[ht] =
    Xe[Dt] =
    Xe[wt] =
    Xe[qe] =
    Xe[Qe] =
    Xe[Se] =
    Xe[Ne] =
      !0),
    (Xe[l] =
      Xe[c] =
      Xe[Fe] =
      Xe[y] =
      Xe[Ae] =
      Xe[m] =
      Xe[x] =
      Xe[I] =
      Xe[j] =
      Xe[G] =
      Xe[T] =
      Xe[H] =
      Xe[ie] =
      Xe[he] =
      Xe[de] =
        !1);
  var _t = typeof Pl == 'object' && Pl && Pl.Object === Object && Pl,
    pr = typeof self == 'object' && self && self.Object === Object && self,
    Vt = _t || pr || Function('return this')(),
    $n = t && !t.nodeType && t,
    hr = $n && !0 && e && !e.nodeType && e,
    Nn = hr && hr.exports === $n,
    Zn = Nn && _t.process,
    Cs = (function () {
      try {
        var g = hr && hr.require && hr.require('util').types;
        return g || (Zn && Zn.binding && Zn.binding('util'));
      } catch {}
    })(),
    oi = Cs && Cs.isTypedArray;
  function si(g, P, S) {
    switch (S.length) {
      case 0:
        return g.call(P);
      case 1:
        return g.call(P, S[0]);
      case 2:
        return g.call(P, S[0], S[1]);
      case 3:
        return g.call(P, S[0], S[1], S[2]);
    }
    return g.apply(P, S);
  }
  function qr(g, P) {
    for (var S = -1, A = Array(g); ++S < g; ) A[S] = P(S);
    return A;
  }
  function He(g) {
    return function (P) {
      return g(P);
    };
  }
  function Gt(g, P) {
    return g == null ? void 0 : g[P];
  }
  function St(g, P) {
    return function (S) {
      return g(P(S));
    };
  }
  var Ir = Array.prototype,
    hf = Function.prototype,
    _o = Object.prototype,
    Ue = Vt['__core-js_shared__'],
    At = hf.toString,
    jn = _o.hasOwnProperty,
    Ye = (function () {
      var g = /[^.]+$/.exec((Ue && Ue.keys && Ue.keys.IE_PROTO) || '');
      return g ? 'Symbol(src)_1.' + g : '';
    })(),
    _l = _o.toString,
    er = At.call(Object),
    As = RegExp(
      '^' +
        At.call(jn)
          .replace(je, '\\$&')
          .replace(
            /hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,
            '$1.*?',
          ) +
        '$',
    ),
    Bn = Nn ? Vt.Buffer : void 0,
    yl = Vt.Symbol,
    vl = Vt.Uint8Array;
  Bn && Bn.allocUnsafe;
  var Ps = St(Object.getPrototypeOf, Object),
    Be = Object.create,
    mf = _o.propertyIsEnumerable,
    _ = Ir.splice,
    Oe = yl ? yl.toStringTag : void 0,
    yo = (function () {
      try {
        var g = ui(Object, 'defineProperty');
        return g({}, '', {}), g;
      } catch {}
    })(),
    gf = Bn ? Bn.isBuffer : void 0,
    bl = Math.max,
    _f = Date.now,
    wl = ui(Vt, 'Map'),
    Ni = ui(Object, 'create'),
    yf = (function () {
      function g() {}
      return function (P) {
        if (!N(P)) return {};
        if (Be) return Be(P);
        g.prototype = P;
        var S = new g();
        return (g.prototype = void 0), S;
      };
    })();
  function Fr(g) {
    var P = -1,
      S = g == null ? 0 : g.length;
    for (this.clear(); ++P < S; ) {
      var A = g[P];
      this.set(A[0], A[1]);
    }
  }
  function vf() {
    (this.__data__ = Ni ? Ni(null) : {}), (this.size = 0);
  }
  function Sl(g) {
    var P = this.has(g) && delete this.__data__[g];
    return (this.size -= P ? 1 : 0), P;
  }
  function bf(g) {
    var P = this.__data__;
    if (Ni) {
      var S = P[g];
      return S === n ? void 0 : S;
    }
    return jn.call(P, g) ? P[g] : void 0;
  }
  function wf(g) {
    var P = this.__data__;
    return Ni ? P[g] !== void 0 : jn.call(P, g);
  }
  function Sf(g, P) {
    var S = this.__data__;
    return (
      (this.size += this.has(g) ? 0 : 1),
      (S[g] = Ni && P === void 0 ? n : P),
      this
    );
  }
  (Fr.prototype.clear = vf),
    (Fr.prototype.delete = Sl),
    (Fr.prototype.get = bf),
    (Fr.prototype.has = wf),
    (Fr.prototype.set = Sf);
  function tr(g) {
    var P = -1,
      S = g == null ? 0 : g.length;
    for (this.clear(); ++P < S; ) {
      var A = g[P];
      this.set(A[0], A[1]);
    }
  }
  function xf() {
    (this.__data__ = []), (this.size = 0);
  }
  function kf(g) {
    var P = this.__data__,
      S = bo(P, g);
    if (S < 0) return !1;
    var A = P.length - 1;
    return S == A ? P.pop() : _.call(P, S, 1), --this.size, !0;
  }
  function Ef(g) {
    var P = this.__data__,
      S = bo(P, g);
    return S < 0 ? void 0 : P[S][1];
  }
  function Tf(g) {
    return bo(this.__data__, g) > -1;
  }
  function Cf(g, P) {
    var S = this.__data__,
      A = bo(S, g);
    return A < 0 ? (++this.size, S.push([g, P])) : (S[A][1] = P), this;
  }
  (tr.prototype.clear = xf),
    (tr.prototype.delete = kf),
    (tr.prototype.get = Ef),
    (tr.prototype.has = Tf),
    (tr.prototype.set = Cf);
  function ai(g) {
    var P = -1,
      S = g == null ? 0 : g.length;
    for (this.clear(); ++P < S; ) {
      var A = g[P];
      this.set(A[0], A[1]);
    }
  }
  function Af() {
    (this.size = 0),
      (this.__data__ = {
        hash: new Fr(),
        map: new (wl || tr)(),
        string: new Fr(),
      });
  }
  function qs(g) {
    var P = Bi(this, g).delete(g);
    return (this.size -= P ? 1 : 0), P;
  }
  function Pf(g) {
    return Bi(this, g).get(g);
  }
  function qf(g) {
    return Bi(this, g).has(g);
  }
  function If(g, P) {
    var S = Bi(this, g),
      A = S.size;
    return S.set(g, P), (this.size += S.size == A ? 0 : 1), this;
  }
  (ai.prototype.clear = Af),
    (ai.prototype.delete = qs),
    (ai.prototype.get = Pf),
    (ai.prototype.has = qf),
    (ai.prototype.set = If);
  function li(g) {
    var P = (this.__data__ = new tr(g));
    this.size = P.size;
  }
  function Ff() {
    (this.__data__ = new tr()), (this.size = 0);
  }
  function Rf(g) {
    var P = this.__data__,
      S = P.delete(g);
    return (this.size = P.size), S;
  }
  function Of(g) {
    return this.__data__.get(g);
  }
  function Lf(g) {
    return this.__data__.has(g);
  }
  function Mf(g, P) {
    var S = this.__data__;
    if (S instanceof tr) {
      var A = S.__data__;
      if (!wl || A.length < r - 1)
        return A.push([g, P]), (this.size = ++S.size), this;
      S = this.__data__ = new ai(A);
    }
    return S.set(g, P), (this.size = S.size), this;
  }
  (li.prototype.clear = Ff),
    (li.prototype.delete = Rf),
    (li.prototype.get = Of),
    (li.prototype.has = Lf),
    (li.prototype.set = Mf);
  function Df(g, P) {
    var S = re(g),
      A = !S && ne(g),
      b = !S && !A && X(g),
      k = !S && !A && !b && Z(g),
      L = S || A || b || k,
      F = L ? qr(g.length, String) : [],
      oe = F.length;
    for (var be in g)
      (L &&
        (be == 'length' ||
          (b && (be == 'offset' || be == 'parent')) ||
          (k && (be == 'buffer' || be == 'byteLength' || be == 'byteOffset')) ||
          Fs(be, oe))) ||
        F.push(be);
    return F;
  }
  function vo(g, P, S) {
    ((S !== void 0 && !M(g[P], S)) || (S === void 0 && !(P in g))) &&
      wo(g, P, S);
  }
  function zf(g, P, S) {
    var A = g[P];
    (!(jn.call(g, P) && M(A, S)) || (S === void 0 && !(P in g))) && wo(g, P, S);
  }
  function bo(g, P) {
    for (var S = g.length; S--; ) if (M(g[S][0], P)) return S;
    return -1;
  }
  function wo(g, P, S) {
    P == '__proto__' && yo
      ? yo(g, P, { configurable: !0, enumerable: !0, value: S, writable: !0 })
      : (g[P] = S);
  }
  var $f = Xf();
  function So(g) {
    return g == null
      ? g === void 0
        ? le
        : C
      : Oe && Oe in Object(g)
        ? xo(g)
        : a(g);
  }
  function xl(g) {
    return B(g) && So(g) == l;
  }
  function Is(g) {
    if (!N(g) || ko(g)) return !1;
    var P = Q(g) ? As : mt;
    return P.test(O(g));
  }
  function Nf(g) {
    return B(g) && ue(g.length) && !!Xe[So(g)];
  }
  function ji(g) {
    if (!N(g)) return u(g);
    var P = Rs(g),
      S = [];
    for (var A in g) (A == 'constructor' && (P || !jn.call(g, A))) || S.push(A);
    return S;
  }
  function kl(g, P, S, A, b) {
    g !== P &&
      $f(
        P,
        function (k, L) {
          if ((b || (b = new li()), N(k))) jf(g, P, L, S, kl, A, b);
          else {
            var F = A ? A(f(g, L), k, L + '', g, P, b) : void 0;
            F === void 0 && (F = k), vo(g, L, F);
          }
        },
        W,
      );
  }
  function jf(g, P, S, A, b, k, L) {
    var F = f(g, S),
      oe = f(P, S),
      be = L.get(oe);
    if (be) {
      vo(g, S, be);
      return;
    }
    var Ce = k ? k(F, oe, S + '', g, P, L) : void 0,
      ze = Ce === void 0;
    if (ze) {
      var Re = re(oe),
        Le = !Re && X(oe),
        Ve = !Re && !Le && Z(oe);
      (Ce = oe),
        Re || Le || Ve
          ? re(F)
            ? (Ce = F)
            : ye(F)
              ? (Ce = Qf(F))
              : Le
                ? ((ze = !1), (Ce = Wf(oe)))
                : Ve
                  ? ((ze = !1), (Ce = Hf(oe)))
                  : (Ce = [])
          : J(oe) || ne(oe)
            ? ((Ce = F),
              ne(F) ? (Ce = se(F)) : (!N(F) || Q(F)) && (Ce = El(oe)))
            : (ze = !1);
    }
    ze && (L.set(oe, Ce), b(Ce, oe, A, k, L), L.delete(oe)), vo(g, S, Ce);
  }
  function Bf(g, P) {
    return p(d(g, P, E), g + '');
  }
  var Vf = yo
    ? function (g, P) {
        return yo(g, 'toString', {
          configurable: !0,
          enumerable: !1,
          value: _e(P),
          writable: !0,
        });
      }
    : E;
  function Wf(g, P) {
    return g.slice();
  }
  function Uf(g) {
    var P = new g.constructor(g.byteLength);
    return new vl(P).set(new vl(g)), P;
  }
  function Hf(g, P) {
    var S = Uf(g.buffer);
    return new g.constructor(S, g.byteOffset, g.length);
  }
  function Qf(g, P) {
    var S = -1,
      A = g.length;
    for (P || (P = Array(A)); ++S < A; ) P[S] = g[S];
    return P;
  }
  function Gf(g, P, S, A) {
    var b = !S;
    S || (S = {});
    for (var k = -1, L = P.length; ++k < L; ) {
      var F = P[k],
        oe = void 0;
      oe === void 0 && (oe = g[F]), b ? wo(S, F, oe) : zf(S, F, oe);
    }
    return S;
  }
  function Kf(g) {
    return Bf(function (P, S) {
      var A = -1,
        b = S.length,
        k = b > 1 ? S[b - 1] : void 0,
        L = b > 2 ? S[2] : void 0;
      for (
        k = g.length > 3 && typeof k == 'function' ? (b--, k) : void 0,
          L && Tl(S[0], S[1], L) && ((k = b < 3 ? void 0 : k), (b = 1)),
          P = Object(P);
        ++A < b;
      ) {
        var F = S[A];
        F && g(P, F, A, k);
      }
      return P;
    });
  }
  function Xf(g) {
    return function (P, S, A) {
      for (var b = -1, k = Object(P), L = A(P), F = L.length; F--; ) {
        var oe = L[++b];
        if (S(k[oe], oe, k) === !1) break;
      }
      return P;
    };
  }
  function Bi(g, P) {
    var S = g.__data__;
    return Cl(P) ? S[typeof P == 'string' ? 'string' : 'hash'] : S.map;
  }
  function ui(g, P) {
    var S = Gt(g, P);
    return Is(S) ? S : void 0;
  }
  function xo(g) {
    var P = jn.call(g, Oe),
      S = g[Oe];
    try {
      g[Oe] = void 0;
      var A = !0;
    } catch {}
    var b = _l.call(g);
    return A && (P ? (g[Oe] = S) : delete g[Oe]), b;
  }
  function El(g) {
    return typeof g.constructor == 'function' && !Rs(g) ? yf(Ps(g)) : {};
  }
  function Fs(g, P) {
    var S = typeof g;
    return (
      (P = P ?? s),
      !!P &&
        (S == 'number' || (S != 'symbol' && gt.test(g))) &&
        g > -1 &&
        g % 1 == 0 &&
        g < P
    );
  }
  function Tl(g, P, S) {
    if (!N(S)) return !1;
    var A = typeof P;
    return (A == 'number' ? pe(S) && Fs(P, S.length) : A == 'string' && P in S)
      ? M(S[P], g)
      : !1;
  }
  function Cl(g) {
    var P = typeof g;
    return P == 'string' || P == 'number' || P == 'symbol' || P == 'boolean'
      ? g !== '__proto__'
      : g === null;
  }
  function ko(g) {
    return !!Ye && Ye in g;
  }
  function Rs(g) {
    var P = g && g.constructor,
      S = (typeof P == 'function' && P.prototype) || _o;
    return g === S;
  }
  function u(g) {
    var P = [];
    if (g != null) for (var S in Object(g)) P.push(S);
    return P;
  }
  function a(g) {
    return _l.call(g);
  }
  function d(g, P, S) {
    return (
      (P = bl(P === void 0 ? g.length - 1 : P, 0)),
      function () {
        for (
          var A = arguments, b = -1, k = bl(A.length - P, 0), L = Array(k);
          ++b < k;
        )
          L[b] = A[P + b];
        b = -1;
        for (var F = Array(P + 1); ++b < P; ) F[b] = A[b];
        return (F[P] = S(L)), si(g, this, F);
      }
    );
  }
  function f(g, P) {
    if (!(P === 'constructor' && typeof g[P] == 'function') && P != '__proto__')
      return g[P];
  }
  var p = w(Vf);
  function w(g) {
    var P = 0,
      S = 0;
    return function () {
      var A = _f(),
        b = o - (A - S);
      if (((S = A), b > 0)) {
        if (++P >= i) return arguments[0];
      } else P = 0;
      return g.apply(void 0, arguments);
    };
  }
  function O(g) {
    if (g != null) {
      try {
        return At.call(g);
      } catch {}
      try {
        return g + '';
      } catch {}
    }
    return '';
  }
  function M(g, P) {
    return g === P || (g !== g && P !== P);
  }
  var ne = xl(
      (function () {
        return arguments;
      })(),
    )
      ? xl
      : function (g) {
          return B(g) && jn.call(g, 'callee') && !mf.call(g, 'callee');
        },
    re = Array.isArray;
  function pe(g) {
    return g != null && ue(g.length) && !Q(g);
  }
  function ye(g) {
    return B(g) && pe(g);
  }
  var X = gf || D;
  function Q(g) {
    if (!N(g)) return !1;
    var P = So(g);
    return P == I || P == $ || P == h || P == q;
  }
  function ue(g) {
    return typeof g == 'number' && g > -1 && g % 1 == 0 && g <= s;
  }
  function N(g) {
    var P = typeof g;
    return g != null && (P == 'object' || P == 'function');
  }
  function B(g) {
    return g != null && typeof g == 'object';
  }
  function J(g) {
    if (!B(g) || So(g) != T) return !1;
    var P = Ps(g);
    if (P === null) return !0;
    var S = jn.call(P, 'constructor') && P.constructor;
    return typeof S == 'function' && S instanceof S && At.call(S) == er;
  }
  var Z = oi ? He(oi) : Nf;
  function se(g) {
    return Gf(g, W(g));
  }
  function W(g) {
    return pe(g) ? Df(g) : ji(g);
  }
  var ce = Kf(function (g, P, S, A) {
    kl(g, P, S, A);
  });
  function _e(g) {
    return function () {
      return g;
    };
  }
  function E(g) {
    return g;
  }
  function D() {
    return !1;
  }
  e.exports = ce;
})(lc, lc.exports);
var YE = lc.exports;
const xr = Ph(YE);
var JE = (e) => /!(important)?$/.test(e),
  H_ = (e) =>
    typeof e == 'string' ? e.replace(/!(important)?$/, '').trim() : e,
  ZE = (e, t) => (r) => {
    const n = String(t),
      i = JE(n),
      o = H_(n),
      s = e ? `${e}.${o}` : o;
    let l = fr(r.__cssMap) && s in r.__cssMap ? r.__cssMap[s].varRef : t;
    return (l = H_(l)), i ? `${l} !important` : l;
  };
function Lm(e) {
  const { scale: t, transform: r, compose: n } = e;
  return (o, s) => {
    var l;
    const c = ZE(t, o)(s);
    let h = (l = r == null ? void 0 : r(c, s)) != null ? l : c;
    return n && (h = n(h, s)), h;
  };
}
var Kl =
  (...e) =>
  (t) =>
    e.reduce((r, n) => n(r), t);
function Vn(e, t) {
  return (r) => {
    const n = { property: r, scale: e };
    return (n.transform = Lm({ scale: e, transform: t })), n;
  };
}
var eT =
  ({ rtl: e, ltr: t }) =>
  (r) =>
    r.direction === 'rtl' ? e : t;
function tT(e) {
  const { property: t, scale: r, transform: n } = e;
  return {
    scale: r,
    property: eT(t),
    transform: r ? Lm({ scale: r, compose: n }) : n,
  };
}
var B1 = [
  'rotate(var(--chakra-rotate, 0))',
  'scaleX(var(--chakra-scale-x, 1))',
  'scaleY(var(--chakra-scale-y, 1))',
  'skewX(var(--chakra-skew-x, 0))',
  'skewY(var(--chakra-skew-y, 0))',
];
function nT() {
  return [
    'translateX(var(--chakra-translate-x, 0))',
    'translateY(var(--chakra-translate-y, 0))',
    ...B1,
  ].join(' ');
}
function rT() {
  return [
    'translate3d(var(--chakra-translate-x, 0), var(--chakra-translate-y, 0), 0)',
    ...B1,
  ].join(' ');
}
var iT = {
    '--chakra-blur': 'var(--chakra-empty,/*!*/ /*!*/)',
    '--chakra-brightness': 'var(--chakra-empty,/*!*/ /*!*/)',
    '--chakra-contrast': 'var(--chakra-empty,/*!*/ /*!*/)',
    '--chakra-grayscale': 'var(--chakra-empty,/*!*/ /*!*/)',
    '--chakra-hue-rotate': 'var(--chakra-empty,/*!*/ /*!*/)',
    '--chakra-invert': 'var(--chakra-empty,/*!*/ /*!*/)',
    '--chakra-saturate': 'var(--chakra-empty,/*!*/ /*!*/)',
    '--chakra-sepia': 'var(--chakra-empty,/*!*/ /*!*/)',
    '--chakra-drop-shadow': 'var(--chakra-empty,/*!*/ /*!*/)',
    filter: [
      'var(--chakra-blur)',
      'var(--chakra-brightness)',
      'var(--chakra-contrast)',
      'var(--chakra-grayscale)',
      'var(--chakra-hue-rotate)',
      'var(--chakra-invert)',
      'var(--chakra-saturate)',
      'var(--chakra-sepia)',
      'var(--chakra-drop-shadow)',
    ].join(' '),
  },
  oT = {
    backdropFilter: [
      'var(--chakra-backdrop-blur)',
      'var(--chakra-backdrop-brightness)',
      'var(--chakra-backdrop-contrast)',
      'var(--chakra-backdrop-grayscale)',
      'var(--chakra-backdrop-hue-rotate)',
      'var(--chakra-backdrop-invert)',
      'var(--chakra-backdrop-opacity)',
      'var(--chakra-backdrop-saturate)',
      'var(--chakra-backdrop-sepia)',
    ].join(' '),
    '--chakra-backdrop-blur': 'var(--chakra-empty,/*!*/ /*!*/)',
    '--chakra-backdrop-brightness': 'var(--chakra-empty,/*!*/ /*!*/)',
    '--chakra-backdrop-contrast': 'var(--chakra-empty,/*!*/ /*!*/)',
    '--chakra-backdrop-grayscale': 'var(--chakra-empty,/*!*/ /*!*/)',
    '--chakra-backdrop-hue-rotate': 'var(--chakra-empty,/*!*/ /*!*/)',
    '--chakra-backdrop-invert': 'var(--chakra-empty,/*!*/ /*!*/)',
    '--chakra-backdrop-opacity': 'var(--chakra-empty,/*!*/ /*!*/)',
    '--chakra-backdrop-saturate': 'var(--chakra-empty,/*!*/ /*!*/)',
    '--chakra-backdrop-sepia': 'var(--chakra-empty,/*!*/ /*!*/)',
  };
function sT(e) {
  return {
    '--chakra-ring-offset-shadow':
      'var(--chakra-ring-inset) 0 0 0 var(--chakra-ring-offset-width) var(--chakra-ring-offset-color)',
    '--chakra-ring-shadow':
      'var(--chakra-ring-inset) 0 0 0 calc(var(--chakra-ring-width) + var(--chakra-ring-offset-width)) var(--chakra-ring-color)',
    '--chakra-ring-width': e,
    boxShadow: [
      'var(--chakra-ring-offset-shadow)',
      'var(--chakra-ring-shadow)',
      'var(--chakra-shadow, 0 0 #0000)',
    ].join(', '),
  };
}
var aT = {
    'row-reverse': {
      space: '--chakra-space-x-reverse',
      divide: '--chakra-divide-x-reverse',
    },
    'column-reverse': {
      space: '--chakra-space-y-reverse',
      divide: '--chakra-divide-y-reverse',
    },
  },
  Zp = {
    'to-t': 'to top',
    'to-tr': 'to top right',
    'to-r': 'to right',
    'to-br': 'to bottom right',
    'to-b': 'to bottom',
    'to-bl': 'to bottom left',
    'to-l': 'to left',
    'to-tl': 'to top left',
  },
  lT = new Set(Object.values(Zp)),
  eh = new Set([
    'none',
    '-moz-initial',
    'inherit',
    'initial',
    'revert',
    'unset',
  ]),
  uT = (e) => e.trim();
function cT(e, t) {
  if (e == null || eh.has(e)) return e;
  if (!(th(e) || eh.has(e))) return `url('${e}')`;
  const i = /(^[a-z-A-Z]+)\((.*)\)/g.exec(e),
    o = i == null ? void 0 : i[1],
    s = i == null ? void 0 : i[2];
  if (!o || !s) return e;
  const l = o.includes('-gradient') ? o : `${o}-gradient`,
    [c, ...h] = s.split(',').map(uT).filter(Boolean);
  if ((h == null ? void 0 : h.length) === 0) return e;
  const y = c in Zp ? Zp[c] : c;
  h.unshift(y);
  const m = h.map((x) => {
    if (lT.has(x)) return x;
    const I = x.indexOf(' '),
      [$, j] = I !== -1 ? [x.substr(0, I), x.substr(I + 1)] : [x],
      G = th(j) ? j : j && j.split(' '),
      C = `colors.${$}`,
      T = C in t.__cssMap ? t.__cssMap[C].varRef : $;
    return G ? [T, ...(Array.isArray(G) ? G : [G])].join(' ') : T;
  });
  return `${l}(${m.join(', ')})`;
}
var th = (e) => typeof e == 'string' && e.includes('(') && e.includes(')'),
  fT = (e, t) => cT(e, t ?? {});
function dT(e) {
  return /^var\(--.+\)$/.test(e);
}
var pT = (e) => {
    const t = parseFloat(e.toString()),
      r = e.toString().replace(String(t), '');
    return { unitless: !r, value: t, unit: r };
  },
  _r = (e) => (t) => `${e}(${t})`,
  Ze = {
    filter(e) {
      return e !== 'auto' ? e : iT;
    },
    backdropFilter(e) {
      return e !== 'auto' ? e : oT;
    },
    ring(e) {
      return sT(Ze.px(e));
    },
    bgClip(e) {
      return e === 'text'
        ? { color: 'transparent', backgroundClip: 'text' }
        : { backgroundClip: e };
    },
    transform(e) {
      return e === 'auto' ? nT() : e === 'auto-gpu' ? rT() : e;
    },
    vh(e) {
      return e === '$100vh' ? 'var(--chakra-vh)' : e;
    },
    px(e) {
      if (e == null) return e;
      const { unitless: t } = pT(e);
      return t || typeof e == 'number' ? `${e}px` : e;
    },
    fraction(e) {
      return typeof e != 'number' || e > 1 ? e : `${e * 100}%`;
    },
    float(e, t) {
      const r = { left: 'right', right: 'left' };
      return t.direction === 'rtl' ? r[e] : e;
    },
    degree(e) {
      if (dT(e) || e == null) return e;
      const t = typeof e == 'string' && !e.endsWith('deg');
      return typeof e == 'number' || t ? `${e}deg` : e;
    },
    gradient: fT,
    blur: _r('blur'),
    opacity: _r('opacity'),
    brightness: _r('brightness'),
    contrast: _r('contrast'),
    dropShadow: _r('drop-shadow'),
    grayscale: _r('grayscale'),
    hueRotate: (e) => _r('hue-rotate')(Ze.degree(e)),
    invert: _r('invert'),
    saturate: _r('saturate'),
    sepia: _r('sepia'),
    bgImage(e) {
      return e == null || th(e) || eh.has(e) ? e : `url(${e})`;
    },
    outline(e) {
      const t = String(e) === '0' || String(e) === 'none';
      return e !== null && t
        ? { outline: '2px solid transparent', outlineOffset: '2px' }
        : { outline: e };
    },
    flexDirection(e) {
      var t;
      const { space: r, divide: n } = (t = aT[e]) != null ? t : {},
        i = { flexDirection: e };
      return r && (i[r] = 1), n && (i[n] = 1), i;
    },
  },
  V = {
    borderWidths: Vn('borderWidths'),
    borderStyles: Vn('borderStyles'),
    colors: Vn('colors'),
    borders: Vn('borders'),
    gradients: Vn('gradients', Ze.gradient),
    radii: Vn('radii', Ze.px),
    space: Vn('space', Kl(Ze.vh, Ze.px)),
    spaceT: Vn('space', Kl(Ze.vh, Ze.px)),
    degreeT(e) {
      return { property: e, transform: Ze.degree };
    },
    prop(e, t, r) {
      return {
        property: e,
        scale: t,
        ...(t && { transform: Lm({ scale: t, transform: r }) }),
      };
    },
    propT(e, t) {
      return { property: e, transform: t };
    },
    sizes: Vn('sizes', Kl(Ze.vh, Ze.px)),
    sizesT: Vn('sizes', Kl(Ze.vh, Ze.fraction)),
    shadows: Vn('shadows'),
    logical: tT,
    blur: Vn('blur', Ze.blur),
  },
  wu = {
    background: V.colors('background'),
    backgroundColor: V.colors('backgroundColor'),
    backgroundImage: V.gradients('backgroundImage'),
    backgroundSize: !0,
    backgroundPosition: !0,
    backgroundRepeat: !0,
    backgroundAttachment: !0,
    backgroundClip: { transform: Ze.bgClip },
    bgSize: V.prop('backgroundSize'),
    bgPosition: V.prop('backgroundPosition'),
    bg: V.colors('background'),
    bgColor: V.colors('backgroundColor'),
    bgPos: V.prop('backgroundPosition'),
    bgRepeat: V.prop('backgroundRepeat'),
    bgAttachment: V.prop('backgroundAttachment'),
    bgGradient: V.gradients('backgroundImage'),
    bgClip: { transform: Ze.bgClip },
  };
Object.assign(wu, { bgImage: wu.backgroundImage, bgImg: wu.backgroundImage });
var nt = {
  border: V.borders('border'),
  borderWidth: V.borderWidths('borderWidth'),
  borderStyle: V.borderStyles('borderStyle'),
  borderColor: V.colors('borderColor'),
  borderRadius: V.radii('borderRadius'),
  borderTop: V.borders('borderTop'),
  borderBlockStart: V.borders('borderBlockStart'),
  borderTopLeftRadius: V.radii('borderTopLeftRadius'),
  borderStartStartRadius: V.logical({
    scale: 'radii',
    property: { ltr: 'borderTopLeftRadius', rtl: 'borderTopRightRadius' },
  }),
  borderEndStartRadius: V.logical({
    scale: 'radii',
    property: { ltr: 'borderBottomLeftRadius', rtl: 'borderBottomRightRadius' },
  }),
  borderTopRightRadius: V.radii('borderTopRightRadius'),
  borderStartEndRadius: V.logical({
    scale: 'radii',
    property: { ltr: 'borderTopRightRadius', rtl: 'borderTopLeftRadius' },
  }),
  borderEndEndRadius: V.logical({
    scale: 'radii',
    property: { ltr: 'borderBottomRightRadius', rtl: 'borderBottomLeftRadius' },
  }),
  borderRight: V.borders('borderRight'),
  borderInlineEnd: V.borders('borderInlineEnd'),
  borderBottom: V.borders('borderBottom'),
  borderBlockEnd: V.borders('borderBlockEnd'),
  borderBottomLeftRadius: V.radii('borderBottomLeftRadius'),
  borderBottomRightRadius: V.radii('borderBottomRightRadius'),
  borderLeft: V.borders('borderLeft'),
  borderInlineStart: { property: 'borderInlineStart', scale: 'borders' },
  borderInlineStartRadius: V.logical({
    scale: 'radii',
    property: {
      ltr: ['borderTopLeftRadius', 'borderBottomLeftRadius'],
      rtl: ['borderTopRightRadius', 'borderBottomRightRadius'],
    },
  }),
  borderInlineEndRadius: V.logical({
    scale: 'radii',
    property: {
      ltr: ['borderTopRightRadius', 'borderBottomRightRadius'],
      rtl: ['borderTopLeftRadius', 'borderBottomLeftRadius'],
    },
  }),
  borderX: V.borders(['borderLeft', 'borderRight']),
  borderInline: V.borders('borderInline'),
  borderY: V.borders(['borderTop', 'borderBottom']),
  borderBlock: V.borders('borderBlock'),
  borderTopWidth: V.borderWidths('borderTopWidth'),
  borderBlockStartWidth: V.borderWidths('borderBlockStartWidth'),
  borderTopColor: V.colors('borderTopColor'),
  borderBlockStartColor: V.colors('borderBlockStartColor'),
  borderTopStyle: V.borderStyles('borderTopStyle'),
  borderBlockStartStyle: V.borderStyles('borderBlockStartStyle'),
  borderBottomWidth: V.borderWidths('borderBottomWidth'),
  borderBlockEndWidth: V.borderWidths('borderBlockEndWidth'),
  borderBottomColor: V.colors('borderBottomColor'),
  borderBlockEndColor: V.colors('borderBlockEndColor'),
  borderBottomStyle: V.borderStyles('borderBottomStyle'),
  borderBlockEndStyle: V.borderStyles('borderBlockEndStyle'),
  borderLeftWidth: V.borderWidths('borderLeftWidth'),
  borderInlineStartWidth: V.borderWidths('borderInlineStartWidth'),
  borderLeftColor: V.colors('borderLeftColor'),
  borderInlineStartColor: V.colors('borderInlineStartColor'),
  borderLeftStyle: V.borderStyles('borderLeftStyle'),
  borderInlineStartStyle: V.borderStyles('borderInlineStartStyle'),
  borderRightWidth: V.borderWidths('borderRightWidth'),
  borderInlineEndWidth: V.borderWidths('borderInlineEndWidth'),
  borderRightColor: V.colors('borderRightColor'),
  borderInlineEndColor: V.colors('borderInlineEndColor'),
  borderRightStyle: V.borderStyles('borderRightStyle'),
  borderInlineEndStyle: V.borderStyles('borderInlineEndStyle'),
  borderTopRadius: V.radii(['borderTopLeftRadius', 'borderTopRightRadius']),
  borderBottomRadius: V.radii([
    'borderBottomLeftRadius',
    'borderBottomRightRadius',
  ]),
  borderLeftRadius: V.radii(['borderTopLeftRadius', 'borderBottomLeftRadius']),
  borderRightRadius: V.radii([
    'borderTopRightRadius',
    'borderBottomRightRadius',
  ]),
};
Object.assign(nt, {
  rounded: nt.borderRadius,
  roundedTop: nt.borderTopRadius,
  roundedTopLeft: nt.borderTopLeftRadius,
  roundedTopRight: nt.borderTopRightRadius,
  roundedTopStart: nt.borderStartStartRadius,
  roundedTopEnd: nt.borderStartEndRadius,
  roundedBottom: nt.borderBottomRadius,
  roundedBottomLeft: nt.borderBottomLeftRadius,
  roundedBottomRight: nt.borderBottomRightRadius,
  roundedBottomStart: nt.borderEndStartRadius,
  roundedBottomEnd: nt.borderEndEndRadius,
  roundedLeft: nt.borderLeftRadius,
  roundedRight: nt.borderRightRadius,
  roundedStart: nt.borderInlineStartRadius,
  roundedEnd: nt.borderInlineEndRadius,
  borderStart: nt.borderInlineStart,
  borderEnd: nt.borderInlineEnd,
  borderTopStartRadius: nt.borderStartStartRadius,
  borderTopEndRadius: nt.borderStartEndRadius,
  borderBottomStartRadius: nt.borderEndStartRadius,
  borderBottomEndRadius: nt.borderEndEndRadius,
  borderStartRadius: nt.borderInlineStartRadius,
  borderEndRadius: nt.borderInlineEndRadius,
  borderStartWidth: nt.borderInlineStartWidth,
  borderEndWidth: nt.borderInlineEndWidth,
  borderStartColor: nt.borderInlineStartColor,
  borderEndColor: nt.borderInlineEndColor,
  borderStartStyle: nt.borderInlineStartStyle,
  borderEndStyle: nt.borderInlineEndStyle,
});
var hT = {
    color: V.colors('color'),
    textColor: V.colors('color'),
    fill: V.colors('fill'),
    stroke: V.colors('stroke'),
  },
  nh = {
    boxShadow: V.shadows('boxShadow'),
    mixBlendMode: !0,
    blendMode: V.prop('mixBlendMode'),
    backgroundBlendMode: !0,
    bgBlendMode: V.prop('backgroundBlendMode'),
    opacity: !0,
  };
Object.assign(nh, { shadow: nh.boxShadow });
var mT = {
    filter: { transform: Ze.filter },
    blur: V.blur('--chakra-blur'),
    brightness: V.propT('--chakra-brightness', Ze.brightness),
    contrast: V.propT('--chakra-contrast', Ze.contrast),
    hueRotate: V.propT('--chakra-hue-rotate', Ze.hueRotate),
    invert: V.propT('--chakra-invert', Ze.invert),
    saturate: V.propT('--chakra-saturate', Ze.saturate),
    dropShadow: V.propT('--chakra-drop-shadow', Ze.dropShadow),
    backdropFilter: { transform: Ze.backdropFilter },
    backdropBlur: V.blur('--chakra-backdrop-blur'),
    backdropBrightness: V.propT('--chakra-backdrop-brightness', Ze.brightness),
    backdropContrast: V.propT('--chakra-backdrop-contrast', Ze.contrast),
    backdropHueRotate: V.propT('--chakra-backdrop-hue-rotate', Ze.hueRotate),
    backdropInvert: V.propT('--chakra-backdrop-invert', Ze.invert),
    backdropSaturate: V.propT('--chakra-backdrop-saturate', Ze.saturate),
  },
  uc = {
    alignItems: !0,
    alignContent: !0,
    justifyItems: !0,
    justifyContent: !0,
    flexWrap: !0,
    flexDirection: { transform: Ze.flexDirection },
    flex: !0,
    flexFlow: !0,
    flexGrow: !0,
    flexShrink: !0,
    flexBasis: V.sizes('flexBasis'),
    justifySelf: !0,
    alignSelf: !0,
    order: !0,
    placeItems: !0,
    placeContent: !0,
    placeSelf: !0,
    gap: V.space('gap'),
    rowGap: V.space('rowGap'),
    columnGap: V.space('columnGap'),
  };
Object.assign(uc, { flexDir: uc.flexDirection });
var V1 = {
    gridGap: V.space('gridGap'),
    gridColumnGap: V.space('gridColumnGap'),
    gridRowGap: V.space('gridRowGap'),
    gridColumn: !0,
    gridRow: !0,
    gridAutoFlow: !0,
    gridAutoColumns: !0,
    gridColumnStart: !0,
    gridColumnEnd: !0,
    gridRowStart: !0,
    gridRowEnd: !0,
    gridAutoRows: !0,
    gridTemplate: !0,
    gridTemplateColumns: !0,
    gridTemplateRows: !0,
    gridTemplateAreas: !0,
    gridArea: !0,
  },
  gT = {
    appearance: !0,
    cursor: !0,
    resize: !0,
    userSelect: !0,
    pointerEvents: !0,
    outline: { transform: Ze.outline },
    outlineOffset: !0,
    outlineColor: V.colors('outlineColor'),
  },
  Un = {
    width: V.sizesT('width'),
    inlineSize: V.sizesT('inlineSize'),
    height: V.sizes('height'),
    blockSize: V.sizes('blockSize'),
    boxSize: V.sizes(['width', 'height']),
    minWidth: V.sizes('minWidth'),
    minInlineSize: V.sizes('minInlineSize'),
    minHeight: V.sizes('minHeight'),
    minBlockSize: V.sizes('minBlockSize'),
    maxWidth: V.sizes('maxWidth'),
    maxInlineSize: V.sizes('maxInlineSize'),
    maxHeight: V.sizes('maxHeight'),
    maxBlockSize: V.sizes('maxBlockSize'),
    overflow: !0,
    overflowX: !0,
    overflowY: !0,
    overscrollBehavior: !0,
    overscrollBehaviorX: !0,
    overscrollBehaviorY: !0,
    display: !0,
    aspectRatio: !0,
    hideFrom: {
      scale: 'breakpoints',
      transform: (e, t) => {
        var r, n, i;
        return {
          [`@media screen and (min-width: ${((i = (n = (r = t.__breakpoints) == null ? void 0 : r.get(e)) == null ? void 0 : n.minW)) != null ? i : e})`]:
            { display: 'none' },
        };
      },
    },
    hideBelow: {
      scale: 'breakpoints',
      transform: (e, t) => {
        var r, n, i;
        return {
          [`@media screen and (max-width: ${((i = (n = (r = t.__breakpoints) == null ? void 0 : r.get(e)) == null ? void 0 : n._minW)) != null ? i : e})`]:
            { display: 'none' },
        };
      },
    },
    verticalAlign: !0,
    boxSizing: !0,
    boxDecorationBreak: !0,
    float: V.propT('float', Ze.float),
    objectFit: !0,
    objectPosition: !0,
    visibility: !0,
    isolation: !0,
  };
Object.assign(Un, {
  w: Un.width,
  h: Un.height,
  minW: Un.minWidth,
  maxW: Un.maxWidth,
  minH: Un.minHeight,
  maxH: Un.maxHeight,
  overscroll: Un.overscrollBehavior,
  overscrollX: Un.overscrollBehaviorX,
  overscrollY: Un.overscrollBehaviorY,
});
var _T = {
  listStyleType: !0,
  listStylePosition: !0,
  listStylePos: V.prop('listStylePosition'),
  listStyleImage: !0,
  listStyleImg: V.prop('listStyleImage'),
};
function yT(e, t, r, n) {
  const i = typeof t == 'string' ? t.split('.') : [t];
  for (n = 0; n < i.length && e; n += 1) e = e[i[n]];
  return e === void 0 ? r : e;
}
var vT = (e) => {
    const t = new WeakMap();
    return (n, i, o, s) => {
      if (typeof n > 'u') return e(n, i, o);
      t.has(n) || t.set(n, new Map());
      const l = t.get(n);
      if (l.has(i)) return l.get(i);
      const c = e(n, i, o, s);
      return l.set(i, c), c;
    };
  },
  bT = vT(yT),
  wT = {
    border: '0px',
    clip: 'rect(0, 0, 0, 0)',
    width: '1px',
    height: '1px',
    margin: '-1px',
    padding: '0px',
    overflow: 'hidden',
    whiteSpace: 'nowrap',
    position: 'absolute',
  },
  ST = {
    position: 'static',
    width: 'auto',
    height: 'auto',
    clip: 'auto',
    padding: '0',
    margin: '0',
    overflow: 'visible',
    whiteSpace: 'normal',
  },
  Cd = (e, t, r) => {
    const n = {},
      i = bT(e, t, {});
    for (const o in i) (o in r && r[o] != null) || (n[o] = i[o]);
    return n;
  },
  xT = {
    srOnly: {
      transform(e) {
        return e === !0 ? wT : e === 'focusable' ? ST : {};
      },
    },
    layerStyle: {
      processResult: !0,
      transform: (e, t, r) => Cd(t, `layerStyles.${e}`, r),
    },
    textStyle: {
      processResult: !0,
      transform: (e, t, r) => Cd(t, `textStyles.${e}`, r),
    },
    apply: { processResult: !0, transform: (e, t, r) => Cd(t, e, r) },
  },
  ha = {
    position: !0,
    pos: V.prop('position'),
    zIndex: V.prop('zIndex', 'zIndices'),
    inset: V.spaceT('inset'),
    insetX: V.spaceT(['left', 'right']),
    insetInline: V.spaceT('insetInline'),
    insetY: V.spaceT(['top', 'bottom']),
    insetBlock: V.spaceT('insetBlock'),
    top: V.spaceT('top'),
    insetBlockStart: V.spaceT('insetBlockStart'),
    bottom: V.spaceT('bottom'),
    insetBlockEnd: V.spaceT('insetBlockEnd'),
    left: V.spaceT('left'),
    insetInlineStart: V.logical({
      scale: 'space',
      property: { ltr: 'left', rtl: 'right' },
    }),
    right: V.spaceT('right'),
    insetInlineEnd: V.logical({
      scale: 'space',
      property: { ltr: 'right', rtl: 'left' },
    }),
  };
Object.assign(ha, {
  insetStart: ha.insetInlineStart,
  insetEnd: ha.insetInlineEnd,
});
var kT = {
    ring: { transform: Ze.ring },
    ringColor: V.colors('--chakra-ring-color'),
    ringOffset: V.prop('--chakra-ring-offset-width'),
    ringOffsetColor: V.colors('--chakra-ring-offset-color'),
    ringInset: V.prop('--chakra-ring-inset'),
  },
  Et = {
    margin: V.spaceT('margin'),
    marginTop: V.spaceT('marginTop'),
    marginBlockStart: V.spaceT('marginBlockStart'),
    marginRight: V.spaceT('marginRight'),
    marginInlineEnd: V.spaceT('marginInlineEnd'),
    marginBottom: V.spaceT('marginBottom'),
    marginBlockEnd: V.spaceT('marginBlockEnd'),
    marginLeft: V.spaceT('marginLeft'),
    marginInlineStart: V.spaceT('marginInlineStart'),
    marginX: V.spaceT(['marginInlineStart', 'marginInlineEnd']),
    marginInline: V.spaceT('marginInline'),
    marginY: V.spaceT(['marginTop', 'marginBottom']),
    marginBlock: V.spaceT('marginBlock'),
    padding: V.space('padding'),
    paddingTop: V.space('paddingTop'),
    paddingBlockStart: V.space('paddingBlockStart'),
    paddingRight: V.space('paddingRight'),
    paddingBottom: V.space('paddingBottom'),
    paddingBlockEnd: V.space('paddingBlockEnd'),
    paddingLeft: V.space('paddingLeft'),
    paddingInlineStart: V.space('paddingInlineStart'),
    paddingInlineEnd: V.space('paddingInlineEnd'),
    paddingX: V.space(['paddingInlineStart', 'paddingInlineEnd']),
    paddingInline: V.space('paddingInline'),
    paddingY: V.space(['paddingTop', 'paddingBottom']),
    paddingBlock: V.space('paddingBlock'),
  };
Object.assign(Et, {
  m: Et.margin,
  mt: Et.marginTop,
  mr: Et.marginRight,
  me: Et.marginInlineEnd,
  marginEnd: Et.marginInlineEnd,
  mb: Et.marginBottom,
  ml: Et.marginLeft,
  ms: Et.marginInlineStart,
  marginStart: Et.marginInlineStart,
  mx: Et.marginX,
  my: Et.marginY,
  p: Et.padding,
  pt: Et.paddingTop,
  py: Et.paddingY,
  px: Et.paddingX,
  pb: Et.paddingBottom,
  pl: Et.paddingLeft,
  ps: Et.paddingInlineStart,
  paddingStart: Et.paddingInlineStart,
  pr: Et.paddingRight,
  pe: Et.paddingInlineEnd,
  paddingEnd: Et.paddingInlineEnd,
});
var ET = {
    textDecorationColor: V.colors('textDecorationColor'),
    textDecoration: !0,
    textDecor: { property: 'textDecoration' },
    textDecorationLine: !0,
    textDecorationStyle: !0,
    textDecorationThickness: !0,
    textUnderlineOffset: !0,
    textShadow: V.shadows('textShadow'),
  },
  TT = {
    clipPath: !0,
    transform: V.propT('transform', Ze.transform),
    transformOrigin: !0,
    translateX: V.spaceT('--chakra-translate-x'),
    translateY: V.spaceT('--chakra-translate-y'),
    skewX: V.degreeT('--chakra-skew-x'),
    skewY: V.degreeT('--chakra-skew-y'),
    scaleX: V.prop('--chakra-scale-x'),
    scaleY: V.prop('--chakra-scale-y'),
    scale: V.prop(['--chakra-scale-x', '--chakra-scale-y']),
    rotate: V.degreeT('--chakra-rotate'),
  },
  CT = {
    transition: !0,
    transitionDelay: !0,
    animation: !0,
    willChange: !0,
    transitionDuration: V.prop('transitionDuration', 'transition.duration'),
    transitionProperty: V.prop('transitionProperty', 'transition.property'),
    transitionTimingFunction: V.prop(
      'transitionTimingFunction',
      'transition.easing',
    ),
  },
  AT = {
    fontFamily: V.prop('fontFamily', 'fonts'),
    fontSize: V.prop('fontSize', 'fontSizes', Ze.px),
    fontWeight: V.prop('fontWeight', 'fontWeights'),
    lineHeight: V.prop('lineHeight', 'lineHeights'),
    letterSpacing: V.prop('letterSpacing', 'letterSpacings'),
    textAlign: !0,
    fontStyle: !0,
    textIndent: !0,
    wordBreak: !0,
    overflowWrap: !0,
    textOverflow: !0,
    textTransform: !0,
    whiteSpace: !0,
    isTruncated: {
      transform(e) {
        if (e === !0)
          return {
            overflow: 'hidden',
            textOverflow: 'ellipsis',
            whiteSpace: 'nowrap',
          };
      },
    },
    noOfLines: {
      static: {
        overflow: 'hidden',
        textOverflow: 'ellipsis',
        display: '-webkit-box',
        WebkitBoxOrient: 'vertical',
        WebkitLineClamp: 'var(--chakra-line-clamp)',
      },
      property: '--chakra-line-clamp',
    },
  },
  PT = {
    scrollBehavior: !0,
    scrollSnapAlign: !0,
    scrollSnapStop: !0,
    scrollSnapType: !0,
    scrollMargin: V.spaceT('scrollMargin'),
    scrollMarginTop: V.spaceT('scrollMarginTop'),
    scrollMarginBottom: V.spaceT('scrollMarginBottom'),
    scrollMarginLeft: V.spaceT('scrollMarginLeft'),
    scrollMarginRight: V.spaceT('scrollMarginRight'),
    scrollMarginX: V.spaceT(['scrollMarginLeft', 'scrollMarginRight']),
    scrollMarginY: V.spaceT(['scrollMarginTop', 'scrollMarginBottom']),
    scrollPadding: V.spaceT('scrollPadding'),
    scrollPaddingTop: V.spaceT('scrollPaddingTop'),
    scrollPaddingBottom: V.spaceT('scrollPaddingBottom'),
    scrollPaddingLeft: V.spaceT('scrollPaddingLeft'),
    scrollPaddingRight: V.spaceT('scrollPaddingRight'),
    scrollPaddingX: V.spaceT(['scrollPaddingLeft', 'scrollPaddingRight']),
    scrollPaddingY: V.spaceT(['scrollPaddingTop', 'scrollPaddingBottom']),
  };
function W1(e) {
  return fr(e) && e.reference ? e.reference : String(e);
}
var Jc = (e, ...t) => t.map(W1).join(` ${e} `).replace(/calc/g, ''),
  Q_ = (...e) => `calc(${Jc('+', ...e)})`,
  G_ = (...e) => `calc(${Jc('-', ...e)})`,
  rh = (...e) => `calc(${Jc('*', ...e)})`,
  K_ = (...e) => `calc(${Jc('/', ...e)})`,
  X_ = (e) => {
    const t = W1(e);
    return t != null && !Number.isNaN(parseFloat(t))
      ? String(t).startsWith('-')
        ? String(t).slice(1)
        : `-${t}`
      : rh(t, -1);
  },
  Gi = Object.assign(
    (e) => ({
      add: (...t) => Gi(Q_(e, ...t)),
      subtract: (...t) => Gi(G_(e, ...t)),
      multiply: (...t) => Gi(rh(e, ...t)),
      divide: (...t) => Gi(K_(e, ...t)),
      negate: () => Gi(X_(e)),
      toString: () => e.toString(),
    }),
    { add: Q_, subtract: G_, multiply: rh, divide: K_, negate: X_ },
  );
function qT(e, t = '-') {
  return e.replace(/\s+/g, t);
}
function IT(e) {
  const t = qT(e.toString());
  return RT(FT(t));
}
function FT(e) {
  return e.includes('\\.')
    ? e
    : !Number.isInteger(parseFloat(e.toString()))
      ? e.replace('.', '\\.')
      : e;
}
function RT(e) {
  return e.replace(/[!-,/:-@[-^`{-~]/g, '\\$&');
}
function OT(e, t = '') {
  return [t, e].filter(Boolean).join('-');
}
function LT(e, t) {
  return `var(${e}${t ? `, ${t}` : ''})`;
}
function MT(e, t = '') {
  return IT(`--${OT(e, t)}`);
}
function De(e, t, r) {
  const n = MT(e, r);
  return { variable: n, reference: LT(n, t) };
}
function DT(e, t) {
  const r = {};
  for (const n of t) {
    if (Array.isArray(n)) {
      const [i, o] = n;
      r[i] = De(`${e}-${i}`, o);
      continue;
    }
    r[n] = De(`${e}-${n}`);
  }
  return r;
}
function zT(e) {
  const t = e == null ? 0 : e.length;
  return t ? e[t - 1] : void 0;
}
function $T(e) {
  const t = parseFloat(e.toString()),
    r = e.toString().replace(String(t), '');
  return { unitless: !r, value: t, unit: r };
}
function ih(e) {
  if (e == null) return e;
  const { unitless: t } = $T(e);
  return t || typeof e == 'number' ? `${e}px` : e;
}
var U1 = (e, t) => (parseInt(e[1], 10) > parseInt(t[1], 10) ? 1 : -1),
  Mm = (e) => Object.fromEntries(Object.entries(e).sort(U1));
function Y_(e) {
  const t = Mm(e);
  return Object.assign(Object.values(t), t);
}
function NT(e) {
  const t = Object.keys(Mm(e));
  return new Set(t);
}
function J_(e) {
  var t;
  if (!e) return e;
  e = (t = ih(e)) != null ? t : e;
  const r = -0.02;
  return typeof e == 'number'
    ? `${e + r}`
    : e.replace(/(\d+\.?\d*)/u, (n) => `${parseFloat(n) + r}`);
}
function Js(e, t) {
  const r = ['@media screen'];
  return (
    e && r.push('and', `(min-width: ${ih(e)})`),
    t && r.push('and', `(max-width: ${ih(t)})`),
    r.join(' ')
  );
}
function jT(e) {
  var t;
  if (!e) return null;
  e.base = (t = e.base) != null ? t : '0px';
  const r = Y_(e),
    n = Object.entries(e)
      .sort(U1)
      .map(([s, l], c, h) => {
        var y;
        let [, m] = (y = h[c + 1]) != null ? y : [];
        return (
          (m = parseFloat(m) > 0 ? J_(m) : void 0),
          {
            _minW: J_(l),
            breakpoint: s,
            minW: l,
            maxW: m,
            maxWQuery: Js(null, m),
            minWQuery: Js(l),
            minMaxQuery: Js(l, m),
          }
        );
      }),
    i = NT(e),
    o = Array.from(i.values());
  return {
    keys: i,
    normalized: r,
    isResponsive(s) {
      const l = Object.keys(s);
      return l.length > 0 && l.every((c) => i.has(c));
    },
    asObject: Mm(e),
    asArray: Y_(e),
    details: n,
    get(s) {
      return n.find((l) => l.breakpoint === s);
    },
    media: [null, ...r.map((s) => Js(s)).slice(1)],
    toArrayValue(s) {
      if (!fr(s)) throw new Error('toArrayValue: value must be an object');
      const l = o.map((c) => {
        var h;
        return (h = s[c]) != null ? h : null;
      });
      for (; zT(l) === null; ) l.pop();
      return l;
    },
    toObjectValue(s) {
      if (!Array.isArray(s))
        throw new Error('toObjectValue: value must be an array');
      return s.reduce((l, c, h) => {
        const y = o[h];
        return y != null && c != null && (l[y] = c), l;
      }, {});
    },
  };
}
var Xt = {
    hover: (e, t) => `${e}:hover ${t}, ${e}[data-hover] ${t}`,
    focus: (e, t) => `${e}:focus ${t}, ${e}[data-focus] ${t}`,
    focusVisible: (e, t) => `${e}:focus-visible ${t}`,
    focusWithin: (e, t) => `${e}:focus-within ${t}`,
    active: (e, t) => `${e}:active ${t}, ${e}[data-active] ${t}`,
    disabled: (e, t) => `${e}:disabled ${t}, ${e}[data-disabled] ${t}`,
    invalid: (e, t) => `${e}:invalid ${t}, ${e}[data-invalid] ${t}`,
    checked: (e, t) => `${e}:checked ${t}, ${e}[data-checked] ${t}`,
    indeterminate: (e, t) =>
      `${e}:indeterminate ${t}, ${e}[aria-checked=mixed] ${t}, ${e}[data-indeterminate] ${t}`,
    readOnly: (e, t) =>
      `${e}:read-only ${t}, ${e}[readonly] ${t}, ${e}[data-read-only] ${t}`,
    expanded: (e, t) =>
      `${e}:read-only ${t}, ${e}[aria-expanded=true] ${t}, ${e}[data-expanded] ${t}`,
    placeholderShown: (e, t) => `${e}:placeholder-shown ${t}`,
  },
  fi = (e) => H1((t) => e(t, '&'), '[role=group]', '[data-group]', '.group'),
  Rr = (e) => H1((t) => e(t, '~ &'), '[data-peer]', '.peer'),
  H1 = (e, ...t) => t.map(e).join(', '),
  Zc = {
    _hover: '&:hover, &[data-hover]',
    _active: '&:active, &[data-active]',
    _focus: '&:focus, &[data-focus]',
    _highlighted: '&[data-highlighted]',
    _focusWithin: '&:focus-within',
    _focusVisible: '&:focus-visible, &[data-focus-visible]',
    _disabled:
      '&:disabled, &[disabled], &[aria-disabled=true], &[data-disabled]',
    _readOnly: '&[aria-readonly=true], &[readonly], &[data-readonly]',
    _before: '&::before',
    _after: '&::after',
    _empty: '&:empty',
    _expanded: '&[aria-expanded=true], &[data-expanded]',
    _checked: '&[aria-checked=true], &[data-checked]',
    _grabbed: '&[aria-grabbed=true], &[data-grabbed]',
    _pressed: '&[aria-pressed=true], &[data-pressed]',
    _invalid: '&[aria-invalid=true], &[data-invalid]',
    _valid: '&[data-valid], &[data-state=valid]',
    _loading: '&[data-loading], &[aria-busy=true]',
    _selected: '&[aria-selected=true], &[data-selected]',
    _hidden: '&[hidden], &[data-hidden]',
    _autofill: '&:-webkit-autofill',
    _even: '&:nth-of-type(even)',
    _odd: '&:nth-of-type(odd)',
    _first: '&:first-of-type',
    _firstLetter: '&::first-letter',
    _last: '&:last-of-type',
    _notFirst: '&:not(:first-of-type)',
    _notLast: '&:not(:last-of-type)',
    _visited: '&:visited',
    _activeLink: '&[aria-current=page]',
    _activeStep: '&[aria-current=step]',
    _indeterminate:
      '&:indeterminate, &[aria-checked=mixed], &[data-indeterminate]',
    _groupHover: fi(Xt.hover),
    _peerHover: Rr(Xt.hover),
    _groupFocus: fi(Xt.focus),
    _peerFocus: Rr(Xt.focus),
    _groupFocusVisible: fi(Xt.focusVisible),
    _peerFocusVisible: Rr(Xt.focusVisible),
    _groupActive: fi(Xt.active),
    _peerActive: Rr(Xt.active),
    _groupDisabled: fi(Xt.disabled),
    _peerDisabled: Rr(Xt.disabled),
    _groupInvalid: fi(Xt.invalid),
    _peerInvalid: Rr(Xt.invalid),
    _groupChecked: fi(Xt.checked),
    _peerChecked: Rr(Xt.checked),
    _groupFocusWithin: fi(Xt.focusWithin),
    _peerFocusWithin: Rr(Xt.focusWithin),
    _peerPlaceholderShown: Rr(Xt.placeholderShown),
    _placeholder: '&::placeholder',
    _placeholderShown: '&:placeholder-shown',
    _fullScreen: '&:fullscreen',
    _selection: '&::selection',
    _rtl: '[dir=rtl] &, &[dir=rtl]',
    _ltr: '[dir=ltr] &, &[dir=ltr]',
    _mediaDark: '@media (prefers-color-scheme: dark)',
    _mediaReduceMotion: '@media (prefers-reduced-motion: reduce)',
    _dark:
      '.chakra-ui-dark &:not([data-theme]),[data-theme=dark] &:not([data-theme]),&[data-theme=dark]',
    _light:
      '.chakra-ui-light &:not([data-theme]),[data-theme=light] &:not([data-theme]),&[data-theme=light]',
    _horizontal: '&[data-orientation=horizontal]',
    _vertical: '&[data-orientation=vertical]',
  },
  Q1 = Object.keys(Zc);
function Z_(e, t) {
  return De(String(e).replace(/\./g, '-'), void 0, t);
}
function BT(e, t) {
  let r = {};
  const n = {};
  for (const [i, o] of Object.entries(e)) {
    const { isSemantic: s, value: l } = o,
      { variable: c, reference: h } = Z_(
        i,
        t == null ? void 0 : t.cssVarPrefix,
      );
    if (!s) {
      if (i.startsWith('space')) {
        const x = i.split('.'),
          [I, ...$] = x,
          j = `${I}.-${$.join('.')}`,
          G = Gi.negate(l),
          C = Gi.negate(h);
        n[j] = { value: G, var: c, varRef: C };
      }
      (r[c] = l), (n[i] = { value: l, var: c, varRef: h });
      continue;
    }
    const y = (x) => {
        const $ = [String(i).split('.')[0], x].join('.');
        if (!e[$]) return x;
        const { reference: G } = Z_($, t == null ? void 0 : t.cssVarPrefix);
        return G;
      },
      m = fr(l) ? l : { default: l };
    (r = xr(
      r,
      Object.entries(m).reduce((x, [I, $]) => {
        var j, G;
        if (!$) return x;
        const C = y(`${$}`);
        if (I === 'default') return (x[c] = C), x;
        const T = (G = (j = Zc) == null ? void 0 : j[I]) != null ? G : I;
        return (x[T] = { [c]: C }), x;
      }, {}),
    )),
      (n[i] = { value: h, var: c, varRef: h });
  }
  return { cssVars: r, cssMap: n };
}
function VT(e, t = []) {
  const r = Object.assign({}, e);
  for (const n of t) n in r && delete r[n];
  return r;
}
function WT(e, t) {
  const r = {};
  for (const n of t) n in e && (r[n] = e[n]);
  return r;
}
function UT(e) {
  return typeof e == 'object' && e != null && !Array.isArray(e);
}
function ey(e, t, r = {}) {
  const { stop: n, getKey: i } = r;
  function o(s, l = []) {
    var c;
    if (UT(s) || Array.isArray(s)) {
      const h = {};
      for (const [y, m] of Object.entries(s)) {
        const x = (c = i == null ? void 0 : i(y)) != null ? c : y,
          I = [...l, x];
        if (n != null && n(s, I)) return t(s, l);
        h[x] = o(m, I);
      }
      return h;
    }
    return t(s, l);
  }
  return o(e);
}
var HT = [
  'colors',
  'borders',
  'borderWidths',
  'borderStyles',
  'fonts',
  'fontSizes',
  'fontWeights',
  'gradients',
  'letterSpacings',
  'lineHeights',
  'radii',
  'space',
  'shadows',
  'sizes',
  'zIndices',
  'transition',
  'blur',
  'breakpoints',
];
function QT(e) {
  return WT(e, HT);
}
function GT(e) {
  return e.semanticTokens;
}
function KT(e) {
  const { __cssMap: t, __cssVars: r, __breakpoints: n, ...i } = e;
  return i;
}
var XT = (e) => Q1.includes(e) || e === 'default';
function YT({ tokens: e, semanticTokens: t }) {
  const r = {};
  return (
    ey(e, (n, i) => {
      n != null && (r[i.join('.')] = { isSemantic: !1, value: n });
    }),
    ey(
      t,
      (n, i) => {
        n != null && (r[i.join('.')] = { isSemantic: !0, value: n });
      },
      { stop: (n) => Object.keys(n).every(XT) },
    ),
    r
  );
}
function JT(e) {
  var t;
  const r = KT(e),
    n = QT(r),
    i = GT(r),
    o = YT({ tokens: n, semanticTokens: i }),
    s = (t = r.config) == null ? void 0 : t.cssVarPrefix,
    { cssMap: l, cssVars: c } = BT(o, { cssVarPrefix: s });
  return (
    Object.assign(r, {
      __cssVars: {
        ...{
          '--chakra-ring-inset': 'var(--chakra-empty,/*!*/ /*!*/)',
          '--chakra-ring-offset-width': '0px',
          '--chakra-ring-offset-color': '#fff',
          '--chakra-ring-color': 'rgba(66, 153, 225, 0.6)',
          '--chakra-ring-offset-shadow': '0 0 #0000',
          '--chakra-ring-shadow': '0 0 #0000',
          '--chakra-space-x-reverse': '0',
          '--chakra-space-y-reverse': '0',
        },
        ...c,
      },
      __cssMap: l,
      __breakpoints: jT(r.breakpoints),
    }),
    r
  );
}
var Dm = xr(
  {},
  wu,
  nt,
  hT,
  uc,
  Un,
  mT,
  kT,
  gT,
  V1,
  xT,
  ha,
  nh,
  Et,
  PT,
  AT,
  ET,
  TT,
  _T,
  CT,
);
Object.assign({}, Et, Un, uc, V1, ha);
var ZT = [...Object.keys(Dm), ...Q1],
  eC = { ...Dm, ...Zc },
  tC = (e) => e in eC,
  nC = (e) => (t) => {
    if (!t.__breakpoints) return e;
    const { isResponsive: r, toArrayValue: n, media: i } = t.__breakpoints,
      o = {};
    for (const s in e) {
      let l = Si(e[s], t);
      if (l == null) continue;
      if (((l = fr(l) && r(l) ? n(l) : l), !Array.isArray(l))) {
        o[s] = l;
        continue;
      }
      const c = l.slice(0, i.length).length;
      for (let h = 0; h < c; h += 1) {
        const y = i == null ? void 0 : i[h];
        if (!y) {
          o[s] = l[h];
          continue;
        }
        (o[y] = o[y] || {}), l[h] != null && (o[y][s] = l[h]);
      }
    }
    return o;
  };
function rC(e) {
  const t = [];
  let r = '',
    n = !1;
  for (let i = 0; i < e.length; i++) {
    const o = e[i];
    o === '('
      ? ((n = !0), (r += o))
      : o === ')'
        ? ((n = !1), (r += o))
        : o === ',' && !n
          ? (t.push(r), (r = ''))
          : (r += o);
  }
  return (r = r.trim()), r && t.push(r), t;
}
function iC(e) {
  return /^var\(--.+\)$/.test(e);
}
var oC = (e, t) => e.startsWith('--') && typeof t == 'string' && !iC(t),
  sC = (e, t) => {
    var r, n;
    if (t == null) return t;
    const i = (c) => {
        var h, y;
        return (y = (h = e.__cssMap) == null ? void 0 : h[c]) == null
          ? void 0
          : y.varRef;
      },
      o = (c) => {
        var h;
        return (h = i(c)) != null ? h : c;
      },
      [s, l] = rC(t);
    return (t = (n = (r = i(s)) != null ? r : o(l)) != null ? n : o(t)), t;
  };
function aC(e) {
  const { configs: t = {}, pseudos: r = {}, theme: n } = e,
    i = (o, s = !1) => {
      var l, c, h;
      const y = Si(o, n),
        m = nC(y)(n);
      let x = {};
      for (let I in m) {
        const $ = m[I];
        let j = Si($, n);
        I in r && (I = r[I]), oC(I, j) && (j = sC(n, j));
        let G = t[I];
        if ((G === !0 && (G = { property: I }), fr(j))) {
          (x[I] = (l = x[I]) != null ? l : {}), (x[I] = xr({}, x[I], i(j, !0)));
          continue;
        }
        let C =
          (h =
            (c = G == null ? void 0 : G.transform) == null
              ? void 0
              : c.call(G, j, n, y)) != null
            ? h
            : j;
        C = G != null && G.processResult ? i(C, !0) : C;
        const T = Si(G == null ? void 0 : G.property, n);
        if (!s && G != null && G.static) {
          const q = Si(G.static, n);
          x = xr({}, x, q);
        }
        if (T && Array.isArray(T)) {
          for (const q of T) x[q] = C;
          continue;
        }
        if (T) {
          T === '&' && fr(C) ? (x = xr({}, x, C)) : (x[T] = C);
          continue;
        }
        if (fr(C)) {
          x = xr({}, x, C);
          continue;
        }
        x[I] = C;
      }
      return x;
    };
  return i;
}
var G1 = (e) => (t) => aC({ theme: t, pseudos: Zc, configs: Dm })(e);
function vt(e) {
  return {
    definePartsStyle(t) {
      return t;
    },
    defineMultiStyleConfig(t) {
      return { parts: e, ...t };
    },
  };
}
function lC(e, t) {
  if (Array.isArray(e)) return e;
  if (fr(e)) return t(e);
  if (e != null) return [e];
}
function uC(e, t) {
  for (let r = t + 1; r < e.length; r++) if (e[r] != null) return r;
  return -1;
}
function cC(e) {
  const t = e.__breakpoints;
  return function (n, i, o, s) {
    var l, c;
    if (!t) return;
    const h = {},
      y = lC(o, t.toArrayValue);
    if (!y) return h;
    const m = y.length,
      x = m === 1,
      I = !!n.parts;
    for (let $ = 0; $ < m; $++) {
      const j = t.details[$],
        G = t.details[uC(y, $)],
        C = Js(j.minW, G == null ? void 0 : G._minW),
        T = Si((l = n[i]) == null ? void 0 : l[y[$]], s);
      if (T) {
        if (I) {
          (c = n.parts) == null ||
            c.forEach((q) => {
              xr(h, { [q]: x ? T[q] : { [C]: T[q] } });
            });
          continue;
        }
        if (!I) {
          x ? xr(h, T) : (h[C] = T);
          continue;
        }
        h[C] = T;
      }
    }
    return h;
  };
}
function fC(e) {
  return (t) => {
    var r;
    const { variant: n, size: i, theme: o } = t,
      s = cC(o);
    return xr(
      {},
      Si((r = e.baseStyle) != null ? r : {}, t),
      s(e, 'sizes', i, t),
      s(e, 'variants', n, t),
    );
  };
}
function ii(e) {
  return VT(e, ['styleConfig', 'size', 'variant', 'colorScheme']);
}
var dC = {
    common:
      'background-color, border-color, color, fill, stroke, opacity, box-shadow, transform',
    colors: 'background-color, border-color, color, fill, stroke',
    dimensions: 'width, height',
    position: 'left, right, top, bottom',
    background: 'background-color, background-image, background-position',
  },
  pC = {
    'ease-in': 'cubic-bezier(0.4, 0, 1, 1)',
    'ease-out': 'cubic-bezier(0, 0, 0.2, 1)',
    'ease-in-out': 'cubic-bezier(0.4, 0, 0.2, 1)',
  },
  hC = {
    'ultra-fast': '50ms',
    faster: '100ms',
    fast: '150ms',
    normal: '200ms',
    slow: '300ms',
    slower: '400ms',
    'ultra-slow': '500ms',
  },
  mC = { property: dC, easing: pC, duration: hC },
  gC = mC,
  _C = {
    hide: -1,
    auto: 'auto',
    base: 0,
    docked: 10,
    dropdown: 1e3,
    sticky: 1100,
    banner: 1200,
    overlay: 1300,
    modal: 1400,
    popover: 1500,
    skipLink: 1600,
    toast: 1700,
    tooltip: 1800,
  },
  yC = _C,
  vC = {
    none: 0,
    '1px': '1px solid',
    '2px': '2px solid',
    '4px': '4px solid',
    '8px': '8px solid',
  },
  bC = vC,
  wC = {
    base: '0em',
    sm: '30em',
    md: '48em',
    lg: '62em',
    xl: '80em',
    '2xl': '96em',
  },
  SC = wC,
  xC = {
    transparent: 'transparent',
    current: 'currentColor',
    black: '#000000',
    white: '#FFFFFF',
    whiteAlpha: {
      50: 'rgba(255, 255, 255, 0.04)',
      100: 'rgba(255, 255, 255, 0.06)',
      200: 'rgba(255, 255, 255, 0.08)',
      300: 'rgba(255, 255, 255, 0.16)',
      400: 'rgba(255, 255, 255, 0.24)',
      500: 'rgba(255, 255, 255, 0.36)',
      600: 'rgba(255, 255, 255, 0.48)',
      700: 'rgba(255, 255, 255, 0.64)',
      800: 'rgba(255, 255, 255, 0.80)',
      900: 'rgba(255, 255, 255, 0.92)',
    },
    blackAlpha: {
      50: 'rgba(0, 0, 0, 0.04)',
      100: 'rgba(0, 0, 0, 0.06)',
      200: 'rgba(0, 0, 0, 0.08)',
      300: 'rgba(0, 0, 0, 0.16)',
      400: 'rgba(0, 0, 0, 0.24)',
      500: 'rgba(0, 0, 0, 0.36)',
      600: 'rgba(0, 0, 0, 0.48)',
      700: 'rgba(0, 0, 0, 0.64)',
      800: 'rgba(0, 0, 0, 0.80)',
      900: 'rgba(0, 0, 0, 0.92)',
    },
    gray: {
      50: '#F7FAFC',
      100: '#EDF2F7',
      200: '#E2E8F0',
      300: '#CBD5E0',
      400: '#A0AEC0',
      500: '#718096',
      600: '#4A5568',
      700: '#2D3748',
      800: '#1A202C',
      900: '#171923',
    },
    red: {
      50: '#FFF5F5',
      100: '#FED7D7',
      200: '#FEB2B2',
      300: '#FC8181',
      400: '#F56565',
      500: '#E53E3E',
      600: '#C53030',
      700: '#9B2C2C',
      800: '#822727',
      900: '#63171B',
    },
    orange: {
      50: '#FFFAF0',
      100: '#FEEBC8',
      200: '#FBD38D',
      300: '#F6AD55',
      400: '#ED8936',
      500: '#DD6B20',
      600: '#C05621',
      700: '#9C4221',
      800: '#7B341E',
      900: '#652B19',
    },
    yellow: {
      50: '#FFFFF0',
      100: '#FEFCBF',
      200: '#FAF089',
      300: '#F6E05E',
      400: '#ECC94B',
      500: '#D69E2E',
      600: '#B7791F',
      700: '#975A16',
      800: '#744210',
      900: '#5F370E',
    },
    green: {
      50: '#F0FFF4',
      100: '#C6F6D5',
      200: '#9AE6B4',
      300: '#68D391',
      400: '#48BB78',
      500: '#38A169',
      600: '#2F855A',
      700: '#276749',
      800: '#22543D',
      900: '#1C4532',
    },
    teal: {
      50: '#E6FFFA',
      100: '#B2F5EA',
      200: '#81E6D9',
      300: '#4FD1C5',
      400: '#38B2AC',
      500: '#319795',
      600: '#2C7A7B',
      700: '#285E61',
      800: '#234E52',
      900: '#1D4044',
    },
    blue: {
      50: '#ebf8ff',
      100: '#bee3f8',
      200: '#90cdf4',
      300: '#63b3ed',
      400: '#4299e1',
      500: '#3182ce',
      600: '#2b6cb0',
      700: '#2c5282',
      800: '#2a4365',
      900: '#1A365D',
    },
    cyan: {
      50: '#EDFDFD',
      100: '#C4F1F9',
      200: '#9DECF9',
      300: '#76E4F7',
      400: '#0BC5EA',
      500: '#00B5D8',
      600: '#00A3C4',
      700: '#0987A0',
      800: '#086F83',
      900: '#065666',
    },
    purple: {
      50: '#FAF5FF',
      100: '#E9D8FD',
      200: '#D6BCFA',
      300: '#B794F4',
      400: '#9F7AEA',
      500: '#805AD5',
      600: '#6B46C1',
      700: '#553C9A',
      800: '#44337A',
      900: '#322659',
    },
    pink: {
      50: '#FFF5F7',
      100: '#FED7E2',
      200: '#FBB6CE',
      300: '#F687B3',
      400: '#ED64A6',
      500: '#D53F8C',
      600: '#B83280',
      700: '#97266D',
      800: '#702459',
      900: '#521B41',
    },
    linkedin: {
      50: '#E8F4F9',
      100: '#CFEDFB',
      200: '#9BDAF3',
      300: '#68C7EC',
      400: '#34B3E4',
      500: '#00A0DC',
      600: '#008CC9',
      700: '#0077B5',
      800: '#005E93',
      900: '#004471',
    },
    facebook: {
      50: '#E8F4F9',
      100: '#D9DEE9',
      200: '#B7C2DA',
      300: '#6482C0',
      400: '#4267B2',
      500: '#385898',
      600: '#314E89',
      700: '#29487D',
      800: '#223B67',
      900: '#1E355B',
    },
    messenger: {
      50: '#D0E6FF',
      100: '#B9DAFF',
      200: '#A2CDFF',
      300: '#7AB8FF',
      400: '#2E90FF',
      500: '#0078FF',
      600: '#0063D1',
      700: '#0052AC',
      800: '#003C7E',
      900: '#002C5C',
    },
    whatsapp: {
      50: '#dffeec',
      100: '#b9f5d0',
      200: '#90edb3',
      300: '#65e495',
      400: '#3cdd78',
      500: '#22c35e',
      600: '#179848',
      700: '#0c6c33',
      800: '#01421c',
      900: '#001803',
    },
    twitter: {
      50: '#E5F4FD',
      100: '#C8E9FB',
      200: '#A8DCFA',
      300: '#83CDF7',
      400: '#57BBF5',
      500: '#1DA1F2',
      600: '#1A94DA',
      700: '#1681BF',
      800: '#136B9E',
      900: '#0D4D71',
    },
    telegram: {
      50: '#E3F2F9',
      100: '#C5E4F3',
      200: '#A2D4EC',
      300: '#7AC1E4',
      400: '#47A9DA',
      500: '#0088CC',
      600: '#007AB8',
      700: '#006BA1',
      800: '#005885',
      900: '#003F5E',
    },
  },
  kC = xC,
  EC = {
    none: '0',
    sm: '0.125rem',
    base: '0.25rem',
    md: '0.375rem',
    lg: '0.5rem',
    xl: '0.75rem',
    '2xl': '1rem',
    '3xl': '1.5rem',
    full: '9999px',
  },
  TC = EC,
  CC = {
    xs: '0 0 0 1px rgba(0, 0, 0, 0.05)',
    sm: '0 1px 2px 0 rgba(0, 0, 0, 0.05)',
    base: '0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px 0 rgba(0, 0, 0, 0.06)',
    md: '0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06)',
    lg: '0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05)',
    xl: '0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04)',
    '2xl': '0 25px 50px -12px rgba(0, 0, 0, 0.25)',
    outline: '0 0 0 3px rgba(66, 153, 225, 0.6)',
    inner: 'inset 0 2px 4px 0 rgba(0,0,0,0.06)',
    none: 'none',
    'dark-lg':
      'rgba(0, 0, 0, 0.1) 0px 0px 0px 1px, rgba(0, 0, 0, 0.2) 0px 5px 10px, rgba(0, 0, 0, 0.4) 0px 15px 40px',
  },
  AC = CC,
  PC = {
    none: 0,
    sm: '4px',
    base: '8px',
    md: '12px',
    lg: '16px',
    xl: '24px',
    '2xl': '40px',
    '3xl': '64px',
  },
  qC = PC,
  IC = {
    letterSpacings: {
      tighter: '-0.05em',
      tight: '-0.025em',
      normal: '0',
      wide: '0.025em',
      wider: '0.05em',
      widest: '0.1em',
    },
    lineHeights: {
      normal: 'normal',
      none: 1,
      shorter: 1.25,
      short: 1.375,
      base: 1.5,
      tall: 1.625,
      taller: '2',
      3: '.75rem',
      4: '1rem',
      5: '1.25rem',
      6: '1.5rem',
      7: '1.75rem',
      8: '2rem',
      9: '2.25rem',
      10: '2.5rem',
    },
    fontWeights: {
      hairline: 100,
      thin: 200,
      light: 300,
      normal: 400,
      medium: 500,
      semibold: 600,
      bold: 700,
      extrabold: 800,
      black: 900,
    },
    fonts: {
      heading:
        '-apple-system, BlinkMacSystemFont, "Segoe UI", Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol"',
      body: '-apple-system, BlinkMacSystemFont, "Segoe UI", Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol"',
      mono: 'SFMono-Regular,Menlo,Monaco,Consolas,"Liberation Mono","Courier New",monospace',
    },
    fontSizes: {
      '3xs': '0.45rem',
      '2xs': '0.625rem',
      xs: '0.75rem',
      sm: '0.875rem',
      md: '1rem',
      lg: '1.125rem',
      xl: '1.25rem',
      '2xl': '1.5rem',
      '3xl': '1.875rem',
      '4xl': '2.25rem',
      '5xl': '3rem',
      '6xl': '3.75rem',
      '7xl': '4.5rem',
      '8xl': '6rem',
      '9xl': '8rem',
    },
  },
  K1 = IC,
  X1 = {
    px: '1px',
    0.5: '0.125rem',
    1: '0.25rem',
    1.5: '0.375rem',
    2: '0.5rem',
    2.5: '0.625rem',
    3: '0.75rem',
    3.5: '0.875rem',
    4: '1rem',
    5: '1.25rem',
    6: '1.5rem',
    7: '1.75rem',
    8: '2rem',
    9: '2.25rem',
    10: '2.5rem',
    12: '3rem',
    14: '3.5rem',
    16: '4rem',
    20: '5rem',
    24: '6rem',
    28: '7rem',
    32: '8rem',
    36: '9rem',
    40: '10rem',
    44: '11rem',
    48: '12rem',
    52: '13rem',
    56: '14rem',
    60: '15rem',
    64: '16rem',
    72: '18rem',
    80: '20rem',
    96: '24rem',
  },
  FC = {
    max: 'max-content',
    min: 'min-content',
    full: '100%',
    '3xs': '14rem',
    '2xs': '16rem',
    xs: '20rem',
    sm: '24rem',
    md: '28rem',
    lg: '32rem',
    xl: '36rem',
    '2xl': '42rem',
    '3xl': '48rem',
    '4xl': '56rem',
    '5xl': '64rem',
    '6xl': '72rem',
    '7xl': '80rem',
    '8xl': '90rem',
    prose: '60ch',
  },
  RC = { sm: '640px', md: '768px', lg: '1024px', xl: '1280px' },
  OC = { ...X1, ...FC, container: RC },
  Y1 = OC,
  LC = {
    breakpoints: SC,
    zIndices: yC,
    radii: TC,
    blur: qC,
    colors: kC,
    ...K1,
    sizes: Y1,
    shadows: AC,
    space: X1,
    borders: bC,
    transition: gC,
  },
  { defineMultiStyleConfig: MC, definePartsStyle: Zs } = vt([
    'stepper',
    'step',
    'title',
    'description',
    'indicator',
    'separator',
    'icon',
    'number',
  ]),
  Dr = De('stepper-indicator-size'),
  No = De('stepper-icon-size'),
  jo = De('stepper-title-font-size'),
  ea = De('stepper-description-font-size'),
  Vs = De('stepper-accent-color'),
  DC = Zs(({ colorScheme: e }) => ({
    stepper: {
      display: 'flex',
      justifyContent: 'space-between',
      gap: '4',
      '&[data-orientation=vertical]': {
        flexDirection: 'column',
        alignItems: 'flex-start',
      },
      '&[data-orientation=horizontal]': {
        flexDirection: 'row',
        alignItems: 'center',
      },
      [Vs.variable]: `colors.${e}.500`,
      _dark: { [Vs.variable]: `colors.${e}.200` },
    },
    title: { fontSize: jo.reference, fontWeight: 'medium' },
    description: { fontSize: ea.reference, color: 'chakra-subtle-text' },
    number: { fontSize: jo.reference },
    step: {
      flexShrink: 0,
      position: 'relative',
      display: 'flex',
      gap: '2',
      '&[data-orientation=horizontal]': { alignItems: 'center' },
      flex: '1',
      '&:last-of-type:not([data-stretch])': { flex: 'initial' },
    },
    icon: { flexShrink: 0, width: No.reference, height: No.reference },
    indicator: {
      flexShrink: 0,
      borderRadius: 'full',
      width: Dr.reference,
      height: Dr.reference,
      display: 'flex',
      justifyContent: 'center',
      alignItems: 'center',
      '&[data-status=active]': {
        borderWidth: '2px',
        borderColor: Vs.reference,
      },
      '&[data-status=complete]': {
        bg: Vs.reference,
        color: 'chakra-inverse-text',
      },
      '&[data-status=incomplete]': { borderWidth: '2px' },
    },
    separator: {
      bg: 'chakra-border-color',
      flex: '1',
      '&[data-status=complete]': { bg: Vs.reference },
      '&[data-orientation=horizontal]': {
        width: '100%',
        height: '2px',
        marginStart: '2',
      },
      '&[data-orientation=vertical]': {
        width: '2px',
        position: 'absolute',
        height: '100%',
        maxHeight: `calc(100% - ${Dr.reference} - 8px)`,
        top: `calc(${Dr.reference} + 4px)`,
        insetStart: `calc(${Dr.reference} / 2 - 1px)`,
      },
    },
  })),
  zC = MC({
    baseStyle: DC,
    sizes: {
      xs: Zs({
        stepper: {
          [Dr.variable]: 'sizes.4',
          [No.variable]: 'sizes.3',
          [jo.variable]: 'fontSizes.xs',
          [ea.variable]: 'fontSizes.xs',
        },
      }),
      sm: Zs({
        stepper: {
          [Dr.variable]: 'sizes.6',
          [No.variable]: 'sizes.4',
          [jo.variable]: 'fontSizes.sm',
          [ea.variable]: 'fontSizes.xs',
        },
      }),
      md: Zs({
        stepper: {
          [Dr.variable]: 'sizes.8',
          [No.variable]: 'sizes.5',
          [jo.variable]: 'fontSizes.md',
          [ea.variable]: 'fontSizes.sm',
        },
      }),
      lg: Zs({
        stepper: {
          [Dr.variable]: 'sizes.10',
          [No.variable]: 'sizes.6',
          [jo.variable]: 'fontSizes.lg',
          [ea.variable]: 'fontSizes.md',
        },
      }),
    },
    defaultProps: { size: 'md', colorScheme: 'blue' },
  });
function st(e, t = {}) {
  let r = !1;
  function n() {
    if (!r) {
      r = !0;
      return;
    }
    throw new Error(
      '[anatomy] .part(...) should only be called once. Did you mean to use .extend(...) ?',
    );
  }
  function i(...y) {
    n();
    for (const m of y) t[m] = c(m);
    return st(e, t);
  }
  function o(...y) {
    for (const m of y) m in t || (t[m] = c(m));
    return st(e, t);
  }
  function s() {
    return Object.fromEntries(
      Object.entries(t).map(([m, x]) => [m, x.selector]),
    );
  }
  function l() {
    return Object.fromEntries(
      Object.entries(t).map(([m, x]) => [m, x.className]),
    );
  }
  function c(y) {
    const I = `chakra-${(['container', 'root'].includes(y ?? '') ? [e] : [e, y]).filter(Boolean).join('__')}`;
    return { className: I, selector: `.${I}`, toString: () => y };
  }
  return {
    parts: i,
    toPart: c,
    extend: o,
    selectors: s,
    classnames: l,
    get keys() {
      return Object.keys(t);
    },
    __type: {},
  };
}
var $C = st('accordion')
    .parts('root', 'container', 'button', 'panel')
    .extend('icon'),
  NC = st('alert')
    .parts('title', 'description', 'container')
    .extend('icon', 'spinner'),
  jC = st('avatar')
    .parts('label', 'badge', 'container')
    .extend('excessLabel', 'group'),
  BC = st('breadcrumb').parts('link', 'item', 'container').extend('separator');
st('button').parts();
var VC = st('checkbox').parts('control', 'icon', 'container').extend('label');
st('progress').parts('track', 'filledTrack').extend('label');
var WC = st('drawer')
    .parts('overlay', 'dialogContainer', 'dialog')
    .extend('header', 'closeButton', 'body', 'footer'),
  UC = st('editable').parts('preview', 'input', 'textarea'),
  HC = st('form').parts('container', 'requiredIndicator', 'helperText'),
  QC = st('formError').parts('text', 'icon'),
  GC = st('input').parts('addon', 'field', 'element', 'group'),
  KC = st('list').parts('container', 'item', 'icon'),
  XC = st('menu')
    .parts('button', 'list', 'item')
    .extend('groupTitle', 'icon', 'command', 'divider'),
  YC = st('modal')
    .parts('overlay', 'dialogContainer', 'dialog')
    .extend('header', 'closeButton', 'body', 'footer'),
  JC = st('numberinput').parts('root', 'field', 'stepperGroup', 'stepper');
st('pininput').parts('field');
var ZC = st('popover')
    .parts('content', 'header', 'body', 'footer')
    .extend('popper', 'arrow', 'closeButton'),
  eA = st('progress').parts('label', 'filledTrack', 'track'),
  tA = st('radio').parts('container', 'control', 'label'),
  nA = st('select').parts('field', 'icon'),
  rA = st('slider').parts('container', 'track', 'thumb', 'filledTrack', 'mark'),
  iA = st('stat').parts('container', 'label', 'helpText', 'number', 'icon'),
  oA = st('switch').parts('container', 'track', 'thumb', 'label'),
  sA = st('table').parts(
    'table',
    'thead',
    'tbody',
    'tr',
    'th',
    'td',
    'tfoot',
    'caption',
  ),
  aA = st('tabs').parts(
    'root',
    'tab',
    'tablist',
    'tabpanel',
    'tabpanels',
    'indicator',
  ),
  lA = st('tag').parts('container', 'label', 'closeButton'),
  uA = st('card').parts('container', 'header', 'body', 'footer');
st('stepper').parts(
  'stepper',
  'step',
  'title',
  'description',
  'indicator',
  'separator',
  'icon',
  'number',
);
function Zi(e, t, r) {
  return Math.min(Math.max(e, r), t);
}
class cA extends Error {
  constructor(t) {
    super(`Failed to parse color: "${t}"`);
  }
}
var ta = cA;
function zm(e) {
  if (typeof e != 'string') throw new ta(e);
  if (e.trim().toLowerCase() === 'transparent') return [0, 0, 0, 0];
  let t = e.trim();
  t = yA.test(e) ? pA(e) : e;
  const r = hA.exec(t);
  if (r) {
    const s = Array.from(r).slice(1);
    return [
      ...s.slice(0, 3).map((l) => parseInt(Qa(l, 2), 16)),
      parseInt(Qa(s[3] || 'f', 2), 16) / 255,
    ];
  }
  const n = mA.exec(t);
  if (n) {
    const s = Array.from(n).slice(1);
    return [
      ...s.slice(0, 3).map((l) => parseInt(l, 16)),
      parseInt(s[3] || 'ff', 16) / 255,
    ];
  }
  const i = gA.exec(t);
  if (i) {
    const s = Array.from(i).slice(1);
    return [
      ...s.slice(0, 3).map((l) => parseInt(l, 10)),
      parseFloat(s[3] || '1'),
    ];
  }
  const o = _A.exec(t);
  if (o) {
    const [s, l, c, h] = Array.from(o).slice(1).map(parseFloat);
    if (Zi(0, 100, l) !== l) throw new ta(e);
    if (Zi(0, 100, c) !== c) throw new ta(e);
    return [...vA(s, l, c), Number.isNaN(h) ? 1 : h];
  }
  throw new ta(e);
}
function fA(e) {
  let t = 5381,
    r = e.length;
  for (; r; ) t = (t * 33) ^ e.charCodeAt(--r);
  return (t >>> 0) % 2341;
}
const ty = (e) => parseInt(e.replace(/_/g, ''), 36),
  dA =
    '1q29ehhb 1n09sgk7 1kl1ekf_ _yl4zsno 16z9eiv3 1p29lhp8 _bd9zg04 17u0____ _iw9zhe5 _to73___ _r45e31e _7l6g016 _jh8ouiv _zn3qba8 1jy4zshs 11u87k0u 1ro9yvyo 1aj3xael 1gz9zjz0 _3w8l4xo 1bf1ekf_ _ke3v___ _4rrkb__ 13j776yz _646mbhl _nrjr4__ _le6mbhl 1n37ehkb _m75f91n _qj3bzfz 1939yygw 11i5z6x8 _1k5f8xs 1509441m 15t5lwgf _ae2th1n _tg1ugcv 1lp1ugcv 16e14up_ _h55rw7n _ny9yavn _7a11xb_ 1ih442g9 _pv442g9 1mv16xof 14e6y7tu 1oo9zkds 17d1cisi _4v9y70f _y98m8kc 1019pq0v 12o9zda8 _348j4f4 1et50i2o _8epa8__ _ts6senj 1o350i2o 1mi9eiuo 1259yrp0 1ln80gnw _632xcoy 1cn9zldc _f29edu4 1n490c8q _9f9ziet 1b94vk74 _m49zkct 1kz6s73a 1eu9dtog _q58s1rz 1dy9sjiq __u89jo3 _aj5nkwg _ld89jo3 13h9z6wx _qa9z2ii _l119xgq _bs5arju 1hj4nwk9 1qt4nwk9 1ge6wau6 14j9zlcw 11p1edc_ _ms1zcxe _439shk6 _jt9y70f _754zsow 1la40eju _oq5p___ _x279qkz 1fa5r3rv _yd2d9ip _424tcku _8y1di2_ _zi2uabw _yy7rn9h 12yz980_ __39ljp6 1b59zg0x _n39zfzp 1fy9zest _b33k___ _hp9wq92 1il50hz4 _io472ub _lj9z3eo 19z9ykg0 _8t8iu3a 12b9bl4a 1ak5yw0o _896v4ku _tb8k8lv _s59zi6t _c09ze0p 1lg80oqn 1id9z8wb _238nba5 1kq6wgdi _154zssg _tn3zk49 _da9y6tc 1sg7cv4f _r12jvtt 1gq5fmkz 1cs9rvci _lp9jn1c _xw1tdnb 13f9zje6 16f6973h _vo7ir40 _bt5arjf _rc45e4t _hr4e100 10v4e100 _hc9zke2 _w91egv_ _sj2r1kk 13c87yx8 _vqpds__ _ni8ggk8 _tj9yqfb 1ia2j4r4 _7x9b10u 1fc9ld4j 1eq9zldr _5j9lhpx _ez9zl6o _md61fzm'
      .split(' ')
      .reduce((e, t) => {
        const r = ty(t.substring(0, 3)),
          n = ty(t.substring(3)).toString(16);
        let i = '';
        for (let o = 0; o < 6 - n.length; o++) i += '0';
        return (e[r] = `${i}${n}`), e;
      }, {});
function pA(e) {
  const t = e.toLowerCase().trim(),
    r = dA[fA(t)];
  if (!r) throw new ta(e);
  return `#${r}`;
}
const Qa = (e, t) =>
    Array.from(Array(t))
      .map(() => e)
      .join(''),
  hA = new RegExp(`^#${Qa('([a-f0-9])', 3)}([a-f0-9])?$`, 'i'),
  mA = new RegExp(`^#${Qa('([a-f0-9]{2})', 3)}([a-f0-9]{2})?$`, 'i'),
  gA = new RegExp(
    `^rgba?\\(\\s*(\\d+)\\s*${Qa(',\\s*(\\d+)\\s*', 2)}(?:,\\s*([\\d.]+))?\\s*\\)$`,
    'i',
  ),
  _A =
    /^hsla?\(\s*([\d.]+)\s*,\s*([\d.]+)%\s*,\s*([\d.]+)%(?:\s*,\s*([\d.]+))?\s*\)$/i,
  yA = /^[a-z]+$/i,
  ny = (e) => Math.round(e * 255),
  vA = (e, t, r) => {
    let n = r / 100;
    if (t === 0) return [n, n, n].map(ny);
    const i = (((e % 360) + 360) % 360) / 60,
      o = (1 - Math.abs(2 * n - 1)) * (t / 100),
      s = o * (1 - Math.abs((i % 2) - 1));
    let l = 0,
      c = 0,
      h = 0;
    i >= 0 && i < 1
      ? ((l = o), (c = s))
      : i >= 1 && i < 2
        ? ((l = s), (c = o))
        : i >= 2 && i < 3
          ? ((c = o), (h = s))
          : i >= 3 && i < 4
            ? ((c = s), (h = o))
            : i >= 4 && i < 5
              ? ((l = s), (h = o))
              : i >= 5 && i < 6 && ((l = o), (h = s));
    const y = n - o / 2,
      m = l + y,
      x = c + y,
      I = h + y;
    return [m, x, I].map(ny);
  };
function bA(e, t, r, n) {
  return `rgba(${Zi(0, 255, e).toFixed()}, ${Zi(0, 255, t).toFixed()}, ${Zi(0, 255, r).toFixed()}, ${parseFloat(Zi(0, 1, n).toFixed(3))})`;
}
function wA(e, t) {
  const [r, n, i, o] = zm(e);
  return bA(r, n, i, o - t);
}
function SA(e) {
  const [t, r, n, i] = zm(e);
  let o = (s) => {
    const l = Zi(0, 255, s).toString(16);
    return l.length === 1 ? `0${l}` : l;
  };
  return `#${o(t)}${o(r)}${o(n)}${i < 1 ? o(Math.round(i * 255)) : ''}`;
}
function xA(e, t, r, n, i) {
  for (t = t.split ? t.split('.') : t, n = 0; n < t.length; n++)
    e = e ? e[t[n]] : i;
  return e === i ? r : e;
}
var kA = (e) => Object.keys(e).length === 0,
  hn = (e, t, r) => {
    const n = xA(e, `colors.${t}`, t);
    try {
      return SA(n), n;
    } catch {
      return r ?? '#000000';
    }
  },
  EA = (e) => {
    const [t, r, n] = zm(e);
    return (t * 299 + r * 587 + n * 114) / 1e3;
  },
  TA = (e) => (t) => {
    const r = hn(t, e);
    return EA(r) < 128 ? 'dark' : 'light';
  },
  CA = (e) => (t) => TA(e)(t) === 'dark',
  _s = (e, t) => (r) => {
    const n = hn(r, e);
    return wA(n, 1 - t);
  };
function ry(e = '1rem', t = 'rgba(255, 255, 255, 0.15)') {
  return {
    backgroundImage: `linear-gradient(
    45deg,
    ${t} 25%,
    transparent 25%,
    transparent 50%,
    ${t} 50%,
    ${t} 75%,
    transparent 75%,
    transparent
  )`,
    backgroundSize: `${e} ${e}`,
  };
}
var AA = () =>
  `#${Math.floor(Math.random() * 16777215)
    .toString(16)
    .padEnd(6, '0')}`;
function PA(e) {
  const t = AA();
  return !e || kA(e)
    ? t
    : e.string && e.colors
      ? IA(e.string, e.colors)
      : e.string && !e.colors
        ? qA(e.string)
        : e.colors && !e.string
          ? FA(e.colors)
          : t;
}
function qA(e) {
  let t = 0;
  if (e.length === 0) return t.toString();
  for (let n = 0; n < e.length; n += 1)
    (t = e.charCodeAt(n) + ((t << 5) - t)), (t = t & t);
  let r = '#';
  for (let n = 0; n < 3; n += 1) {
    const i = (t >> (n * 8)) & 255;
    r += `00${i.toString(16)}`.substr(-2);
  }
  return r;
}
function IA(e, t) {
  let r = 0;
  if (e.length === 0) return t[0];
  for (let n = 0; n < e.length; n += 1)
    (r = e.charCodeAt(n) + ((r << 5) - r)), (r = r & r);
  return (r = ((r % t.length) + t.length) % t.length), t[r];
}
function FA(e) {
  return e[Math.floor(Math.random() * e.length)];
}
function Me(e, t) {
  return (r) => (r.colorMode === 'dark' ? t : e);
}
function $m(e) {
  const { orientation: t, vertical: r, horizontal: n } = e;
  return t ? (t === 'vertical' ? r : n) : {};
}
function J1(e) {
  return fr(e) && e.reference ? e.reference : String(e);
}
var ef = (e, ...t) => t.map(J1).join(` ${e} `).replace(/calc/g, ''),
  iy = (...e) => `calc(${ef('+', ...e)})`,
  oy = (...e) => `calc(${ef('-', ...e)})`,
  oh = (...e) => `calc(${ef('*', ...e)})`,
  sy = (...e) => `calc(${ef('/', ...e)})`,
  ay = (e) => {
    const t = J1(e);
    return t != null && !Number.isNaN(parseFloat(t))
      ? String(t).startsWith('-')
        ? String(t).slice(1)
        : `-${t}`
      : oh(t, -1);
  },
  zr = Object.assign(
    (e) => ({
      add: (...t) => zr(iy(e, ...t)),
      subtract: (...t) => zr(oy(e, ...t)),
      multiply: (...t) => zr(oh(e, ...t)),
      divide: (...t) => zr(sy(e, ...t)),
      negate: () => zr(ay(e)),
      toString: () => e.toString(),
    }),
    { add: iy, subtract: oy, multiply: oh, divide: sy, negate: ay },
  );
function RA(e) {
  return !Number.isInteger(parseFloat(e.toString()));
}
function OA(e, t = '-') {
  return e.replace(/\s+/g, t);
}
function Z1(e) {
  const t = OA(e.toString());
  return t.includes('\\.') ? e : RA(e) ? t.replace('.', '\\.') : e;
}
function LA(e, t = '') {
  return [t, Z1(e)].filter(Boolean).join('-');
}
function MA(e, t) {
  return `var(${Z1(e)}${t ? `, ${t}` : ''})`;
}
function DA(e, t = '') {
  return `--${LA(e, t)}`;
}
function Bt(e, t) {
  const r = DA(e, void 0);
  return { variable: r, reference: MA(r, zA(void 0)) };
}
function zA(e) {
  return typeof e == 'string' ? e : e == null ? void 0 : e.reference;
}
var { defineMultiStyleConfig: $A, definePartsStyle: Su } = vt(oA.keys),
  ma = Bt('switch-track-width'),
  io = Bt('switch-track-height'),
  Ad = Bt('switch-track-diff'),
  NA = zr.subtract(ma, io),
  sh = Bt('switch-thumb-x'),
  Ws = Bt('switch-bg'),
  jA = (e) => {
    const { colorScheme: t } = e;
    return {
      borderRadius: 'full',
      p: '0.5',
      width: [ma.reference],
      height: [io.reference],
      transitionProperty: 'common',
      transitionDuration: 'fast',
      [Ws.variable]: 'colors.gray.300',
      _dark: { [Ws.variable]: 'colors.whiteAlpha.400' },
      _focusVisible: { boxShadow: 'outline' },
      _disabled: { opacity: 0.4, cursor: 'not-allowed' },
      _checked: {
        [Ws.variable]: `colors.${t}.500`,
        _dark: { [Ws.variable]: `colors.${t}.200` },
      },
      bg: Ws.reference,
    };
  },
  BA = {
    bg: 'white',
    transitionProperty: 'transform',
    transitionDuration: 'normal',
    borderRadius: 'inherit',
    width: [io.reference],
    height: [io.reference],
    _checked: { transform: `translateX(${sh.reference})` },
  },
  VA = Su((e) => ({
    container: {
      [Ad.variable]: NA,
      [sh.variable]: Ad.reference,
      _rtl: { [sh.variable]: zr(Ad).negate().toString() },
    },
    track: jA(e),
    thumb: BA,
  })),
  WA = {
    sm: Su({
      container: { [ma.variable]: '1.375rem', [io.variable]: 'sizes.3' },
    }),
    md: Su({
      container: { [ma.variable]: '1.875rem', [io.variable]: 'sizes.4' },
    }),
    lg: Su({
      container: { [ma.variable]: '2.875rem', [io.variable]: 'sizes.6' },
    }),
  },
  UA = $A({
    baseStyle: VA,
    sizes: WA,
    defaultProps: { size: 'md', colorScheme: 'blue' },
  }),
  { defineMultiStyleConfig: HA, definePartsStyle: os } = vt(sA.keys),
  QA = os({
    table: {
      fontVariantNumeric: 'lining-nums tabular-nums',
      borderCollapse: 'collapse',
      width: 'full',
    },
    th: {
      fontFamily: 'heading',
      fontWeight: 'bold',
      textTransform: 'uppercase',
      letterSpacing: 'wider',
      textAlign: 'start',
    },
    td: { textAlign: 'start' },
    caption: {
      mt: 4,
      fontFamily: 'heading',
      textAlign: 'center',
      fontWeight: 'medium',
    },
  }),
  cc = { '&[data-is-numeric=true]': { textAlign: 'end' } },
  GA = os((e) => {
    const { colorScheme: t } = e;
    return {
      th: {
        color: Me('gray.600', 'gray.400')(e),
        borderBottom: '1px',
        borderColor: Me(`${t}.100`, `${t}.700`)(e),
        ...cc,
      },
      td: {
        borderBottom: '1px',
        borderColor: Me(`${t}.100`, `${t}.700`)(e),
        ...cc,
      },
      caption: { color: Me('gray.600', 'gray.100')(e) },
      tfoot: { tr: { '&:last-of-type': { th: { borderBottomWidth: 0 } } } },
    };
  }),
  KA = os((e) => {
    const { colorScheme: t } = e;
    return {
      th: {
        color: Me('gray.600', 'gray.400')(e),
        borderBottom: '1px',
        borderColor: Me(`${t}.100`, `${t}.700`)(e),
        ...cc,
      },
      td: {
        borderBottom: '1px',
        borderColor: Me(`${t}.100`, `${t}.700`)(e),
        ...cc,
      },
      caption: { color: Me('gray.600', 'gray.100')(e) },
      tbody: {
        tr: {
          '&:nth-of-type(odd)': {
            'th, td': {
              borderBottomWidth: '1px',
              borderColor: Me(`${t}.100`, `${t}.700`)(e),
            },
            td: { background: Me(`${t}.100`, `${t}.700`)(e) },
          },
        },
      },
      tfoot: { tr: { '&:last-of-type': { th: { borderBottomWidth: 0 } } } },
    };
  }),
  XA = { simple: GA, striped: KA, unstyled: {} },
  YA = {
    sm: os({
      th: { px: '4', py: '1', lineHeight: '4', fontSize: 'xs' },
      td: { px: '4', py: '2', fontSize: 'sm', lineHeight: '4' },
      caption: { px: '4', py: '2', fontSize: 'xs' },
    }),
    md: os({
      th: { px: '6', py: '3', lineHeight: '4', fontSize: 'xs' },
      td: { px: '6', py: '4', lineHeight: '5' },
      caption: { px: '6', py: '2', fontSize: 'sm' },
    }),
    lg: os({
      th: { px: '8', py: '4', lineHeight: '5', fontSize: 'sm' },
      td: { px: '8', py: '5', lineHeight: '6' },
      caption: { px: '6', py: '2', fontSize: 'md' },
    }),
  },
  JA = HA({
    baseStyle: QA,
    variants: XA,
    sizes: YA,
    defaultProps: { variant: 'simple', size: 'md', colorScheme: 'gray' },
  }),
  wn = De('tabs-color'),
  lr = De('tabs-bg'),
  Xl = De('tabs-border-color'),
  { defineMultiStyleConfig: ZA, definePartsStyle: Ar } = vt(aA.keys),
  e2 = (e) => {
    const { orientation: t } = e;
    return { display: t === 'vertical' ? 'flex' : 'block' };
  },
  t2 = (e) => {
    const { isFitted: t } = e;
    return {
      flex: t ? 1 : void 0,
      transitionProperty: 'common',
      transitionDuration: 'normal',
      _focusVisible: { zIndex: 1, boxShadow: 'outline' },
      _disabled: { cursor: 'not-allowed', opacity: 0.4 },
    };
  },
  n2 = (e) => {
    const { align: t = 'start', orientation: r } = e;
    return {
      justifyContent: {
        end: 'flex-end',
        center: 'center',
        start: 'flex-start',
      }[t],
      flexDirection: r === 'vertical' ? 'column' : 'row',
    };
  },
  r2 = { p: 4 },
  i2 = Ar((e) => ({ root: e2(e), tab: t2(e), tablist: n2(e), tabpanel: r2 })),
  o2 = {
    sm: Ar({ tab: { py: 1, px: 4, fontSize: 'sm' } }),
    md: Ar({ tab: { fontSize: 'md', py: 2, px: 4 } }),
    lg: Ar({ tab: { fontSize: 'lg', py: 3, px: 4 } }),
  },
  s2 = Ar((e) => {
    const { colorScheme: t, orientation: r } = e,
      n = r === 'vertical',
      i = n ? 'borderStart' : 'borderBottom',
      o = n ? 'marginStart' : 'marginBottom';
    return {
      tablist: { [i]: '2px solid', borderColor: 'inherit' },
      tab: {
        [i]: '2px solid',
        borderColor: 'transparent',
        [o]: '-2px',
        _selected: {
          [wn.variable]: `colors.${t}.600`,
          _dark: { [wn.variable]: `colors.${t}.300` },
          borderColor: 'currentColor',
        },
        _active: {
          [lr.variable]: 'colors.gray.200',
          _dark: { [lr.variable]: 'colors.whiteAlpha.300' },
        },
        _disabled: { _active: { bg: 'none' } },
        color: wn.reference,
        bg: lr.reference,
      },
    };
  }),
  a2 = Ar((e) => {
    const { colorScheme: t } = e;
    return {
      tab: {
        borderTopRadius: 'md',
        border: '1px solid',
        borderColor: 'transparent',
        mb: '-1px',
        [Xl.variable]: 'transparent',
        _selected: {
          [wn.variable]: `colors.${t}.600`,
          [Xl.variable]: 'colors.white',
          _dark: {
            [wn.variable]: `colors.${t}.300`,
            [Xl.variable]: 'colors.gray.800',
          },
          borderColor: 'inherit',
          borderBottomColor: Xl.reference,
        },
        color: wn.reference,
      },
      tablist: {
        mb: '-1px',
        borderBottom: '1px solid',
        borderColor: 'inherit',
      },
    };
  }),
  l2 = Ar((e) => {
    const { colorScheme: t } = e;
    return {
      tab: {
        border: '1px solid',
        borderColor: 'inherit',
        [lr.variable]: 'colors.gray.50',
        _dark: { [lr.variable]: 'colors.whiteAlpha.50' },
        mb: '-1px',
        _notLast: { marginEnd: '-1px' },
        _selected: {
          [lr.variable]: 'colors.white',
          [wn.variable]: `colors.${t}.600`,
          _dark: {
            [lr.variable]: 'colors.gray.800',
            [wn.variable]: `colors.${t}.300`,
          },
          borderColor: 'inherit',
          borderTopColor: 'currentColor',
          borderBottomColor: 'transparent',
        },
        color: wn.reference,
        bg: lr.reference,
      },
      tablist: {
        mb: '-1px',
        borderBottom: '1px solid',
        borderColor: 'inherit',
      },
    };
  }),
  u2 = Ar((e) => {
    const { colorScheme: t, theme: r } = e;
    return {
      tab: {
        borderRadius: 'full',
        fontWeight: 'semibold',
        color: 'gray.600',
        _selected: { color: hn(r, `${t}.700`), bg: hn(r, `${t}.100`) },
      },
    };
  }),
  c2 = Ar((e) => {
    const { colorScheme: t } = e;
    return {
      tab: {
        borderRadius: 'full',
        fontWeight: 'semibold',
        [wn.variable]: 'colors.gray.600',
        _dark: { [wn.variable]: 'inherit' },
        _selected: {
          [wn.variable]: 'colors.white',
          [lr.variable]: `colors.${t}.600`,
          _dark: {
            [wn.variable]: 'colors.gray.800',
            [lr.variable]: `colors.${t}.300`,
          },
        },
        color: wn.reference,
        bg: lr.reference,
      },
    };
  }),
  f2 = Ar({}),
  d2 = {
    line: s2,
    enclosed: a2,
    'enclosed-colored': l2,
    'soft-rounded': u2,
    'solid-rounded': c2,
    unstyled: f2,
  },
  p2 = ZA({
    baseStyle: i2,
    sizes: o2,
    variants: d2,
    defaultProps: { size: 'md', variant: 'line', colorScheme: 'blue' },
  }),
  Mt = DT('badge', ['bg', 'color', 'shadow']),
  h2 = {
    px: 1,
    textTransform: 'uppercase',
    fontSize: 'xs',
    borderRadius: 'sm',
    fontWeight: 'bold',
    bg: Mt.bg.reference,
    color: Mt.color.reference,
    boxShadow: Mt.shadow.reference,
  },
  m2 = (e) => {
    const { colorScheme: t, theme: r } = e,
      n = _s(`${t}.500`, 0.6)(r);
    return {
      [Mt.bg.variable]: `colors.${t}.500`,
      [Mt.color.variable]: 'colors.white',
      _dark: {
        [Mt.bg.variable]: n,
        [Mt.color.variable]: 'colors.whiteAlpha.800',
      },
    };
  },
  g2 = (e) => {
    const { colorScheme: t, theme: r } = e,
      n = _s(`${t}.200`, 0.16)(r);
    return {
      [Mt.bg.variable]: `colors.${t}.100`,
      [Mt.color.variable]: `colors.${t}.800`,
      _dark: { [Mt.bg.variable]: n, [Mt.color.variable]: `colors.${t}.200` },
    };
  },
  _2 = (e) => {
    const { colorScheme: t, theme: r } = e,
      n = _s(`${t}.200`, 0.8)(r);
    return {
      [Mt.color.variable]: `colors.${t}.500`,
      _dark: { [Mt.color.variable]: n },
      [Mt.shadow.variable]: `inset 0 0 0px 1px ${Mt.color.reference}`,
    };
  },
  y2 = { solid: m2, subtle: g2, outline: _2 },
  ga = {
    baseStyle: h2,
    variants: y2,
    defaultProps: { variant: 'subtle', colorScheme: 'gray' },
  },
  { defineMultiStyleConfig: v2, definePartsStyle: oo } = vt(lA.keys),
  ly = De('tag-bg'),
  uy = De('tag-color'),
  Pd = De('tag-shadow'),
  xu = De('tag-min-height'),
  ku = De('tag-min-width'),
  Eu = De('tag-font-size'),
  Tu = De('tag-padding-inline'),
  b2 = {
    fontWeight: 'medium',
    lineHeight: 1.2,
    outline: 0,
    [uy.variable]: Mt.color.reference,
    [ly.variable]: Mt.bg.reference,
    [Pd.variable]: Mt.shadow.reference,
    color: uy.reference,
    bg: ly.reference,
    boxShadow: Pd.reference,
    borderRadius: 'md',
    minH: xu.reference,
    minW: ku.reference,
    fontSize: Eu.reference,
    px: Tu.reference,
    _focusVisible: { [Pd.variable]: 'shadows.outline' },
  },
  w2 = { lineHeight: 1.2, overflow: 'visible' },
  S2 = {
    fontSize: 'lg',
    w: '5',
    h: '5',
    transitionProperty: 'common',
    transitionDuration: 'normal',
    borderRadius: 'full',
    marginStart: '1.5',
    marginEnd: '-1',
    opacity: 0.5,
    _disabled: { opacity: 0.4 },
    _focusVisible: { boxShadow: 'outline', bg: 'rgba(0, 0, 0, 0.14)' },
    _hover: { opacity: 0.8 },
    _active: { opacity: 1 },
  },
  x2 = oo({ container: b2, label: w2, closeButton: S2 }),
  k2 = {
    sm: oo({
      container: {
        [xu.variable]: 'sizes.5',
        [ku.variable]: 'sizes.5',
        [Eu.variable]: 'fontSizes.xs',
        [Tu.variable]: 'space.2',
      },
      closeButton: { marginEnd: '-2px', marginStart: '0.35rem' },
    }),
    md: oo({
      container: {
        [xu.variable]: 'sizes.6',
        [ku.variable]: 'sizes.6',
        [Eu.variable]: 'fontSizes.sm',
        [Tu.variable]: 'space.2',
      },
    }),
    lg: oo({
      container: {
        [xu.variable]: 'sizes.8',
        [ku.variable]: 'sizes.8',
        [Eu.variable]: 'fontSizes.md',
        [Tu.variable]: 'space.3',
      },
    }),
  },
  E2 = {
    subtle: oo((e) => {
      var t;
      return { container: (t = ga.variants) == null ? void 0 : t.subtle(e) };
    }),
    solid: oo((e) => {
      var t;
      return { container: (t = ga.variants) == null ? void 0 : t.solid(e) };
    }),
    outline: oo((e) => {
      var t;
      return { container: (t = ga.variants) == null ? void 0 : t.outline(e) };
    }),
  },
  T2 = v2({
    variants: E2,
    baseStyle: x2,
    sizes: k2,
    defaultProps: { size: 'md', variant: 'subtle', colorScheme: 'gray' },
  }),
  { definePartsStyle: jr, defineMultiStyleConfig: C2 } = vt(GC.keys),
  Bo = De('input-height'),
  Vo = De('input-font-size'),
  Wo = De('input-padding'),
  Uo = De('input-border-radius'),
  A2 = jr({
    addon: {
      height: Bo.reference,
      fontSize: Vo.reference,
      px: Wo.reference,
      borderRadius: Uo.reference,
    },
    field: {
      width: '100%',
      height: Bo.reference,
      fontSize: Vo.reference,
      px: Wo.reference,
      borderRadius: Uo.reference,
      minWidth: 0,
      outline: 0,
      position: 'relative',
      appearance: 'none',
      transitionProperty: 'common',
      transitionDuration: 'normal',
      _disabled: { opacity: 0.4, cursor: 'not-allowed' },
    },
  }),
  di = {
    lg: {
      [Vo.variable]: 'fontSizes.lg',
      [Wo.variable]: 'space.4',
      [Uo.variable]: 'radii.md',
      [Bo.variable]: 'sizes.12',
    },
    md: {
      [Vo.variable]: 'fontSizes.md',
      [Wo.variable]: 'space.4',
      [Uo.variable]: 'radii.md',
      [Bo.variable]: 'sizes.10',
    },
    sm: {
      [Vo.variable]: 'fontSizes.sm',
      [Wo.variable]: 'space.3',
      [Uo.variable]: 'radii.sm',
      [Bo.variable]: 'sizes.8',
    },
    xs: {
      [Vo.variable]: 'fontSizes.xs',
      [Wo.variable]: 'space.2',
      [Uo.variable]: 'radii.sm',
      [Bo.variable]: 'sizes.6',
    },
  },
  P2 = {
    lg: jr({ field: di.lg, group: di.lg }),
    md: jr({ field: di.md, group: di.md }),
    sm: jr({ field: di.sm, group: di.sm }),
    xs: jr({ field: di.xs, group: di.xs }),
  };
function Nm(e) {
  const { focusBorderColor: t, errorBorderColor: r } = e;
  return {
    focusBorderColor: t || Me('blue.500', 'blue.300')(e),
    errorBorderColor: r || Me('red.500', 'red.300')(e),
  };
}
var q2 = jr((e) => {
    const { theme: t } = e,
      { focusBorderColor: r, errorBorderColor: n } = Nm(e);
    return {
      field: {
        border: '1px solid',
        borderColor: 'inherit',
        bg: 'inherit',
        _hover: { borderColor: Me('gray.300', 'whiteAlpha.400')(e) },
        _readOnly: { boxShadow: 'none !important', userSelect: 'all' },
        _invalid: { borderColor: hn(t, n), boxShadow: `0 0 0 1px ${hn(t, n)}` },
        _focusVisible: {
          zIndex: 1,
          borderColor: hn(t, r),
          boxShadow: `0 0 0 1px ${hn(t, r)}`,
        },
      },
      addon: {
        border: '1px solid',
        borderColor: Me('inherit', 'whiteAlpha.50')(e),
        bg: Me('gray.100', 'whiteAlpha.300')(e),
      },
    };
  }),
  I2 = jr((e) => {
    const { theme: t } = e,
      { focusBorderColor: r, errorBorderColor: n } = Nm(e);
    return {
      field: {
        border: '2px solid',
        borderColor: 'transparent',
        bg: Me('gray.100', 'whiteAlpha.50')(e),
        _hover: { bg: Me('gray.200', 'whiteAlpha.100')(e) },
        _readOnly: { boxShadow: 'none !important', userSelect: 'all' },
        _invalid: { borderColor: hn(t, n) },
        _focusVisible: { bg: 'transparent', borderColor: hn(t, r) },
      },
      addon: {
        border: '2px solid',
        borderColor: 'transparent',
        bg: Me('gray.100', 'whiteAlpha.50')(e),
      },
    };
  }),
  F2 = jr((e) => {
    const { theme: t } = e,
      { focusBorderColor: r, errorBorderColor: n } = Nm(e);
    return {
      field: {
        borderBottom: '1px solid',
        borderColor: 'inherit',
        borderRadius: '0',
        px: '0',
        bg: 'transparent',
        _readOnly: { boxShadow: 'none !important', userSelect: 'all' },
        _invalid: {
          borderColor: hn(t, n),
          boxShadow: `0px 1px 0px 0px ${hn(t, n)}`,
        },
        _focusVisible: {
          borderColor: hn(t, r),
          boxShadow: `0px 1px 0px 0px ${hn(t, r)}`,
        },
      },
      addon: {
        borderBottom: '2px solid',
        borderColor: 'inherit',
        borderRadius: '0',
        px: '0',
        bg: 'transparent',
      },
    };
  }),
  R2 = jr({
    field: { bg: 'transparent', px: '0', height: 'auto' },
    addon: { bg: 'transparent', px: '0', height: 'auto' },
  }),
  O2 = { outline: q2, filled: I2, flushed: F2, unstyled: R2 },
  ot = C2({
    baseStyle: A2,
    sizes: P2,
    variants: O2,
    defaultProps: { size: 'md', variant: 'outline' },
  }),
  cy,
  L2 = {
    ...((cy = ot.baseStyle) == null ? void 0 : cy.field),
    paddingY: '2',
    minHeight: '20',
    lineHeight: 'short',
    verticalAlign: 'top',
  },
  fy,
  dy,
  M2 = {
    outline: (e) => {
      var t, r;
      return (r = (t = ot.variants) == null ? void 0 : t.outline(e).field) !=
        null
        ? r
        : {};
    },
    flushed: (e) => {
      var t, r;
      return (r = (t = ot.variants) == null ? void 0 : t.flushed(e).field) !=
        null
        ? r
        : {};
    },
    filled: (e) => {
      var t, r;
      return (r = (t = ot.variants) == null ? void 0 : t.filled(e).field) !=
        null
        ? r
        : {};
    },
    unstyled:
      (dy = (fy = ot.variants) == null ? void 0 : fy.unstyled.field) != null
        ? dy
        : {},
  },
  py,
  hy,
  my,
  gy,
  _y,
  yy,
  vy,
  by,
  D2 = {
    xs: (hy = (py = ot.sizes) == null ? void 0 : py.xs.field) != null ? hy : {},
    sm: (gy = (my = ot.sizes) == null ? void 0 : my.sm.field) != null ? gy : {},
    md: (yy = (_y = ot.sizes) == null ? void 0 : _y.md.field) != null ? yy : {},
    lg: (by = (vy = ot.sizes) == null ? void 0 : vy.lg.field) != null ? by : {},
  },
  z2 = {
    baseStyle: L2,
    sizes: D2,
    variants: M2,
    defaultProps: { size: 'md', variant: 'outline' },
  },
  Yl = Bt('tooltip-bg'),
  qd = Bt('tooltip-fg'),
  $2 = Bt('popper-arrow-bg'),
  N2 = {
    bg: Yl.reference,
    color: qd.reference,
    [Yl.variable]: 'colors.gray.700',
    [qd.variable]: 'colors.whiteAlpha.900',
    _dark: {
      [Yl.variable]: 'colors.gray.300',
      [qd.variable]: 'colors.gray.900',
    },
    [$2.variable]: Yl.reference,
    px: '2',
    py: '0.5',
    borderRadius: 'sm',
    fontWeight: 'medium',
    fontSize: 'sm',
    boxShadow: 'md',
    maxW: 'xs',
    zIndex: 'tooltip',
  },
  j2 = { baseStyle: N2 },
  { defineMultiStyleConfig: B2, definePartsStyle: na } = vt(eA.keys),
  V2 = (e) => {
    const { colorScheme: t, theme: r, isIndeterminate: n, hasStripe: i } = e,
      o = Me(ry(), ry('1rem', 'rgba(0,0,0,0.1)'))(e),
      s = Me(`${t}.500`, `${t}.200`)(e),
      l = `linear-gradient(
    to right,
    transparent 0%,
    ${hn(r, s)} 50%,
    transparent 100%
  )`;
    return { ...(!n && i && o), ...(n ? { bgImage: l } : { bgColor: s }) };
  },
  W2 = {
    lineHeight: '1',
    fontSize: '0.25em',
    fontWeight: 'bold',
    color: 'white',
  },
  U2 = (e) => ({ bg: Me('gray.100', 'whiteAlpha.300')(e) }),
  H2 = (e) => ({
    transitionProperty: 'common',
    transitionDuration: 'slow',
    ...V2(e),
  }),
  Q2 = na((e) => ({ label: W2, filledTrack: H2(e), track: U2(e) })),
  G2 = {
    xs: na({ track: { h: '1' } }),
    sm: na({ track: { h: '2' } }),
    md: na({ track: { h: '3' } }),
    lg: na({ track: { h: '4' } }),
  },
  K2 = B2({
    sizes: G2,
    baseStyle: Q2,
    defaultProps: { size: 'md', colorScheme: 'blue' },
  }),
  X2 = (e) => typeof e == 'function';
function gn(e, ...t) {
  return X2(e) ? e(...t) : e;
}
var { definePartsStyle: Cu, defineMultiStyleConfig: Y2 } = vt(VC.keys),
  _a = De('checkbox-size'),
  J2 = (e) => {
    const { colorScheme: t } = e;
    return {
      w: _a.reference,
      h: _a.reference,
      transitionProperty: 'box-shadow',
      transitionDuration: 'normal',
      border: '2px solid',
      borderRadius: 'sm',
      borderColor: 'inherit',
      color: 'white',
      _checked: {
        bg: Me(`${t}.500`, `${t}.200`)(e),
        borderColor: Me(`${t}.500`, `${t}.200`)(e),
        color: Me('white', 'gray.900')(e),
        _hover: {
          bg: Me(`${t}.600`, `${t}.300`)(e),
          borderColor: Me(`${t}.600`, `${t}.300`)(e),
        },
        _disabled: {
          borderColor: Me('gray.200', 'transparent')(e),
          bg: Me('gray.200', 'whiteAlpha.300')(e),
          color: Me('gray.500', 'whiteAlpha.500')(e),
        },
      },
      _indeterminate: {
        bg: Me(`${t}.500`, `${t}.200`)(e),
        borderColor: Me(`${t}.500`, `${t}.200`)(e),
        color: Me('white', 'gray.900')(e),
      },
      _disabled: {
        bg: Me('gray.100', 'whiteAlpha.100')(e),
        borderColor: Me('gray.100', 'transparent')(e),
      },
      _focusVisible: { boxShadow: 'outline' },
      _invalid: { borderColor: Me('red.500', 'red.300')(e) },
    };
  },
  Z2 = { _disabled: { cursor: 'not-allowed' } },
  eP = { userSelect: 'none', _disabled: { opacity: 0.4 } },
  tP = { transitionProperty: 'transform', transitionDuration: 'normal' },
  nP = Cu((e) => ({ icon: tP, container: Z2, control: gn(J2, e), label: eP })),
  rP = {
    sm: Cu({
      control: { [_a.variable]: 'sizes.3' },
      label: { fontSize: 'sm' },
      icon: { fontSize: '3xs' },
    }),
    md: Cu({
      control: { [_a.variable]: 'sizes.4' },
      label: { fontSize: 'md' },
      icon: { fontSize: '2xs' },
    }),
    lg: Cu({
      control: { [_a.variable]: 'sizes.5' },
      label: { fontSize: 'lg' },
      icon: { fontSize: '2xs' },
    }),
  },
  fc = Y2({
    baseStyle: nP,
    sizes: rP,
    defaultProps: { size: 'md', colorScheme: 'blue' },
  }),
  { defineMultiStyleConfig: iP, definePartsStyle: Au } = vt(tA.keys),
  oP = (e) => {
    var t;
    const r = (t = gn(fc.baseStyle, e)) == null ? void 0 : t.control;
    return {
      ...r,
      borderRadius: 'full',
      _checked: {
        ...(r == null ? void 0 : r._checked),
        _before: {
          content: '""',
          display: 'inline-block',
          pos: 'relative',
          w: '50%',
          h: '50%',
          borderRadius: '50%',
          bg: 'currentColor',
        },
      },
    };
  },
  sP = Au((e) => {
    var t, r, n, i;
    return {
      label: (r = (t = fc).baseStyle) == null ? void 0 : r.call(t, e).label,
      container:
        (i = (n = fc).baseStyle) == null ? void 0 : i.call(n, e).container,
      control: oP(e),
    };
  }),
  aP = {
    md: Au({ control: { w: '4', h: '4' }, label: { fontSize: 'md' } }),
    lg: Au({ control: { w: '5', h: '5' }, label: { fontSize: 'lg' } }),
    sm: Au({ control: { width: '3', height: '3' }, label: { fontSize: 'sm' } }),
  },
  lP = iP({
    baseStyle: sP,
    sizes: aP,
    defaultProps: { size: 'md', colorScheme: 'blue' },
  }),
  { defineMultiStyleConfig: uP, definePartsStyle: cP } = vt(nA.keys),
  Jl = De('select-bg'),
  wy,
  fP = {
    ...((wy = ot.baseStyle) == null ? void 0 : wy.field),
    appearance: 'none',
    paddingBottom: '1px',
    lineHeight: 'normal',
    bg: Jl.reference,
    [Jl.variable]: 'colors.white',
    _dark: { [Jl.variable]: 'colors.gray.700' },
    '> option, > optgroup': { bg: Jl.reference },
  },
  dP = {
    width: '6',
    height: '100%',
    insetEnd: '2',
    position: 'relative',
    color: 'currentColor',
    fontSize: 'xl',
    _disabled: { opacity: 0.5 },
  },
  pP = cP({ field: fP, icon: dP }),
  Zl = { paddingInlineEnd: '8' },
  Sy,
  xy,
  ky,
  Ey,
  Ty,
  Cy,
  Ay,
  Py,
  hP = {
    lg: {
      ...((Sy = ot.sizes) == null ? void 0 : Sy.lg),
      field: { ...((xy = ot.sizes) == null ? void 0 : xy.lg.field), ...Zl },
    },
    md: {
      ...((ky = ot.sizes) == null ? void 0 : ky.md),
      field: { ...((Ey = ot.sizes) == null ? void 0 : Ey.md.field), ...Zl },
    },
    sm: {
      ...((Ty = ot.sizes) == null ? void 0 : Ty.sm),
      field: { ...((Cy = ot.sizes) == null ? void 0 : Cy.sm.field), ...Zl },
    },
    xs: {
      ...((Ay = ot.sizes) == null ? void 0 : Ay.xs),
      field: { ...((Py = ot.sizes) == null ? void 0 : Py.xs.field), ...Zl },
      icon: { insetEnd: '1' },
    },
  },
  mP = uP({
    baseStyle: pP,
    sizes: hP,
    variants: ot.variants,
    defaultProps: ot.defaultProps,
  }),
  Id = De('skeleton-start-color'),
  Fd = De('skeleton-end-color'),
  gP = {
    [Id.variable]: 'colors.gray.100',
    [Fd.variable]: 'colors.gray.400',
    _dark: {
      [Id.variable]: 'colors.gray.800',
      [Fd.variable]: 'colors.gray.600',
    },
    background: Id.reference,
    borderColor: Fd.reference,
    opacity: 0.7,
    borderRadius: 'sm',
  },
  _P = { baseStyle: gP },
  Rd = De('skip-link-bg'),
  yP = {
    borderRadius: 'md',
    fontWeight: 'semibold',
    _focusVisible: {
      boxShadow: 'outline',
      padding: '4',
      position: 'fixed',
      top: '6',
      insetStart: '6',
      [Rd.variable]: 'colors.white',
      _dark: { [Rd.variable]: 'colors.gray.700' },
      bg: Rd.reference,
    },
  },
  vP = { baseStyle: yP },
  { defineMultiStyleConfig: bP, definePartsStyle: tf } = vt(rA.keys),
  Ga = De('slider-thumb-size'),
  Ka = De('slider-track-size'),
  vi = De('slider-bg'),
  wP = (e) => {
    const { orientation: t } = e;
    return {
      display: 'inline-block',
      position: 'relative',
      cursor: 'pointer',
      _disabled: { opacity: 0.6, cursor: 'default', pointerEvents: 'none' },
      ...$m({
        orientation: t,
        vertical: { h: '100%' },
        horizontal: { w: '100%' },
      }),
    };
  },
  SP = (e) => ({
    ...$m({
      orientation: e.orientation,
      horizontal: { h: Ka.reference },
      vertical: { w: Ka.reference },
    }),
    overflow: 'hidden',
    borderRadius: 'sm',
    [vi.variable]: 'colors.gray.200',
    _dark: { [vi.variable]: 'colors.whiteAlpha.200' },
    _disabled: {
      [vi.variable]: 'colors.gray.300',
      _dark: { [vi.variable]: 'colors.whiteAlpha.300' },
    },
    bg: vi.reference,
  }),
  xP = (e) => {
    const { orientation: t } = e;
    return {
      ...$m({
        orientation: t,
        vertical: {
          left: '50%',
          transform: 'translateX(-50%)',
          _active: { transform: 'translateX(-50%) scale(1.15)' },
        },
        horizontal: {
          top: '50%',
          transform: 'translateY(-50%)',
          _active: { transform: 'translateY(-50%) scale(1.15)' },
        },
      }),
      w: Ga.reference,
      h: Ga.reference,
      display: 'flex',
      alignItems: 'center',
      justifyContent: 'center',
      position: 'absolute',
      outline: 0,
      zIndex: 1,
      borderRadius: 'full',
      bg: 'white',
      boxShadow: 'base',
      border: '1px solid',
      borderColor: 'transparent',
      transitionProperty: 'transform',
      transitionDuration: 'normal',
      _focusVisible: { boxShadow: 'outline' },
      _disabled: { bg: 'gray.300' },
    };
  },
  kP = (e) => {
    const { colorScheme: t } = e;
    return {
      width: 'inherit',
      height: 'inherit',
      [vi.variable]: `colors.${t}.500`,
      _dark: { [vi.variable]: `colors.${t}.200` },
      bg: vi.reference,
    };
  },
  EP = tf((e) => ({
    container: wP(e),
    track: SP(e),
    thumb: xP(e),
    filledTrack: kP(e),
  })),
  TP = tf({
    container: { [Ga.variable]: 'sizes.4', [Ka.variable]: 'sizes.1' },
  }),
  CP = tf({
    container: { [Ga.variable]: 'sizes.3.5', [Ka.variable]: 'sizes.1' },
  }),
  AP = tf({
    container: { [Ga.variable]: 'sizes.2.5', [Ka.variable]: 'sizes.0.5' },
  }),
  PP = { lg: TP, md: CP, sm: AP },
  qP = bP({
    baseStyle: EP,
    sizes: PP,
    defaultProps: { size: 'md', colorScheme: 'blue' },
  }),
  Ki = Bt('spinner-size'),
  IP = { width: [Ki.reference], height: [Ki.reference] },
  FP = {
    xs: { [Ki.variable]: 'sizes.3' },
    sm: { [Ki.variable]: 'sizes.4' },
    md: { [Ki.variable]: 'sizes.6' },
    lg: { [Ki.variable]: 'sizes.8' },
    xl: { [Ki.variable]: 'sizes.12' },
  },
  RP = { baseStyle: IP, sizes: FP, defaultProps: { size: 'md' } },
  { defineMultiStyleConfig: OP, definePartsStyle: ew } = vt(iA.keys),
  LP = { fontWeight: 'medium' },
  MP = { opacity: 0.8, marginBottom: '2' },
  DP = { verticalAlign: 'baseline', fontWeight: 'semibold' },
  zP = { marginEnd: 1, w: '3.5', h: '3.5', verticalAlign: 'middle' },
  $P = ew({ container: {}, label: LP, helpText: MP, number: DP, icon: zP }),
  NP = {
    md: ew({
      label: { fontSize: 'sm' },
      helpText: { fontSize: 'sm' },
      number: { fontSize: '2xl' },
    }),
  },
  jP = OP({ baseStyle: $P, sizes: NP, defaultProps: { size: 'md' } }),
  Od = De('kbd-bg'),
  BP = {
    [Od.variable]: 'colors.gray.100',
    _dark: { [Od.variable]: 'colors.whiteAlpha.100' },
    bg: Od.reference,
    borderRadius: 'md',
    borderWidth: '1px',
    borderBottomWidth: '3px',
    fontSize: '0.8em',
    fontWeight: 'bold',
    lineHeight: 'normal',
    px: '0.4em',
    whiteSpace: 'nowrap',
  },
  VP = { baseStyle: BP },
  WP = {
    transitionProperty: 'common',
    transitionDuration: 'fast',
    transitionTimingFunction: 'ease-out',
    cursor: 'pointer',
    textDecoration: 'none',
    outline: 'none',
    color: 'inherit',
    _hover: { textDecoration: 'underline' },
    _focusVisible: { boxShadow: 'outline' },
  },
  UP = { baseStyle: WP },
  { defineMultiStyleConfig: HP, definePartsStyle: QP } = vt(KC.keys),
  GP = { marginEnd: '2', display: 'inline', verticalAlign: 'text-bottom' },
  KP = QP({ icon: GP }),
  XP = HP({ baseStyle: KP }),
  { defineMultiStyleConfig: YP, definePartsStyle: JP } = vt(XC.keys),
  vr = De('menu-bg'),
  Ld = De('menu-shadow'),
  ZP = {
    [vr.variable]: '#fff',
    [Ld.variable]: 'shadows.sm',
    _dark: {
      [vr.variable]: 'colors.gray.700',
      [Ld.variable]: 'shadows.dark-lg',
    },
    color: 'inherit',
    minW: '3xs',
    py: '2',
    zIndex: 1,
    borderRadius: 'md',
    borderWidth: '1px',
    bg: vr.reference,
    boxShadow: Ld.reference,
  },
  eq = {
    py: '1.5',
    px: '3',
    transitionProperty: 'background',
    transitionDuration: 'ultra-fast',
    transitionTimingFunction: 'ease-in',
    _focus: {
      [vr.variable]: 'colors.gray.100',
      _dark: { [vr.variable]: 'colors.whiteAlpha.100' },
    },
    _active: {
      [vr.variable]: 'colors.gray.200',
      _dark: { [vr.variable]: 'colors.whiteAlpha.200' },
    },
    _expanded: {
      [vr.variable]: 'colors.gray.100',
      _dark: { [vr.variable]: 'colors.whiteAlpha.100' },
    },
    _disabled: { opacity: 0.4, cursor: 'not-allowed' },
    bg: vr.reference,
  },
  tq = { mx: 4, my: 2, fontWeight: 'semibold', fontSize: 'sm' },
  nq = {
    display: 'inline-flex',
    alignItems: 'center',
    justifyContent: 'center',
    flexShrink: 0,
  },
  rq = { opacity: 0.6 },
  iq = {
    border: 0,
    borderBottom: '1px solid',
    borderColor: 'inherit',
    my: '2',
    opacity: 0.6,
  },
  oq = { transitionProperty: 'common', transitionDuration: 'normal' },
  sq = JP({
    button: oq,
    list: ZP,
    item: eq,
    groupTitle: tq,
    icon: nq,
    command: rq,
    divider: iq,
  }),
  aq = YP({ baseStyle: sq }),
  { defineMultiStyleConfig: lq, definePartsStyle: ah } = vt(YC.keys),
  Md = De('modal-bg'),
  Dd = De('modal-shadow'),
  uq = { bg: 'blackAlpha.600', zIndex: 'modal' },
  cq = (e) => {
    const { isCentered: t, scrollBehavior: r } = e;
    return {
      display: 'flex',
      zIndex: 'modal',
      justifyContent: 'center',
      alignItems: t ? 'center' : 'flex-start',
      overflow: r === 'inside' ? 'hidden' : 'auto',
      overscrollBehaviorY: 'none',
    };
  },
  fq = (e) => {
    const { isCentered: t, scrollBehavior: r } = e;
    return {
      borderRadius: 'md',
      color: 'inherit',
      my: t ? 'auto' : '16',
      mx: t ? 'auto' : void 0,
      zIndex: 'modal',
      maxH: r === 'inside' ? 'calc(100% - 7.5rem)' : void 0,
      [Md.variable]: 'colors.white',
      [Dd.variable]: 'shadows.lg',
      _dark: {
        [Md.variable]: 'colors.gray.700',
        [Dd.variable]: 'shadows.dark-lg',
      },
      bg: Md.reference,
      boxShadow: Dd.reference,
    };
  },
  dq = { px: '6', py: '4', fontSize: 'xl', fontWeight: 'semibold' },
  pq = { position: 'absolute', top: '2', insetEnd: '3' },
  hq = (e) => {
    const { scrollBehavior: t } = e;
    return {
      px: '6',
      py: '2',
      flex: '1',
      overflow: t === 'inside' ? 'auto' : void 0,
    };
  },
  mq = { px: '6', py: '4' },
  gq = ah((e) => ({
    overlay: uq,
    dialogContainer: gn(cq, e),
    dialog: gn(fq, e),
    header: dq,
    closeButton: pq,
    body: gn(hq, e),
    footer: mq,
  }));
function ir(e) {
  return ah(
    e === 'full'
      ? {
          dialog: { maxW: '100vw', minH: '$100vh', my: '0', borderRadius: '0' },
        }
      : { dialog: { maxW: e } },
  );
}
var _q = {
    xs: ir('xs'),
    sm: ir('sm'),
    md: ir('md'),
    lg: ir('lg'),
    xl: ir('xl'),
    '2xl': ir('2xl'),
    '3xl': ir('3xl'),
    '4xl': ir('4xl'),
    '5xl': ir('5xl'),
    '6xl': ir('6xl'),
    full: ir('full'),
  },
  yq = lq({ baseStyle: gq, sizes: _q, defaultProps: { size: 'md' } }),
  { defineMultiStyleConfig: vq, definePartsStyle: tw } = vt(JC.keys),
  jm = Bt('number-input-stepper-width'),
  nw = Bt('number-input-input-padding'),
  bq = zr(jm).add('0.5rem').toString(),
  zd = Bt('number-input-bg'),
  $d = Bt('number-input-color'),
  Nd = Bt('number-input-border-color'),
  wq = { [jm.variable]: 'sizes.6', [nw.variable]: bq },
  Sq = (e) => {
    var t, r;
    return (r = (t = gn(ot.baseStyle, e)) == null ? void 0 : t.field) != null
      ? r
      : {};
  },
  xq = { width: jm.reference },
  kq = {
    borderStart: '1px solid',
    borderStartColor: Nd.reference,
    color: $d.reference,
    bg: zd.reference,
    [$d.variable]: 'colors.chakra-body-text',
    [Nd.variable]: 'colors.chakra-border-color',
    _dark: {
      [$d.variable]: 'colors.whiteAlpha.800',
      [Nd.variable]: 'colors.whiteAlpha.300',
    },
    _active: {
      [zd.variable]: 'colors.gray.200',
      _dark: { [zd.variable]: 'colors.whiteAlpha.300' },
    },
    _disabled: { opacity: 0.4, cursor: 'not-allowed' },
  },
  Eq = tw((e) => {
    var t;
    return {
      root: wq,
      field: (t = gn(Sq, e)) != null ? t : {},
      stepperGroup: xq,
      stepper: kq,
    };
  });
function eu(e) {
  var t, r, n;
  const i = (t = ot.sizes) == null ? void 0 : t[e],
    o = { lg: 'md', md: 'md', sm: 'sm', xs: 'sm' },
    s = (n = (r = i.field) == null ? void 0 : r.fontSize) != null ? n : 'md',
    l = K1.fontSizes[s];
  return tw({
    field: { ...i.field, paddingInlineEnd: nw.reference, verticalAlign: 'top' },
    stepper: {
      fontSize: zr(l).multiply(0.75).toString(),
      _first: { borderTopEndRadius: o[e] },
      _last: { borderBottomEndRadius: o[e], mt: '-1px', borderTopWidth: 1 },
    },
  });
}
var Tq = { xs: eu('xs'), sm: eu('sm'), md: eu('md'), lg: eu('lg') },
  Cq = vq({
    baseStyle: Eq,
    sizes: Tq,
    variants: ot.variants,
    defaultProps: ot.defaultProps,
  }),
  qy,
  Aq = {
    ...((qy = ot.baseStyle) == null ? void 0 : qy.field),
    textAlign: 'center',
  },
  Pq = {
    lg: { fontSize: 'lg', w: 12, h: 12, borderRadius: 'md' },
    md: { fontSize: 'md', w: 10, h: 10, borderRadius: 'md' },
    sm: { fontSize: 'sm', w: 8, h: 8, borderRadius: 'sm' },
    xs: { fontSize: 'xs', w: 6, h: 6, borderRadius: 'sm' },
  },
  Iy,
  Fy,
  qq = {
    outline: (e) => {
      var t, r, n;
      return (n =
        (r = gn((t = ot.variants) == null ? void 0 : t.outline, e)) == null
          ? void 0
          : r.field) != null
        ? n
        : {};
    },
    flushed: (e) => {
      var t, r, n;
      return (n =
        (r = gn((t = ot.variants) == null ? void 0 : t.flushed, e)) == null
          ? void 0
          : r.field) != null
        ? n
        : {};
    },
    filled: (e) => {
      var t, r, n;
      return (n =
        (r = gn((t = ot.variants) == null ? void 0 : t.filled, e)) == null
          ? void 0
          : r.field) != null
        ? n
        : {};
    },
    unstyled:
      (Fy = (Iy = ot.variants) == null ? void 0 : Iy.unstyled.field) != null
        ? Fy
        : {},
  },
  Iq = {
    baseStyle: Aq,
    sizes: Pq,
    variants: qq,
    defaultProps: ot.defaultProps,
  },
  { defineMultiStyleConfig: Fq, definePartsStyle: Rq } = vt(ZC.keys),
  tu = Bt('popper-bg'),
  Oq = Bt('popper-arrow-bg'),
  Ry = Bt('popper-arrow-shadow-color'),
  Lq = { zIndex: 10 },
  Mq = {
    [tu.variable]: 'colors.white',
    bg: tu.reference,
    [Oq.variable]: tu.reference,
    [Ry.variable]: 'colors.gray.200',
    _dark: {
      [tu.variable]: 'colors.gray.700',
      [Ry.variable]: 'colors.whiteAlpha.300',
    },
    width: 'xs',
    border: '1px solid',
    borderColor: 'inherit',
    borderRadius: 'md',
    boxShadow: 'sm',
    zIndex: 'inherit',
    _focusVisible: { outline: 0, boxShadow: 'outline' },
  },
  Dq = { px: 3, py: 2, borderBottomWidth: '1px' },
  zq = { px: 3, py: 2 },
  $q = { px: 3, py: 2, borderTopWidth: '1px' },
  Nq = {
    position: 'absolute',
    borderRadius: 'md',
    top: 1,
    insetEnd: 2,
    padding: 2,
  },
  jq = Rq({
    popper: Lq,
    content: Mq,
    header: Dq,
    body: zq,
    footer: $q,
    closeButton: Nq,
  }),
  Bq = Fq({ baseStyle: jq }),
  { definePartsStyle: lh, defineMultiStyleConfig: Vq } = vt(WC.keys),
  jd = De('drawer-bg'),
  Bd = De('drawer-box-shadow');
function To(e) {
  return lh(
    e === 'full'
      ? { dialog: { maxW: '100vw', h: '100vh' } }
      : { dialog: { maxW: e } },
  );
}
var Wq = { bg: 'blackAlpha.600', zIndex: 'modal' },
  Uq = { display: 'flex', zIndex: 'modal', justifyContent: 'center' },
  Hq = (e) => {
    const { isFullHeight: t } = e;
    return {
      ...(t && { height: '100vh' }),
      zIndex: 'modal',
      maxH: '100vh',
      color: 'inherit',
      [jd.variable]: 'colors.white',
      [Bd.variable]: 'shadows.lg',
      _dark: {
        [jd.variable]: 'colors.gray.700',
        [Bd.variable]: 'shadows.dark-lg',
      },
      bg: jd.reference,
      boxShadow: Bd.reference,
    };
  },
  Qq = { px: '6', py: '4', fontSize: 'xl', fontWeight: 'semibold' },
  Gq = { position: 'absolute', top: '2', insetEnd: '3' },
  Kq = { px: '6', py: '2', flex: '1', overflow: 'auto' },
  Xq = { px: '6', py: '4' },
  Yq = lh((e) => ({
    overlay: Wq,
    dialogContainer: Uq,
    dialog: gn(Hq, e),
    header: Qq,
    closeButton: Gq,
    body: Kq,
    footer: Xq,
  })),
  Jq = {
    xs: To('xs'),
    sm: To('md'),
    md: To('lg'),
    lg: To('2xl'),
    xl: To('4xl'),
    full: To('full'),
  },
  Zq = Vq({ baseStyle: Yq, sizes: Jq, defaultProps: { size: 'xs' } }),
  { definePartsStyle: eI, defineMultiStyleConfig: tI } = vt(UC.keys),
  nI = {
    borderRadius: 'md',
    py: '1',
    transitionProperty: 'common',
    transitionDuration: 'normal',
  },
  rI = {
    borderRadius: 'md',
    py: '1',
    transitionProperty: 'common',
    transitionDuration: 'normal',
    width: 'full',
    _focusVisible: { boxShadow: 'outline' },
    _placeholder: { opacity: 0.6 },
  },
  iI = {
    borderRadius: 'md',
    py: '1',
    transitionProperty: 'common',
    transitionDuration: 'normal',
    width: 'full',
    _focusVisible: { boxShadow: 'outline' },
    _placeholder: { opacity: 0.6 },
  },
  oI = eI({ preview: nI, input: rI, textarea: iI }),
  sI = tI({ baseStyle: oI }),
  { definePartsStyle: aI, defineMultiStyleConfig: lI } = vt(HC.keys),
  ss = De('form-control-color'),
  uI = {
    marginStart: '1',
    [ss.variable]: 'colors.red.500',
    _dark: { [ss.variable]: 'colors.red.300' },
    color: ss.reference,
  },
  cI = {
    mt: '2',
    [ss.variable]: 'colors.gray.600',
    _dark: { [ss.variable]: 'colors.whiteAlpha.600' },
    color: ss.reference,
    lineHeight: 'normal',
    fontSize: 'sm',
  },
  fI = aI({
    container: { width: '100%', position: 'relative' },
    requiredIndicator: uI,
    helperText: cI,
  }),
  dI = lI({ baseStyle: fI }),
  { definePartsStyle: pI, defineMultiStyleConfig: hI } = vt(QC.keys),
  as = De('form-error-color'),
  mI = {
    [as.variable]: 'colors.red.500',
    _dark: { [as.variable]: 'colors.red.300' },
    color: as.reference,
    mt: '2',
    fontSize: 'sm',
    lineHeight: 'normal',
  },
  gI = {
    marginEnd: '0.5em',
    [as.variable]: 'colors.red.500',
    _dark: { [as.variable]: 'colors.red.300' },
    color: as.reference,
  },
  _I = pI({ text: mI, icon: gI }),
  yI = hI({ baseStyle: _I }),
  vI = {
    fontSize: 'md',
    marginEnd: '3',
    mb: '2',
    fontWeight: 'medium',
    transitionProperty: 'common',
    transitionDuration: 'normal',
    opacity: 1,
    _disabled: { opacity: 0.4 },
  },
  bI = { baseStyle: vI },
  wI = { fontFamily: 'heading', fontWeight: 'bold' },
  SI = {
    '4xl': { fontSize: ['6xl', null, '7xl'], lineHeight: 1 },
    '3xl': { fontSize: ['5xl', null, '6xl'], lineHeight: 1 },
    '2xl': { fontSize: ['4xl', null, '5xl'], lineHeight: [1.2, null, 1] },
    xl: { fontSize: ['3xl', null, '4xl'], lineHeight: [1.33, null, 1.2] },
    lg: { fontSize: ['2xl', null, '3xl'], lineHeight: [1.33, null, 1.2] },
    md: { fontSize: 'xl', lineHeight: 1.2 },
    sm: { fontSize: 'md', lineHeight: 1.2 },
    xs: { fontSize: 'sm', lineHeight: 1.2 },
  },
  xI = { baseStyle: wI, sizes: SI, defaultProps: { size: 'xl' } },
  { defineMultiStyleConfig: kI, definePartsStyle: EI } = vt(BC.keys),
  Vd = De('breadcrumb-link-decor'),
  TI = {
    transitionProperty: 'common',
    transitionDuration: 'fast',
    transitionTimingFunction: 'ease-out',
    outline: 'none',
    color: 'inherit',
    textDecoration: Vd.reference,
    [Vd.variable]: 'none',
    '&:not([aria-current=page])': {
      cursor: 'pointer',
      _hover: { [Vd.variable]: 'underline' },
      _focusVisible: { boxShadow: 'outline' },
    },
  },
  CI = EI({ link: TI }),
  AI = kI({ baseStyle: CI }),
  PI = {
    lineHeight: '1.2',
    borderRadius: 'md',
    fontWeight: 'semibold',
    transitionProperty: 'common',
    transitionDuration: 'normal',
    _focusVisible: { boxShadow: 'outline' },
    _disabled: { opacity: 0.4, cursor: 'not-allowed', boxShadow: 'none' },
    _hover: { _disabled: { bg: 'initial' } },
  },
  rw = (e) => {
    const { colorScheme: t, theme: r } = e;
    if (t === 'gray')
      return {
        color: Me('gray.800', 'whiteAlpha.900')(e),
        _hover: { bg: Me('gray.100', 'whiteAlpha.200')(e) },
        _active: { bg: Me('gray.200', 'whiteAlpha.300')(e) },
      };
    const n = _s(`${t}.200`, 0.12)(r),
      i = _s(`${t}.200`, 0.24)(r);
    return {
      color: Me(`${t}.600`, `${t}.200`)(e),
      bg: 'transparent',
      _hover: { bg: Me(`${t}.50`, n)(e) },
      _active: { bg: Me(`${t}.100`, i)(e) },
    };
  },
  qI = (e) => {
    const { colorScheme: t } = e,
      r = Me('gray.200', 'whiteAlpha.300')(e);
    return {
      border: '1px solid',
      borderColor: t === 'gray' ? r : 'currentColor',
      '.chakra-button__group[data-attached][data-orientation=horizontal] > &:not(:last-of-type)':
        { marginEnd: '-1px' },
      '.chakra-button__group[data-attached][data-orientation=vertical] > &:not(:last-of-type)':
        { marginBottom: '-1px' },
      ...gn(rw, e),
    };
  },
  II = {
    yellow: {
      bg: 'yellow.400',
      color: 'black',
      hoverBg: 'yellow.500',
      activeBg: 'yellow.600',
    },
    cyan: {
      bg: 'cyan.400',
      color: 'black',
      hoverBg: 'cyan.500',
      activeBg: 'cyan.600',
    },
  },
  FI = (e) => {
    var t;
    const { colorScheme: r } = e;
    if (r === 'gray') {
      const c = Me('gray.100', 'whiteAlpha.200')(e);
      return {
        bg: c,
        color: Me('gray.800', 'whiteAlpha.900')(e),
        _hover: {
          bg: Me('gray.200', 'whiteAlpha.300')(e),
          _disabled: { bg: c },
        },
        _active: { bg: Me('gray.300', 'whiteAlpha.400')(e) },
      };
    }
    const {
        bg: n = `${r}.500`,
        color: i = 'white',
        hoverBg: o = `${r}.600`,
        activeBg: s = `${r}.700`,
      } = (t = II[r]) != null ? t : {},
      l = Me(n, `${r}.200`)(e);
    return {
      bg: l,
      color: Me(i, 'gray.800')(e),
      _hover: { bg: Me(o, `${r}.300`)(e), _disabled: { bg: l } },
      _active: { bg: Me(s, `${r}.400`)(e) },
    };
  },
  RI = (e) => {
    const { colorScheme: t } = e;
    return {
      padding: 0,
      height: 'auto',
      lineHeight: 'normal',
      verticalAlign: 'baseline',
      color: Me(`${t}.500`, `${t}.200`)(e),
      _hover: {
        textDecoration: 'underline',
        _disabled: { textDecoration: 'none' },
      },
      _active: { color: Me(`${t}.700`, `${t}.500`)(e) },
    };
  },
  OI = {
    bg: 'none',
    color: 'inherit',
    display: 'inline',
    lineHeight: 'inherit',
    m: '0',
    p: '0',
  },
  LI = { ghost: rw, outline: qI, solid: FI, link: RI, unstyled: OI },
  MI = {
    lg: { h: '12', minW: '12', fontSize: 'lg', px: '6' },
    md: { h: '10', minW: '10', fontSize: 'md', px: '4' },
    sm: { h: '8', minW: '8', fontSize: 'sm', px: '3' },
    xs: { h: '6', minW: '6', fontSize: 'xs', px: '2' },
  },
  DI = {
    baseStyle: PI,
    variants: LI,
    sizes: MI,
    defaultProps: { variant: 'solid', size: 'md', colorScheme: 'gray' },
  },
  { definePartsStyle: so, defineMultiStyleConfig: zI } = vt(uA.keys),
  dc = De('card-bg'),
  Wr = De('card-padding'),
  iw = De('card-shadow'),
  Pu = De('card-radius'),
  ow = De('card-border-width', '0'),
  sw = De('card-border-color'),
  $I = so({
    container: {
      [dc.variable]: 'colors.chakra-body-bg',
      backgroundColor: dc.reference,
      boxShadow: iw.reference,
      borderRadius: Pu.reference,
      color: 'chakra-body-text',
      borderWidth: ow.reference,
      borderColor: sw.reference,
    },
    body: { padding: Wr.reference, flex: '1 1 0%' },
    header: { padding: Wr.reference },
    footer: { padding: Wr.reference },
  }),
  NI = {
    sm: so({
      container: { [Pu.variable]: 'radii.base', [Wr.variable]: 'space.3' },
    }),
    md: so({
      container: { [Pu.variable]: 'radii.md', [Wr.variable]: 'space.5' },
    }),
    lg: so({
      container: { [Pu.variable]: 'radii.xl', [Wr.variable]: 'space.7' },
    }),
  },
  jI = {
    elevated: so({
      container: {
        [iw.variable]: 'shadows.base',
        _dark: { [dc.variable]: 'colors.gray.700' },
      },
    }),
    outline: so({
      container: {
        [ow.variable]: '1px',
        [sw.variable]: 'colors.chakra-border-color',
      },
    }),
    filled: so({ container: { [dc.variable]: 'colors.chakra-subtle-bg' } }),
    unstyled: {
      body: { [Wr.variable]: 0 },
      header: { [Wr.variable]: 0 },
      footer: { [Wr.variable]: 0 },
    },
  },
  BI = zI({
    baseStyle: $I,
    variants: jI,
    sizes: NI,
    defaultProps: { variant: 'elevated', size: 'md' },
  }),
  ya = Bt('close-button-size'),
  Us = Bt('close-button-bg'),
  VI = {
    w: [ya.reference],
    h: [ya.reference],
    borderRadius: 'md',
    transitionProperty: 'common',
    transitionDuration: 'normal',
    _disabled: { opacity: 0.4, cursor: 'not-allowed', boxShadow: 'none' },
    _hover: {
      [Us.variable]: 'colors.blackAlpha.100',
      _dark: { [Us.variable]: 'colors.whiteAlpha.100' },
    },
    _active: {
      [Us.variable]: 'colors.blackAlpha.200',
      _dark: { [Us.variable]: 'colors.whiteAlpha.200' },
    },
    _focusVisible: { boxShadow: 'outline' },
    bg: Us.reference,
  },
  WI = {
    lg: { [ya.variable]: 'sizes.10', fontSize: 'md' },
    md: { [ya.variable]: 'sizes.8', fontSize: 'xs' },
    sm: { [ya.variable]: 'sizes.6', fontSize: '2xs' },
  },
  UI = { baseStyle: VI, sizes: WI, defaultProps: { size: 'md' } },
  { variants: HI, defaultProps: QI } = ga,
  GI = {
    fontFamily: 'mono',
    fontSize: 'sm',
    px: '0.2em',
    borderRadius: 'sm',
    bg: Mt.bg.reference,
    color: Mt.color.reference,
    boxShadow: Mt.shadow.reference,
  },
  KI = { baseStyle: GI, variants: HI, defaultProps: QI },
  XI = { w: '100%', mx: 'auto', maxW: 'prose', px: '4' },
  YI = { baseStyle: XI },
  JI = { opacity: 0.6, borderColor: 'inherit' },
  ZI = { borderStyle: 'solid' },
  eF = { borderStyle: 'dashed' },
  tF = { solid: ZI, dashed: eF },
  nF = { baseStyle: JI, variants: tF, defaultProps: { variant: 'solid' } },
  { definePartsStyle: rF, defineMultiStyleConfig: iF } = vt($C.keys),
  oF = {
    borderTopWidth: '1px',
    borderColor: 'inherit',
    _last: { borderBottomWidth: '1px' },
  },
  sF = {
    transitionProperty: 'common',
    transitionDuration: 'normal',
    fontSize: 'md',
    _focusVisible: { boxShadow: 'outline' },
    _hover: { bg: 'blackAlpha.50' },
    _disabled: { opacity: 0.4, cursor: 'not-allowed' },
    px: '4',
    py: '2',
  },
  aF = { pt: '2', px: '4', pb: '5' },
  lF = { fontSize: '1.25em' },
  uF = rF({ container: oF, button: sF, panel: aF, icon: lF }),
  cF = iF({ baseStyle: uF }),
  { definePartsStyle: ul, defineMultiStyleConfig: fF } = vt(NC.keys),
  Rn = De('alert-fg'),
  ei = De('alert-bg'),
  dF = ul({
    container: { bg: ei.reference, px: '4', py: '3' },
    title: { fontWeight: 'bold', lineHeight: '6', marginEnd: '2' },
    description: { lineHeight: '6' },
    icon: {
      color: Rn.reference,
      flexShrink: 0,
      marginEnd: '3',
      w: '5',
      h: '6',
    },
    spinner: {
      color: Rn.reference,
      flexShrink: 0,
      marginEnd: '3',
      w: '5',
      h: '5',
    },
  });
function Bm(e) {
  const { theme: t, colorScheme: r } = e,
    n = _s(`${r}.200`, 0.16)(t);
  return { light: `colors.${r}.100`, dark: n };
}
var pF = ul((e) => {
    const { colorScheme: t } = e,
      r = Bm(e);
    return {
      container: {
        [Rn.variable]: `colors.${t}.600`,
        [ei.variable]: r.light,
        _dark: { [Rn.variable]: `colors.${t}.200`, [ei.variable]: r.dark },
      },
    };
  }),
  hF = ul((e) => {
    const { colorScheme: t } = e,
      r = Bm(e);
    return {
      container: {
        [Rn.variable]: `colors.${t}.600`,
        [ei.variable]: r.light,
        _dark: { [Rn.variable]: `colors.${t}.200`, [ei.variable]: r.dark },
        paddingStart: '3',
        borderStartWidth: '4px',
        borderStartColor: Rn.reference,
      },
    };
  }),
  mF = ul((e) => {
    const { colorScheme: t } = e,
      r = Bm(e);
    return {
      container: {
        [Rn.variable]: `colors.${t}.600`,
        [ei.variable]: r.light,
        _dark: { [Rn.variable]: `colors.${t}.200`, [ei.variable]: r.dark },
        pt: '2',
        borderTopWidth: '4px',
        borderTopColor: Rn.reference,
      },
    };
  }),
  gF = ul((e) => {
    const { colorScheme: t } = e;
    return {
      container: {
        [Rn.variable]: 'colors.white',
        [ei.variable]: `colors.${t}.600`,
        _dark: {
          [Rn.variable]: 'colors.gray.900',
          [ei.variable]: `colors.${t}.200`,
        },
        color: Rn.reference,
      },
    };
  }),
  _F = { subtle: pF, 'left-accent': hF, 'top-accent': mF, solid: gF },
  yF = fF({
    baseStyle: dF,
    variants: _F,
    defaultProps: { variant: 'subtle', colorScheme: 'blue' },
  }),
  { definePartsStyle: aw, defineMultiStyleConfig: vF } = vt(jC.keys),
  ls = De('avatar-border-color'),
  va = De('avatar-bg'),
  Xa = De('avatar-font-size'),
  ys = De('avatar-size'),
  bF = {
    borderRadius: 'full',
    border: '0.2em solid',
    borderColor: ls.reference,
    [ls.variable]: 'white',
    _dark: { [ls.variable]: 'colors.gray.800' },
  },
  wF = {
    bg: va.reference,
    fontSize: Xa.reference,
    width: ys.reference,
    height: ys.reference,
    lineHeight: '1',
    [va.variable]: 'colors.gray.200',
    _dark: { [va.variable]: 'colors.whiteAlpha.400' },
  },
  SF = (e) => {
    const { name: t, theme: r } = e,
      n = t ? PA({ string: t }) : 'colors.gray.400',
      i = CA(n)(r);
    let o = 'white';
    return (
      i || (o = 'gray.800'),
      {
        bg: va.reference,
        fontSize: Xa.reference,
        color: o,
        borderColor: ls.reference,
        verticalAlign: 'top',
        width: ys.reference,
        height: ys.reference,
        '&:not([data-loaded])': { [va.variable]: n },
        [ls.variable]: 'colors.white',
        _dark: { [ls.variable]: 'colors.gray.800' },
      }
    );
  },
  xF = { fontSize: Xa.reference, lineHeight: '1' },
  kF = aw((e) => ({
    badge: gn(bF, e),
    excessLabel: gn(wF, e),
    container: gn(SF, e),
    label: xF,
  }));
function pi(e) {
  const t = e !== '100%' ? Y1[e] : void 0;
  return aw({
    container: {
      [ys.variable]: t ?? e,
      [Xa.variable]: `calc(${t ?? e} / 2.5)`,
    },
    excessLabel: {
      [ys.variable]: t ?? e,
      [Xa.variable]: `calc(${t ?? e} / 2.5)`,
    },
  });
}
var EF = {
    '2xs': pi(4),
    xs: pi(6),
    sm: pi(8),
    md: pi(12),
    lg: pi(16),
    xl: pi(24),
    '2xl': pi(32),
    full: pi('100%'),
  },
  TF = vF({ baseStyle: kF, sizes: EF, defaultProps: { size: 'md' } }),
  CF = {
    Accordion: cF,
    Alert: yF,
    Avatar: TF,
    Badge: ga,
    Breadcrumb: AI,
    Button: DI,
    Checkbox: fc,
    CloseButton: UI,
    Code: KI,
    Container: YI,
    Divider: nF,
    Drawer: Zq,
    Editable: sI,
    Form: dI,
    FormError: yI,
    FormLabel: bI,
    Heading: xI,
    Input: ot,
    Kbd: VP,
    Link: UP,
    List: XP,
    Menu: aq,
    Modal: yq,
    NumberInput: Cq,
    PinInput: Iq,
    Popover: Bq,
    Progress: K2,
    Radio: lP,
    Select: mP,
    Skeleton: _P,
    SkipLink: vP,
    Slider: qP,
    Spinner: RP,
    Stat: jP,
    Switch: UA,
    Table: JA,
    Tabs: p2,
    Tag: T2,
    Textarea: z2,
    Tooltip: j2,
    Card: BI,
    Stepper: zC,
  },
  AF = {
    colors: {
      'chakra-body-text': { _light: 'gray.800', _dark: 'whiteAlpha.900' },
      'chakra-body-bg': { _light: 'white', _dark: 'gray.800' },
      'chakra-border-color': { _light: 'gray.200', _dark: 'whiteAlpha.300' },
      'chakra-inverse-text': { _light: 'white', _dark: 'gray.800' },
      'chakra-subtle-bg': { _light: 'gray.100', _dark: 'gray.700' },
      'chakra-subtle-text': { _light: 'gray.600', _dark: 'gray.400' },
      'chakra-placeholder-color': {
        _light: 'gray.500',
        _dark: 'whiteAlpha.400',
      },
    },
  },
  PF = {
    global: {
      body: {
        fontFamily: 'body',
        color: 'chakra-body-text',
        bg: 'chakra-body-bg',
        transitionProperty: 'background-color',
        transitionDuration: 'normal',
        lineHeight: 'base',
      },
      '*::placeholder': { color: 'chakra-placeholder-color' },
      '*, *::before, &::after': { borderColor: 'chakra-border-color' },
    },
  },
  qF = 'ltr',
  IF = {
    useSystemColorMode: !1,
    initialColorMode: 'light',
    cssVarPrefix: 'chakra',
  },
  FF = {
    semanticTokens: AF,
    direction: qF,
    ...LC,
    components: CF,
    styles: PF,
    config: IF,
  };
function RF(e, t) {
  const r = {};
  return (
    Object.keys(e).forEach((n) => {
      t.includes(n) || (r[n] = e[n]);
    }),
    r
  );
}
function OF(e, t, r, n) {
  const i = typeof t == 'string' ? t.split('.') : [t];
  for (n = 0; n < i.length && e; n += 1) e = e[i[n]];
  return e === void 0 ? r : e;
}
var LF = (e) => {
    const t = new WeakMap();
    return (n, i, o, s) => {
      if (typeof n > 'u') return e(n, i, o);
      t.has(n) || t.set(n, new Map());
      const l = t.get(n);
      if (l.has(i)) return l.get(i);
      const c = e(n, i, o, s);
      return l.set(i, c), c;
    };
  },
  lw = LF(OF);
function uw(e, t) {
  const r = {};
  return (
    Object.keys(e).forEach((n) => {
      const i = e[n];
      t(i, n, e) && (r[n] = i);
    }),
    r
  );
}
var cw = (e) => uw(e, (t) => t != null);
function MF(e) {
  return typeof e == 'function';
}
function fw(e, ...t) {
  return MF(e) ? e(...t) : e;
}
var DF = typeof Element < 'u',
  zF = typeof Map == 'function',
  $F = typeof Set == 'function',
  NF = typeof ArrayBuffer == 'function' && !!ArrayBuffer.isView;
function qu(e, t) {
  if (e === t) return !0;
  if (e && t && typeof e == 'object' && typeof t == 'object') {
    if (e.constructor !== t.constructor) return !1;
    var r, n, i;
    if (Array.isArray(e)) {
      if (((r = e.length), r != t.length)) return !1;
      for (n = r; n-- !== 0; ) if (!qu(e[n], t[n])) return !1;
      return !0;
    }
    var o;
    if (zF && e instanceof Map && t instanceof Map) {
      if (e.size !== t.size) return !1;
      for (o = e.entries(); !(n = o.next()).done; )
        if (!t.has(n.value[0])) return !1;
      for (o = e.entries(); !(n = o.next()).done; )
        if (!qu(n.value[1], t.get(n.value[0]))) return !1;
      return !0;
    }
    if ($F && e instanceof Set && t instanceof Set) {
      if (e.size !== t.size) return !1;
      for (o = e.entries(); !(n = o.next()).done; )
        if (!t.has(n.value[0])) return !1;
      return !0;
    }
    if (NF && ArrayBuffer.isView(e) && ArrayBuffer.isView(t)) {
      if (((r = e.length), r != t.length)) return !1;
      for (n = r; n-- !== 0; ) if (e[n] !== t[n]) return !1;
      return !0;
    }
    if (e.constructor === RegExp)
      return e.source === t.source && e.flags === t.flags;
    if (
      e.valueOf !== Object.prototype.valueOf &&
      typeof e.valueOf == 'function' &&
      typeof t.valueOf == 'function'
    )
      return e.valueOf() === t.valueOf();
    if (
      e.toString !== Object.prototype.toString &&
      typeof e.toString == 'function' &&
      typeof t.toString == 'function'
    )
      return e.toString() === t.toString();
    if (((i = Object.keys(e)), (r = i.length), r !== Object.keys(t).length))
      return !1;
    for (n = r; n-- !== 0; )
      if (!Object.prototype.hasOwnProperty.call(t, i[n])) return !1;
    if (DF && e instanceof Element) return !1;
    for (n = r; n-- !== 0; )
      if (
        !(
          (i[n] === '_owner' || i[n] === '__v' || i[n] === '__o') &&
          e.$$typeof
        ) &&
        !qu(e[i[n]], t[i[n]])
      )
        return !1;
    return !0;
  }
  return e !== e && t !== t;
}
var jF = function (t, r) {
  try {
    return qu(t, r);
  } catch (n) {
    if ((n.message || '').match(/stack|recursion/i))
      return console.warn('react-fast-compare cannot handle circular refs'), !1;
    throw n;
  }
};
const BF = Ph(jF);
function dw(e, t = {}) {
  var r;
  const { styleConfig: n, ...i } = t,
    { theme: o, colorMode: s } = GE(),
    l = e ? lw(o, `components.${e}`) : void 0,
    c = n || l,
    h = xr(
      { theme: o, colorMode: s },
      (r = c == null ? void 0 : c.defaultProps) != null ? r : {},
      cw(RF(i, ['children'])),
    ),
    y = K.useRef({});
  if (c) {
    const x = fC(c)(h);
    BF(y.current, x) || (y.current = x);
  }
  return y.current;
}
function Es(e, t = {}) {
  return dw(e, t);
}
function nf(e, t = {}) {
  return dw(e, t);
}
var VF = new Set([
    ...ZT,
    'textStyle',
    'layerStyle',
    'apply',
    'noOfLines',
    'focusBorderColor',
    'errorBorderColor',
    'as',
    '__css',
    'css',
    'sx',
  ]),
  WF = new Set(['htmlWidth', 'htmlHeight', 'htmlSize', 'htmlTranslate']);
function UF(e) {
  return WF.has(e) || !VF.has(e);
}
function HF(e, ...t) {
  if (e == null)
    throw new TypeError('Cannot convert undefined or null to object');
  const r = { ...e };
  for (const n of t)
    if (n != null)
      for (const i in n)
        Object.prototype.hasOwnProperty.call(n, i) &&
          (i in r && delete r[i], (r[i] = n[i]));
  return r;
}
function QF(e) {
  const t = Object.assign({}, e);
  for (let r in t) t[r] === void 0 && delete t[r];
  return t;
}
var GF =
    /^((children|dangerouslySetInnerHTML|key|ref|autoFocus|defaultValue|defaultChecked|innerHTML|suppressContentEditableWarning|suppressHydrationWarning|valueLink|abbr|accept|acceptCharset|accessKey|action|allow|allowUserMedia|allowPaymentRequest|allowFullScreen|allowTransparency|alt|async|autoComplete|autoPlay|capture|cellPadding|cellSpacing|challenge|charSet|checked|cite|classID|className|cols|colSpan|content|contentEditable|contextMenu|controls|controlsList|coords|crossOrigin|data|dateTime|decoding|default|defer|dir|disabled|disablePictureInPicture|disableRemotePlayback|download|draggable|encType|enterKeyHint|form|formAction|formEncType|formMethod|formNoValidate|formTarget|frameBorder|headers|height|hidden|high|href|hrefLang|htmlFor|httpEquiv|id|inputMode|integrity|is|keyParams|keyType|kind|label|lang|list|loading|loop|low|marginHeight|marginWidth|max|maxLength|media|mediaGroup|method|min|minLength|multiple|muted|name|nonce|noValidate|open|optimum|pattern|placeholder|playsInline|poster|preload|profile|radioGroup|readOnly|referrerPolicy|rel|required|reversed|role|rows|rowSpan|sandbox|scope|scoped|scrolling|seamless|selected|shape|size|sizes|slot|span|spellCheck|src|srcDoc|srcLang|srcSet|start|step|style|summary|tabIndex|target|title|translate|type|useMap|value|width|wmode|wrap|about|datatype|inlist|prefix|property|resource|typeof|vocab|autoCapitalize|autoCorrect|autoSave|color|incremental|fallback|inert|itemProp|itemScope|itemType|itemID|itemRef|on|option|results|security|unselectable|accentHeight|accumulate|additive|alignmentBaseline|allowReorder|alphabetic|amplitude|arabicForm|ascent|attributeName|attributeType|autoReverse|azimuth|baseFrequency|baselineShift|baseProfile|bbox|begin|bias|by|calcMode|capHeight|clip|clipPathUnits|clipPath|clipRule|colorInterpolation|colorInterpolationFilters|colorProfile|colorRendering|contentScriptType|contentStyleType|cursor|cx|cy|d|decelerate|descent|diffuseConstant|direction|display|divisor|dominantBaseline|dur|dx|dy|edgeMode|elevation|enableBackground|end|exponent|externalResourcesRequired|fill|fillOpacity|fillRule|filter|filterRes|filterUnits|floodColor|floodOpacity|focusable|fontFamily|fontSize|fontSizeAdjust|fontStretch|fontStyle|fontVariant|fontWeight|format|from|fr|fx|fy|g1|g2|glyphName|glyphOrientationHorizontal|glyphOrientationVertical|glyphRef|gradientTransform|gradientUnits|hanging|horizAdvX|horizOriginX|ideographic|imageRendering|in|in2|intercept|k|k1|k2|k3|k4|kernelMatrix|kernelUnitLength|kerning|keyPoints|keySplines|keyTimes|lengthAdjust|letterSpacing|lightingColor|limitingConeAngle|local|markerEnd|markerMid|markerStart|markerHeight|markerUnits|markerWidth|mask|maskContentUnits|maskUnits|mathematical|mode|numOctaves|offset|opacity|operator|order|orient|orientation|origin|overflow|overlinePosition|overlineThickness|panose1|paintOrder|pathLength|patternContentUnits|patternTransform|patternUnits|pointerEvents|points|pointsAtX|pointsAtY|pointsAtZ|preserveAlpha|preserveAspectRatio|primitiveUnits|r|radius|refX|refY|renderingIntent|repeatCount|repeatDur|requiredExtensions|requiredFeatures|restart|result|rotate|rx|ry|scale|seed|shapeRendering|slope|spacing|specularConstant|specularExponent|speed|spreadMethod|startOffset|stdDeviation|stemh|stemv|stitchTiles|stopColor|stopOpacity|strikethroughPosition|strikethroughThickness|string|stroke|strokeDasharray|strokeDashoffset|strokeLinecap|strokeLinejoin|strokeMiterlimit|strokeOpacity|strokeWidth|surfaceScale|systemLanguage|tableValues|targetX|targetY|textAnchor|textDecoration|textRendering|textLength|to|transform|u1|u2|underlinePosition|underlineThickness|unicode|unicodeBidi|unicodeRange|unitsPerEm|vAlphabetic|vHanging|vIdeographic|vMathematical|values|vectorEffect|version|vertAdvY|vertOriginX|vertOriginY|viewBox|viewTarget|visibility|widths|wordSpacing|writingMode|x|xHeight|x1|x2|xChannelSelector|xlinkActuate|xlinkArcrole|xlinkHref|xlinkRole|xlinkShow|xlinkTitle|xlinkType|xmlBase|xmlns|xmlnsXlink|xmlLang|xmlSpace|y|y1|y2|yChannelSelector|z|zoomAndPan|for|class|autofocus)|(([Dd][Aa][Tt][Aa]|[Aa][Rr][Ii][Aa]|x)-.*))$/,
  KF = E1(function (e) {
    return (
      GF.test(e) ||
      (e.charCodeAt(0) === 111 &&
        e.charCodeAt(1) === 110 &&
        e.charCodeAt(2) < 91)
    );
  }),
  XF = KF,
  YF = function (t) {
    return t !== 'theme';
  },
  Oy = function (t) {
    return typeof t == 'string' && t.charCodeAt(0) > 96 ? XF : YF;
  },
  Ly = function (t, r, n) {
    var i;
    if (r) {
      var o = r.shouldForwardProp;
      i =
        t.__emotion_forwardProp && o
          ? function (s) {
              return t.__emotion_forwardProp(s) && o(s);
            }
          : o;
    }
    return typeof i != 'function' && n && (i = t.__emotion_forwardProp), i;
  },
  JF = !1,
  ZF = function (t) {
    var r = t.cache,
      n = t.serialized,
      i = t.isStringTag;
    return (
      I1(r, n, i),
      AE(function () {
        return F1(r, n, i);
      }),
      null
    );
  },
  eR = function e(t, r) {
    var n = t.__emotion_real === t,
      i = (n && t.__emotion_base) || t,
      o,
      s;
    r !== void 0 && ((o = r.label), (s = r.target));
    var l = Ly(t, r, n),
      c = l || Oy(i),
      h = !c('as');
    return function () {
      var y = arguments,
        m =
          n && t.__emotion_styles !== void 0 ? t.__emotion_styles.slice(0) : [];
      if (
        (o !== void 0 && m.push('label:' + o + ';'),
        y[0] == null || y[0].raw === void 0)
      )
        m.push.apply(m, y);
      else {
        m.push(y[0][0]);
        for (var x = y.length, I = 1; I < x; I++) m.push(y[I], y[0][I]);
      }
      var $ = M1(function (j, G, C) {
        var T = (h && j.as) || i,
          q = '',
          H = [],
          ie = j;
        if (j.theme == null) {
          ie = {};
          for (var he in j) ie[he] = j[he];
          ie.theme = K.useContext(Ha);
        }
        typeof j.className == 'string'
          ? (q = vE(G.registered, H, j.className))
          : j.className != null && (q = j.className + ' ');
        var le = Im(m.concat(H), G.registered, ie);
        (q += G.key + '-' + le.name), s !== void 0 && (q += ' ' + s);
        var de = h && l === void 0 ? Oy(T) : c,
          Fe = {};
        for (var Ae in j) (h && Ae === 'as') || (de(Ae) && (Fe[Ae] = j[Ae]));
        return (
          (Fe.className = q),
          C && (Fe.ref = C),
          K.createElement(
            K.Fragment,
            null,
            K.createElement(ZF, {
              cache: G,
              serialized: le,
              isStringTag: typeof T == 'string',
            }),
            K.createElement(T, Fe),
          )
        );
      });
      return (
        ($.displayName =
          o !== void 0
            ? o
            : 'Styled(' +
              (typeof i == 'string'
                ? i
                : i.displayName || i.name || 'Component') +
              ')'),
        ($.defaultProps = t.defaultProps),
        ($.__emotion_real = $),
        ($.__emotion_base = i),
        ($.__emotion_styles = m),
        ($.__emotion_forwardProp = l),
        Object.defineProperty($, 'toString', {
          value: function () {
            return s === void 0 && JF ? 'NO_COMPONENT_SELECTOR' : '.' + s;
          },
        }),
        ($.withComponent = function (j, G) {
          return e(j, ac({}, r, G, { shouldForwardProp: Ly($, G, !0) })).apply(
            void 0,
            m,
          );
        }),
        $
      );
    };
  },
  tR = [
    'a',
    'abbr',
    'address',
    'area',
    'article',
    'aside',
    'audio',
    'b',
    'base',
    'bdi',
    'bdo',
    'big',
    'blockquote',
    'body',
    'br',
    'button',
    'canvas',
    'caption',
    'cite',
    'code',
    'col',
    'colgroup',
    'data',
    'datalist',
    'dd',
    'del',
    'details',
    'dfn',
    'dialog',
    'div',
    'dl',
    'dt',
    'em',
    'embed',
    'fieldset',
    'figcaption',
    'figure',
    'footer',
    'form',
    'h1',
    'h2',
    'h3',
    'h4',
    'h5',
    'h6',
    'head',
    'header',
    'hgroup',
    'hr',
    'html',
    'i',
    'iframe',
    'img',
    'input',
    'ins',
    'kbd',
    'keygen',
    'label',
    'legend',
    'li',
    'link',
    'main',
    'map',
    'mark',
    'marquee',
    'menu',
    'menuitem',
    'meta',
    'meter',
    'nav',
    'noscript',
    'object',
    'ol',
    'optgroup',
    'option',
    'output',
    'p',
    'param',
    'picture',
    'pre',
    'progress',
    'q',
    'rp',
    'rt',
    'ruby',
    's',
    'samp',
    'script',
    'section',
    'select',
    'small',
    'source',
    'span',
    'strong',
    'style',
    'sub',
    'summary',
    'sup',
    'table',
    'tbody',
    'td',
    'textarea',
    'tfoot',
    'th',
    'thead',
    'time',
    'title',
    'tr',
    'track',
    'u',
    'ul',
    'var',
    'video',
    'wbr',
    'circle',
    'clipPath',
    'defs',
    'ellipse',
    'foreignObject',
    'g',
    'image',
    'line',
    'linearGradient',
    'mask',
    'path',
    'pattern',
    'polygon',
    'polyline',
    'radialGradient',
    'rect',
    'stop',
    'svg',
    'text',
    'tspan',
  ],
  pc = eR.bind();
tR.forEach(function (e) {
  pc[e] = pc(e);
});
var My,
  nR = (My = pc.default) != null ? My : pc,
  rR =
    ({ baseStyle: e }) =>
    (t) => {
      const { theme: r, css: n, __css: i, sx: o, ...s } = t,
        l = uw(s, (m, x) => tC(x)),
        c = fw(e, t),
        h = HF({}, i, c, cw(l), o),
        y = G1(h)(t.theme);
      return n ? [y, n] : y;
    };
function Wd(e, t) {
  const { baseStyle: r, ...n } = t ?? {};
  n.shouldForwardProp || (n.shouldForwardProp = UF);
  const i = rR({ baseStyle: r }),
    o = nR(e, n)(i);
  return ip.forwardRef(function (c, h) {
    const { colorMode: y, forced: m } = Om();
    return ip.createElement(o, { ref: h, 'data-theme': m ? y : void 0, ...c });
  });
}
function iR() {
  const e = new Map();
  return new Proxy(Wd, {
    apply(t, r, n) {
      return Wd(...n);
    },
    get(t, r) {
      return e.has(r) || e.set(r, Wd(r)), e.get(r);
    },
  });
}
var dt = iR();
function Qt(e) {
  return K.forwardRef(e);
}
function oR(e = {}) {
  const {
      strict: t = !0,
      errorMessage:
        r = 'useContext: `context` is undefined. Seems you forgot to wrap component within the Provider',
      name: n,
    } = e,
    i = K.createContext(void 0);
  i.displayName = n;
  function o() {
    var s;
    const l = K.useContext(i);
    if (!l && t) {
      const c = new Error(r);
      throw (
        ((c.name = 'ContextError'),
        (s = Error.captureStackTrace) == null || s.call(Error, c, o),
        c)
      );
    }
    return l;
  }
  return [i.Provider, o, i];
}
function sR(e) {
  const { cssVarsRoot: t, theme: r, children: n } = e,
    i = K.useMemo(() => JT(r), [r]);
  return te.jsxs(IE, { theme: i, children: [te.jsx(aR, { root: t }), n] });
}
function aR({ root: e = ':host, :root' }) {
  const t = [e, '[data-theme]'].join(',');
  return te.jsx(Kc, { styles: (r) => ({ [t]: r.__cssVars }) });
}
oR({
  name: 'StylesContext',
  errorMessage:
    'useStyles: `styles` is undefined. Seems you forgot to wrap the components in `<StylesProvider />` ',
});
function lR() {
  const { colorMode: e } = Om();
  return te.jsx(Kc, {
    styles: (t) => {
      const r = lw(t, 'styles.global'),
        n = fw(r, { theme: t, colorMode: e });
      return n ? G1(n)(t) : void 0;
    },
  });
}
var pw = K.createContext({
  getDocument() {
    return document;
  },
  getWindow() {
    return window;
  },
});
pw.displayName = 'EnvironmentContext';
function hw(e) {
  const { children: t, environment: r, disabled: n } = e,
    i = K.useRef(null),
    o = K.useMemo(
      () =>
        r || {
          getDocument: () => {
            var l, c;
            return (c = (l = i.current) == null ? void 0 : l.ownerDocument) !=
              null
              ? c
              : document;
          },
          getWindow: () => {
            var l, c;
            return (c =
              (l = i.current) == null ? void 0 : l.ownerDocument.defaultView) !=
              null
              ? c
              : window;
          },
        },
      [r],
    ),
    s = !n || !r;
  return te.jsxs(pw.Provider, {
    value: o,
    children: [
      t,
      s && te.jsx('span', { id: '__chakra_env', hidden: !0, ref: i }),
    ],
  });
}
hw.displayName = 'EnvironmentProvider';
var uR = (e) => {
    const {
        children: t,
        colorModeManager: r,
        portalZIndex: n,
        resetScope: i,
        resetCSS: o = !0,
        theme: s = {},
        environment: l,
        cssVarsRoot: c,
        disableEnvironment: h,
        disableGlobalStyle: y,
      } = e,
      m = te.jsx(hw, { environment: l, disabled: h, children: t });
    return te.jsx(sR, {
      theme: s,
      cssVarsRoot: c,
      children: te.jsxs(j1, {
        colorModeManager: r,
        options: s.config,
        children: [
          o ? te.jsx(OE, { scope: i }) : te.jsx(RE, {}),
          !y && te.jsx(lR, {}),
          n ? te.jsx($1, { zIndex: n, children: m }) : m,
        ],
      }),
    });
  },
  cR = (e, t) => e.find((r) => r.id === t);
function Dy(e, t) {
  const r = mw(e, t),
    n = r ? e[r].findIndex((i) => i.id === t) : -1;
  return { position: r, index: n };
}
function mw(e, t) {
  for (const [r, n] of Object.entries(e)) if (cR(n, t)) return r;
}
function fR(e) {
  const t = e.includes('right'),
    r = e.includes('left');
  let n = 'center';
  return (
    t && (n = 'flex-end'),
    r && (n = 'flex-start'),
    { display: 'flex', flexDirection: 'column', alignItems: n }
  );
}
function dR(e) {
  const r = e === 'top' || e === 'bottom' ? '0 auto' : void 0,
    n = e.includes('top') ? 'env(safe-area-inset-top, 0px)' : void 0,
    i = e.includes('bottom') ? 'env(safe-area-inset-bottom, 0px)' : void 0,
    o = e.includes('left') ? void 0 : 'env(safe-area-inset-right, 0px)',
    s = e.includes('right') ? void 0 : 'env(safe-area-inset-left, 0px)';
  return {
    position: 'fixed',
    zIndex: 'var(--toast-z-index, 5500)',
    pointerEvents: 'none',
    display: 'flex',
    flexDirection: 'column',
    margin: r,
    top: n,
    bottom: i,
    right: o,
    left: s,
  };
}
function Iu(e, t = []) {
  const r = K.useRef(e);
  return (
    K.useEffect(() => {
      r.current = e;
    }),
    K.useCallback((...n) => {
      var i;
      return (i = r.current) == null ? void 0 : i.call(r, ...n);
    }, t)
  );
}
function pR(e, t) {
  const r = Iu(e);
  K.useEffect(() => {
    if (t == null) return;
    let n = null;
    return (
      (n = window.setTimeout(() => {
        r();
      }, t)),
      () => {
        n && window.clearTimeout(n);
      }
    );
  }, [t, r]);
}
function uh(e, t) {
  const r = K.useRef(!1),
    n = K.useRef(!1);
  K.useEffect(() => {
    if (r.current && n.current) return e();
    n.current = !0;
  }, t),
    K.useEffect(
      () => (
        (r.current = !0),
        () => {
          r.current = !1;
        }
      ),
      [],
    );
}
const Vm = K.createContext({
    transformPagePoint: (e) => e,
    isStatic: !1,
    reducedMotion: 'never',
  }),
  rf = K.createContext({}),
  cl = K.createContext(null),
  Wm = typeof window < 'u',
  gw = Wm ? K.useLayoutEffect : K.useEffect,
  _w = K.createContext({ strict: !1 }),
  of = (e) => e.replace(/([a-z])([A-Z])/gu, '$1-$2').toLowerCase(),
  hR = 'framerAppearId',
  yw = 'data-' + of(hR),
  mR = { skipAnimations: !1, useManualTiming: !1 };
function gR(e) {
  let t = new Set(),
    r = new Set(),
    n = !1,
    i = !1;
  const o = new WeakSet();
  let s = { delta: 0, timestamp: 0, isProcessing: !1 };
  function l(h) {
    o.has(h) && (c.schedule(h), e()), h(s);
  }
  const c = {
    schedule: (h, y = !1, m = !1) => {
      const I = m && n ? t : r;
      return y && o.add(h), I.has(h) || I.add(h), h;
    },
    cancel: (h) => {
      r.delete(h), o.delete(h);
    },
    process: (h) => {
      if (((s = h), n)) {
        i = !0;
        return;
      }
      (n = !0),
        ([t, r] = [r, t]),
        r.clear(),
        t.forEach(l),
        (n = !1),
        i && ((i = !1), c.process(h));
    },
  };
  return c;
}
const nu = [
    'read',
    'resolveKeyframes',
    'update',
    'preRender',
    'render',
    'postRender',
  ],
  _R = 40;
function vw(e, t) {
  let r = !1,
    n = !0;
  const i = { delta: 0, timestamp: 0, isProcessing: !1 },
    o = () => (r = !0),
    s = nu.reduce((C, T) => ((C[T] = gR(o)), C), {}),
    {
      read: l,
      resolveKeyframes: c,
      update: h,
      preRender: y,
      render: m,
      postRender: x,
    } = s,
    I = () => {
      const C = performance.now();
      (r = !1),
        (i.delta = n ? 1e3 / 60 : Math.max(Math.min(C - i.timestamp, _R), 1)),
        (i.timestamp = C),
        (i.isProcessing = !0),
        l.process(i),
        c.process(i),
        h.process(i),
        y.process(i),
        m.process(i),
        x.process(i),
        (i.isProcessing = !1),
        r && t && ((n = !1), e(I));
    },
    $ = () => {
      (r = !0), (n = !0), i.isProcessing || e(I);
    };
  return {
    schedule: nu.reduce((C, T) => {
      const q = s[T];
      return (
        (C[T] = (H, ie = !1, he = !1) => (r || $(), q.schedule(H, ie, he))), C
      );
    }, {}),
    cancel: (C) => {
      for (let T = 0; T < nu.length; T++) s[nu[T]].cancel(C);
    },
    state: i,
    steps: s,
  };
}
const { schedule: Um, cancel: a5 } = vw(queueMicrotask, !1);
function Ho(e) {
  return (
    e &&
    typeof e == 'object' &&
    Object.prototype.hasOwnProperty.call(e, 'current')
  );
}
const bw = K.createContext({});
let zy = !1;
function yR(e, t, r, n, i) {
  var o;
  const { visualElement: s } = K.useContext(rf),
    l = K.useContext(_w),
    c = K.useContext(cl),
    h = K.useContext(Vm).reducedMotion,
    y = K.useRef();
  (n = n || l.renderer),
    !y.current &&
      n &&
      (y.current = n(e, {
        visualState: t,
        parent: s,
        props: r,
        presenceContext: c,
        blockInitialAnimation: c ? c.initial === !1 : !1,
        reducedMotionConfig: h,
      }));
  const m = y.current,
    x = K.useContext(bw);
  m &&
    !m.projection &&
    i &&
    (m.type === 'html' || m.type === 'svg') &&
    bR(y.current, r, i, x),
    K.useInsertionEffect(() => {
      m && m.update(r, c);
    });
  const I = r[yw],
    $ = K.useRef(
      !!I &&
        !window.MotionHandoffIsComplete &&
        ((o = window.MotionHasOptimisedAnimation) === null || o === void 0
          ? void 0
          : o.call(window, I)),
    );
  return (
    gw(() => {
      m &&
        (m.updateFeatures(),
        Um.render(m.render),
        $.current && m.animationState && m.animationState.animateChanges());
    }),
    K.useEffect(() => {
      m &&
        (!$.current && m.animationState && m.animationState.animateChanges(),
        ($.current = !1),
        zy || ((zy = !0), queueMicrotask(vR)));
    }),
    m
  );
}
function vR() {
  window.MotionHandoffIsComplete = !0;
}
function bR(e, t, r, n) {
  const {
    layoutId: i,
    layout: o,
    drag: s,
    dragConstraints: l,
    layoutScroll: c,
    layoutRoot: h,
  } = t;
  (e.projection = new r(
    e.latestValues,
    t['data-framer-portal-id'] ? void 0 : ww(e.parent),
  )),
    e.projection.setOptions({
      layoutId: i,
      layout: o,
      alwaysMeasureLayout: !!s || (l && Ho(l)),
      visualElement: e,
      animationType: typeof o == 'string' ? o : 'both',
      initialPromotionConfig: n,
      layoutScroll: c,
      layoutRoot: h,
    });
}
function ww(e) {
  if (e) return e.options.allowProjection !== !1 ? e.projection : ww(e.parent);
}
function wR(e, t, r) {
  return K.useCallback(
    (n) => {
      n && e.mount && e.mount(n),
        t && (n ? t.mount(n) : t.unmount()),
        r && (typeof r == 'function' ? r(n) : Ho(r) && (r.current = n));
    },
    [t],
  );
}
function Ya(e) {
  return typeof e == 'string' || Array.isArray(e);
}
function Ja(e) {
  return e !== null && typeof e == 'object' && typeof e.start == 'function';
}
const Hm = [
    'animate',
    'whileInView',
    'whileFocus',
    'whileHover',
    'whileTap',
    'whileDrag',
    'exit',
  ],
  Qm = ['initial', ...Hm];
function sf(e) {
  return Ja(e.animate) || Qm.some((t) => Ya(e[t]));
}
function Sw(e) {
  return !!(sf(e) || e.variants);
}
function SR(e, t) {
  if (sf(e)) {
    const { initial: r, animate: n } = e;
    return {
      initial: r === !1 || Ya(r) ? r : void 0,
      animate: Ya(n) ? n : void 0,
    };
  }
  return e.inherit !== !1 ? t : {};
}
function xR(e) {
  const { initial: t, animate: r } = SR(e, K.useContext(rf));
  return K.useMemo(() => ({ initial: t, animate: r }), [$y(t), $y(r)]);
}
function $y(e) {
  return Array.isArray(e) ? e.join(' ') : e;
}
const Ny = {
    animation: [
      'animate',
      'variants',
      'whileHover',
      'whileTap',
      'exit',
      'whileInView',
      'whileFocus',
      'whileDrag',
    ],
    exit: ['exit'],
    drag: ['drag', 'dragControls'],
    focus: ['whileFocus'],
    hover: ['whileHover', 'onHoverStart', 'onHoverEnd'],
    tap: ['whileTap', 'onTap', 'onTapStart', 'onTapCancel'],
    pan: ['onPan', 'onPanStart', 'onPanSessionStart', 'onPanEnd'],
    inView: ['whileInView', 'onViewportEnter', 'onViewportLeave'],
    layout: ['layout', 'layoutId'],
  },
  vs = {};
for (const e in Ny) vs[e] = { isEnabled: (t) => Ny[e].some((r) => !!t[r]) };
function kR(e) {
  for (const t in e) vs[t] = { ...vs[t], ...e[t] };
}
const Gm = K.createContext({}),
  ER = Symbol.for('motionComponentSymbol'),
  un = (e) => e;
let ch = un;
function TR({
  preloadedFeatures: e,
  createVisualElement: t,
  useRender: r,
  useVisualState: n,
  Component: i,
}) {
  e && kR(e);
  function o(l, c) {
    let h;
    const y = { ...K.useContext(Vm), ...l, layoutId: CR(l) },
      { isStatic: m } = y,
      x = xR(l),
      I = n(l, m);
    if (!m && Wm) {
      AR();
      const $ = PR(y);
      (h = $.MeasureLayout),
        (x.visualElement = yR(i, I, y, t, $.ProjectionNode));
    }
    return te.jsxs(rf.Provider, {
      value: x,
      children: [
        h && x.visualElement
          ? te.jsx(h, { visualElement: x.visualElement, ...y })
          : null,
        r(i, l, wR(I, x.visualElement, c), I, m, x.visualElement),
      ],
    });
  }
  const s = K.forwardRef(o);
  return (s[ER] = i), s;
}
function CR({ layoutId: e }) {
  const t = K.useContext(Gm).id;
  return t && e !== void 0 ? t + '-' + e : e;
}
function AR(e, t) {
  K.useContext(_w).strict;
}
function PR(e) {
  const { drag: t, layout: r } = vs;
  if (!t && !r) return {};
  const n = { ...t, ...r };
  return {
    MeasureLayout:
      (t != null && t.isEnabled(e)) || (r != null && r.isEnabled(e))
        ? n.MeasureLayout
        : void 0,
    ProjectionNode: n.ProjectionNode,
  };
}
function qR(e) {
  function t(n, i = {}) {
    return TR(e(n, i));
  }
  if (typeof Proxy > 'u') return t;
  const r = new Map();
  return new Proxy(t, {
    get: (n, i) => (r.has(i) || r.set(i, t(i)), r.get(i)),
  });
}
const IR = [
  'animate',
  'circle',
  'defs',
  'desc',
  'ellipse',
  'g',
  'image',
  'line',
  'filter',
  'marker',
  'mask',
  'metadata',
  'path',
  'pattern',
  'polygon',
  'polyline',
  'rect',
  'stop',
  'switch',
  'symbol',
  'svg',
  'text',
  'tspan',
  'use',
  'view',
];
function Km(e) {
  return typeof e != 'string' || e.includes('-')
    ? !1
    : !!(IR.indexOf(e) > -1 || /[A-Z]/u.test(e));
}
const hc = {};
function FR(e) {
  Object.assign(hc, e);
}
const fl = [
    'transformPerspective',
    'x',
    'y',
    'z',
    'translateX',
    'translateY',
    'translateZ',
    'scale',
    'scaleX',
    'scaleY',
    'rotate',
    'rotateX',
    'rotateY',
    'rotateZ',
    'skew',
    'skewX',
    'skewY',
  ],
  zi = new Set(fl);
function xw(e, { layout: t, layoutId: r }) {
  return (
    zi.has(e) ||
    e.startsWith('origin') ||
    ((t || r !== void 0) && (!!hc[e] || e === 'opacity'))
  );
}
const ln = (e) => !!(e && e.getVelocity),
  kw = (e, t) => (t && typeof e == 'number' ? t.transform(e) : e),
  Ri = (e, t, r) => (r > t ? t : r < e ? e : r),
  Ts = {
    test: (e) => typeof e == 'number',
    parse: parseFloat,
    transform: (e) => e,
  },
  ba = { ...Ts, transform: (e) => Ri(0, 1, e) },
  ru = { ...Ts, default: 1 },
  wa = (e) => Math.round(e * 1e5) / 1e5,
  Xm = /-?(?:\d+(?:\.\d+)?|\.\d+)/gu,
  RR =
    /(?:#[\da-f]{3,8}|(?:rgb|hsl)a?\((?:-?[\d.]+%?[,\s]+){2}-?[\d.]+%?\s*(?:[,/]\s*)?(?:\b\d+(?:\.\d+)?|\.\d+)?%?\))/giu,
  OR =
    /^(?:#[\da-f]{3,8}|(?:rgb|hsl)a?\((?:-?[\d.]+%?[,\s]+){2}-?[\d.]+%?\s*(?:[,/]\s*)?(?:\b\d+(?:\.\d+)?|\.\d+)?%?\))$/iu;
function dl(e) {
  return typeof e == 'string';
}
function LR(e) {
  return e == null;
}
const pl = (e) => ({
    test: (t) => dl(t) && t.endsWith(e) && t.split(' ').length === 1,
    parse: parseFloat,
    transform: (t) => `${t}${e}`,
  }),
  hi = pl('deg'),
  Pr = pl('%'),
  $e = pl('px'),
  MR = pl('vh'),
  DR = pl('vw'),
  jy = {
    ...Pr,
    parse: (e) => Pr.parse(e) / 100,
    transform: (e) => Pr.transform(e * 100),
  },
  By = { ...Ts, transform: Math.round },
  Ym = {
    borderWidth: $e,
    borderTopWidth: $e,
    borderRightWidth: $e,
    borderBottomWidth: $e,
    borderLeftWidth: $e,
    borderRadius: $e,
    radius: $e,
    borderTopLeftRadius: $e,
    borderTopRightRadius: $e,
    borderBottomRightRadius: $e,
    borderBottomLeftRadius: $e,
    width: $e,
    maxWidth: $e,
    height: $e,
    maxHeight: $e,
    size: $e,
    top: $e,
    right: $e,
    bottom: $e,
    left: $e,
    padding: $e,
    paddingTop: $e,
    paddingRight: $e,
    paddingBottom: $e,
    paddingLeft: $e,
    margin: $e,
    marginTop: $e,
    marginRight: $e,
    marginBottom: $e,
    marginLeft: $e,
    rotate: hi,
    rotateX: hi,
    rotateY: hi,
    rotateZ: hi,
    scale: ru,
    scaleX: ru,
    scaleY: ru,
    scaleZ: ru,
    skew: hi,
    skewX: hi,
    skewY: hi,
    distance: $e,
    translateX: $e,
    translateY: $e,
    translateZ: $e,
    x: $e,
    y: $e,
    z: $e,
    perspective: $e,
    transformPerspective: $e,
    opacity: ba,
    originX: jy,
    originY: jy,
    originZ: $e,
    zIndex: By,
    backgroundPositionX: $e,
    backgroundPositionY: $e,
    fillOpacity: ba,
    strokeOpacity: ba,
    numOctaves: By,
  },
  zR = {
    x: 'translateX',
    y: 'translateY',
    z: 'translateZ',
    transformPerspective: 'perspective',
  },
  $R = fl.length;
function NR(e, t, r) {
  let n = '',
    i = !0;
  for (let o = 0; o < $R; o++) {
    const s = fl[o],
      l = e[s];
    if (l === void 0) continue;
    let c = !0;
    if (
      (typeof l == 'number'
        ? (c = l === (s.startsWith('scale') ? 1 : 0))
        : (c = parseFloat(l) === 0),
      !c || r)
    ) {
      const h = kw(l, Ym[s]);
      if (!c) {
        i = !1;
        const y = zR[s] || s;
        n += `${y}(${h}) `;
      }
      r && (t[s] = h);
    }
  }
  return (n = n.trim()), r ? (n = r(t, i ? '' : n)) : i && (n = 'none'), n;
}
const Ew = (e) => (t) => typeof t == 'string' && t.startsWith(e),
  Tw = Ew('--'),
  jR = Ew('var(--'),
  Jm = (e) => (jR(e) ? BR.test(e.split('/*')[0].trim()) : !1),
  BR =
    /var\(--(?:[\w-]+\s*|[\w-]+\s*,(?:\s*[^)(\s]|\s*\((?:[^)(]|\([^)(]*\))*\))+\s*)\)$/iu;
function Zm(e, t, r) {
  const { style: n, vars: i, transformOrigin: o } = e;
  let s = !1,
    l = !1;
  for (const c in t) {
    const h = t[c];
    if (zi.has(c)) {
      s = !0;
      continue;
    } else if (Tw(c)) {
      i[c] = h;
      continue;
    } else {
      const y = kw(h, Ym[c]);
      c.startsWith('origin') ? ((l = !0), (o[c] = y)) : (n[c] = y);
    }
  }
  if (
    (t.transform ||
      (s || r
        ? (n.transform = NR(t, e.transform, r))
        : n.transform && (n.transform = 'none')),
    l)
  ) {
    const { originX: c = '50%', originY: h = '50%', originZ: y = 0 } = o;
    n.transformOrigin = `${c} ${h} ${y}`;
  }
}
const eg = () => ({ style: {}, transform: {}, transformOrigin: {}, vars: {} });
function Cw(e, t, r) {
  for (const n in t) !ln(t[n]) && !xw(n, r) && (e[n] = t[n]);
}
function VR({ transformTemplate: e }, t) {
  return K.useMemo(() => {
    const r = eg();
    return Zm(r, t, e), Object.assign({}, r.vars, r.style);
  }, [t]);
}
function WR(e, t) {
  const r = e.style || {},
    n = {};
  return Cw(n, r, e), Object.assign(n, VR(e, t)), n;
}
function UR(e, t) {
  const r = {},
    n = WR(e, t);
  return (
    e.drag &&
      e.dragListener !== !1 &&
      ((r.draggable = !1),
      (n.userSelect = n.WebkitUserSelect = n.WebkitTouchCallout = 'none'),
      (n.touchAction =
        e.drag === !0 ? 'none' : `pan-${e.drag === 'x' ? 'y' : 'x'}`)),
    e.tabIndex === void 0 &&
      (e.onTap || e.onTapStart || e.whileTap) &&
      (r.tabIndex = 0),
    (r.style = n),
    r
  );
}
const HR = new Set([
  'animate',
  'exit',
  'variants',
  'initial',
  'style',
  'values',
  'variants',
  'transition',
  'transformTemplate',
  'custom',
  'inherit',
  'onBeforeLayoutMeasure',
  'onAnimationStart',
  'onAnimationComplete',
  'onUpdate',
  'onDragStart',
  'onDrag',
  'onDragEnd',
  'onMeasureDragConstraints',
  'onDirectionLock',
  'onDragTransitionEnd',
  '_dragX',
  '_dragY',
  'onHoverStart',
  'onHoverEnd',
  'onViewportEnter',
  'onViewportLeave',
  'globalTapTarget',
  'ignoreStrict',
  'viewport',
]);
function mc(e) {
  return (
    e.startsWith('while') ||
    (e.startsWith('drag') && e !== 'draggable') ||
    e.startsWith('layout') ||
    e.startsWith('onTap') ||
    e.startsWith('onPan') ||
    e.startsWith('onLayout') ||
    HR.has(e)
  );
}
let Aw = (e) => !mc(e);
function QR(e) {
  e && (Aw = (t) => (t.startsWith('on') ? !mc(t) : e(t)));
}
try {
  QR(require('@emotion/is-prop-valid').default);
} catch {}
function GR(e, t, r) {
  const n = {};
  for (const i in e)
    (i === 'values' && typeof e.values == 'object') ||
      ((Aw(i) ||
        (r === !0 && mc(i)) ||
        (!t && !mc(i)) ||
        (e.draggable && i.startsWith('onDrag'))) &&
        (n[i] = e[i]));
  return n;
}
function Vy(e, t, r) {
  return typeof e == 'string' ? e : $e.transform(t + r * e);
}
function KR(e, t, r) {
  const n = Vy(t, e.x, e.width),
    i = Vy(r, e.y, e.height);
  return `${n} ${i}`;
}
const XR = { offset: 'stroke-dashoffset', array: 'stroke-dasharray' },
  YR = { offset: 'strokeDashoffset', array: 'strokeDasharray' };
function JR(e, t, r = 1, n = 0, i = !0) {
  e.pathLength = 1;
  const o = i ? XR : YR;
  e[o.offset] = $e.transform(-n);
  const s = $e.transform(t),
    l = $e.transform(r);
  e[o.array] = `${s} ${l}`;
}
function tg(
  e,
  {
    attrX: t,
    attrY: r,
    attrScale: n,
    originX: i,
    originY: o,
    pathLength: s,
    pathSpacing: l = 1,
    pathOffset: c = 0,
    ...h
  },
  y,
  m,
) {
  if ((Zm(e, h, m), y)) {
    e.style.viewBox && (e.attrs.viewBox = e.style.viewBox);
    return;
  }
  (e.attrs = e.style), (e.style = {});
  const { attrs: x, style: I, dimensions: $ } = e;
  x.transform && ($ && (I.transform = x.transform), delete x.transform),
    $ &&
      (i !== void 0 || o !== void 0 || I.transform) &&
      (I.transformOrigin = KR(
        $,
        i !== void 0 ? i : 0.5,
        o !== void 0 ? o : 0.5,
      )),
    t !== void 0 && (x.x = t),
    r !== void 0 && (x.y = r),
    n !== void 0 && (x.scale = n),
    s !== void 0 && JR(x, s, l, c, !1);
}
const Pw = () => ({ ...eg(), attrs: {} }),
  ng = (e) => typeof e == 'string' && e.toLowerCase() === 'svg';
function ZR(e, t, r, n) {
  const i = K.useMemo(() => {
    const o = Pw();
    return (
      tg(o, t, ng(n), e.transformTemplate),
      { ...o.attrs, style: { ...o.style } }
    );
  }, [t]);
  if (e.style) {
    const o = {};
    Cw(o, e.style, e), (i.style = { ...o, ...i.style });
  }
  return i;
}
function e4(e = !1) {
  return (r, n, i, { latestValues: o }, s) => {
    const c = (Km(r) ? ZR : UR)(n, o, s, r),
      h = GR(n, typeof r == 'string', e),
      y = r !== K.Fragment ? { ...h, ...c, ref: i } : {},
      { children: m } = n,
      x = K.useMemo(() => (ln(m) ? m.get() : m), [m]);
    return K.createElement(r, { ...y, children: x });
  };
}
function qw(e, { style: t, vars: r }, n, i) {
  Object.assign(e.style, t, i && i.getProjectionStyles(n));
  for (const o in r) e.style.setProperty(o, r[o]);
}
const Iw = new Set([
  'baseFrequency',
  'diffuseConstant',
  'kernelMatrix',
  'kernelUnitLength',
  'keySplines',
  'keyTimes',
  'limitingConeAngle',
  'markerHeight',
  'markerWidth',
  'numOctaves',
  'targetX',
  'targetY',
  'surfaceScale',
  'specularConstant',
  'specularExponent',
  'stdDeviation',
  'tableValues',
  'viewBox',
  'gradientTransform',
  'pathLength',
  'startOffset',
  'textLength',
  'lengthAdjust',
]);
function Fw(e, t, r, n) {
  qw(e, t, void 0, n);
  for (const i in t.attrs) e.setAttribute(Iw.has(i) ? i : of(i), t.attrs[i]);
}
function rg(e, t, r) {
  var n;
  const { style: i } = e,
    o = {};
  for (const s in i)
    (ln(i[s]) ||
      (t.style && ln(t.style[s])) ||
      xw(s, e) ||
      ((n = r == null ? void 0 : r.getValue(s)) === null || n === void 0
        ? void 0
        : n.liveStyle) !== void 0) &&
      (o[s] = i[s]);
  return (
    r && i && typeof i.willChange == 'string' && (r.applyWillChange = !1), o
  );
}
function Rw(e, t, r) {
  const n = rg(e, t, r);
  for (const i in e)
    if (ln(e[i]) || ln(t[i])) {
      const o =
        fl.indexOf(i) !== -1
          ? 'attr' + i.charAt(0).toUpperCase() + i.substring(1)
          : i;
      n[o] = e[i];
    }
  return n;
}
function Wy(e) {
  const t = [{}, {}];
  return (
    e == null ||
      e.values.forEach((r, n) => {
        (t[0][n] = r.get()), (t[1][n] = r.getVelocity());
      }),
    t
  );
}
function ig(e, t, r, n) {
  if (typeof t == 'function') {
    const [i, o] = Wy(n);
    t = t(r !== void 0 ? r : e.custom, i, o);
  }
  if (
    (typeof t == 'string' && (t = e.variants && e.variants[t]),
    typeof t == 'function')
  ) {
    const [i, o] = Wy(n);
    t = t(r !== void 0 ? r : e.custom, i, o);
  }
  return t;
}
function og(e) {
  const t = K.useRef(null);
  return t.current === null && (t.current = e()), t.current;
}
const fh = (e) => Array.isArray(e),
  t4 = (e) => !!(e && typeof e == 'object' && e.mix && e.toValue),
  n4 = (e) => (fh(e) ? e[e.length - 1] || 0 : e);
function Fu(e) {
  const t = ln(e) ? e.get() : e;
  return t4(t) ? t.toValue() : t;
}
const Ow = new Set(['opacity', 'clipPath', 'filter', 'transform']);
function Lw(e) {
  if (zi.has(e)) return 'transform';
  if (Ow.has(e)) return of(e);
}
function af(e, t) {
  e.indexOf(t) === -1 && e.push(t);
}
function lf(e, t) {
  const r = e.indexOf(t);
  r > -1 && e.splice(r, 1);
}
function r4(
  {
    applyWillChange: e = !1,
    scrapeMotionValuesFromProps: t,
    createRenderState: r,
    onMount: n,
  },
  i,
  o,
  s,
  l,
) {
  const c = { latestValues: o4(i, o, s, l ? !1 : e, t), renderState: r() };
  return n && (c.mount = (h) => n(i, h, c)), c;
}
const Mw = (e) => (t, r) => {
  const n = K.useContext(rf),
    i = K.useContext(cl),
    o = () => r4(e, t, n, i, r);
  return r ? o() : og(o);
};
function i4(e, t) {
  const r = Lw(t);
  r && af(e, r);
}
function Uy(e, t, r) {
  const n = Array.isArray(t) ? t : [t];
  for (let i = 0; i < n.length; i++) {
    const o = ig(e, n[i]);
    if (o) {
      const { transitionEnd: s, transition: l, ...c } = o;
      r(c, s);
    }
  }
}
function o4(e, t, r, n, i) {
  var o;
  const s = {},
    l = [],
    c =
      n &&
      ((o = e.style) === null || o === void 0 ? void 0 : o.willChange) ===
        void 0,
    h = i(e, {});
  for (const G in h) s[G] = Fu(h[G]);
  let { initial: y, animate: m } = e;
  const x = sf(e),
    I = Sw(e);
  t &&
    I &&
    !x &&
    e.inherit !== !1 &&
    (y === void 0 && (y = t.initial), m === void 0 && (m = t.animate));
  let $ = r ? r.initial === !1 : !1;
  $ = $ || y === !1;
  const j = $ ? m : y;
  return (
    j &&
      typeof j != 'boolean' &&
      !Ja(j) &&
      Uy(e, j, (G, C) => {
        for (const T in G) {
          let q = G[T];
          if (Array.isArray(q)) {
            const H = $ ? q.length - 1 : 0;
            q = q[H];
          }
          q !== null && (s[T] = q);
        }
        for (const T in C) s[T] = C[T];
      }),
    c &&
      (m &&
        y !== !1 &&
        !Ja(m) &&
        Uy(e, m, (G) => {
          for (const C in G) i4(l, C);
        }),
      l.length && (s.willChange = l.join(','))),
    s
  );
}
const {
    schedule: ct,
    cancel: ti,
    state: Jt,
    steps: Ud,
  } = vw(typeof requestAnimationFrame < 'u' ? requestAnimationFrame : un, !0),
  s4 = {
    useVisualState: Mw({
      scrapeMotionValuesFromProps: Rw,
      createRenderState: Pw,
      onMount: (e, t, { renderState: r, latestValues: n }) => {
        ct.read(() => {
          try {
            r.dimensions =
              typeof t.getBBox == 'function'
                ? t.getBBox()
                : t.getBoundingClientRect();
          } catch {
            r.dimensions = { x: 0, y: 0, width: 0, height: 0 };
          }
        }),
          ct.render(() => {
            tg(r, n, ng(t.tagName), e.transformTemplate), Fw(t, r);
          });
      },
    }),
  },
  a4 = {
    useVisualState: Mw({
      applyWillChange: !0,
      scrapeMotionValuesFromProps: rg,
      createRenderState: eg,
    }),
  };
function l4(e, { forwardMotionProps: t = !1 }, r, n) {
  return {
    ...(Km(e) ? s4 : a4),
    preloadedFeatures: r,
    useRender: e4(t),
    createVisualElement: n,
    Component: e,
  };
}
function Br(e, t, r, n = { passive: !0 }) {
  return e.addEventListener(t, r, n), () => e.removeEventListener(t, r);
}
const Dw = (e) =>
  e.pointerType === 'mouse'
    ? typeof e.button != 'number' || e.button <= 0
    : e.isPrimary !== !1;
function uf(e, t = 'page') {
  return { point: { x: e[`${t}X`], y: e[`${t}Y`] } };
}
const u4 = (e) => (t) => Dw(t) && e(t, uf(t));
function Ur(e, t, r, n) {
  return Br(e, t, u4(r), n);
}
const c4 = (e, t) => (r) => t(e(r)),
  Hr = (...e) => e.reduce(c4);
function zw(e) {
  let t = null;
  return () => {
    const r = () => {
      t = null;
    };
    return t === null ? ((t = e), r) : !1;
  };
}
const Hy = zw('dragHorizontal'),
  Qy = zw('dragVertical');
function $w(e) {
  let t = !1;
  if (e === 'y') t = Qy();
  else if (e === 'x') t = Hy();
  else {
    const r = Hy(),
      n = Qy();
    r && n
      ? (t = () => {
          r(), n();
        })
      : (r && r(), n && n());
  }
  return t;
}
function Nw() {
  const e = $w(!0);
  return e ? (e(), !1) : !0;
}
class $i {
  constructor(t) {
    (this.isMounted = !1), (this.node = t);
  }
  update() {}
}
function Gy(e, t) {
  const r = t ? 'pointerenter' : 'pointerleave',
    n = t ? 'onHoverStart' : 'onHoverEnd',
    i = (o, s) => {
      if (o.pointerType === 'touch' || Nw()) return;
      const l = e.getProps();
      e.animationState &&
        l.whileHover &&
        e.animationState.setActive('whileHover', t);
      const c = l[n];
      c && ct.postRender(() => c(o, s));
    };
  return Ur(e.current, r, i, { passive: !e.getProps()[n] });
}
class f4 extends $i {
  mount() {
    this.unmount = Hr(Gy(this.node, !0), Gy(this.node, !1));
  }
  unmount() {}
}
class d4 extends $i {
  constructor() {
    super(...arguments), (this.isActive = !1);
  }
  onFocus() {
    let t = !1;
    try {
      t = this.node.current.matches(':focus-visible');
    } catch {
      t = !0;
    }
    !t ||
      !this.node.animationState ||
      (this.node.animationState.setActive('whileFocus', !0),
      (this.isActive = !0));
  }
  onBlur() {
    !this.isActive ||
      !this.node.animationState ||
      (this.node.animationState.setActive('whileFocus', !1),
      (this.isActive = !1));
  }
  mount() {
    this.unmount = Hr(
      Br(this.node.current, 'focus', () => this.onFocus()),
      Br(this.node.current, 'blur', () => this.onBlur()),
    );
  }
  unmount() {}
}
const jw = (e, t) => (t ? (e === t ? !0 : jw(e, t.parentElement)) : !1);
function Hd(e, t) {
  if (!t) return;
  const r = new PointerEvent('pointer' + e);
  t(r, uf(r));
}
class p4 extends $i {
  constructor() {
    super(...arguments),
      (this.removeStartListeners = un),
      (this.removeEndListeners = un),
      (this.removeAccessibleListeners = un),
      (this.startPointerPress = (t, r) => {
        if (this.isPressing) return;
        this.removeEndListeners();
        const n = this.node.getProps(),
          o = Ur(
            window,
            'pointerup',
            (l, c) => {
              if (!this.checkPressEnd()) return;
              const {
                  onTap: h,
                  onTapCancel: y,
                  globalTapTarget: m,
                } = this.node.getProps(),
                x = !m && !jw(this.node.current, l.target) ? y : h;
              x && ct.update(() => x(l, c));
            },
            { passive: !(n.onTap || n.onPointerUp) },
          ),
          s = Ur(window, 'pointercancel', (l, c) => this.cancelPress(l, c), {
            passive: !(n.onTapCancel || n.onPointerCancel),
          });
        (this.removeEndListeners = Hr(o, s)), this.startPress(t, r);
      }),
      (this.startAccessiblePress = () => {
        const t = (o) => {
            if (o.key !== 'Enter' || this.isPressing) return;
            const s = (l) => {
              l.key !== 'Enter' ||
                !this.checkPressEnd() ||
                Hd('up', (c, h) => {
                  const { onTap: y } = this.node.getProps();
                  y && ct.postRender(() => y(c, h));
                });
            };
            this.removeEndListeners(),
              (this.removeEndListeners = Br(this.node.current, 'keyup', s)),
              Hd('down', (l, c) => {
                this.startPress(l, c);
              });
          },
          r = Br(this.node.current, 'keydown', t),
          n = () => {
            this.isPressing && Hd('cancel', (o, s) => this.cancelPress(o, s));
          },
          i = Br(this.node.current, 'blur', n);
        this.removeAccessibleListeners = Hr(r, i);
      });
  }
  startPress(t, r) {
    this.isPressing = !0;
    const { onTapStart: n, whileTap: i } = this.node.getProps();
    i &&
      this.node.animationState &&
      this.node.animationState.setActive('whileTap', !0),
      n && ct.postRender(() => n(t, r));
  }
  checkPressEnd() {
    return (
      this.removeEndListeners(),
      (this.isPressing = !1),
      this.node.getProps().whileTap &&
        this.node.animationState &&
        this.node.animationState.setActive('whileTap', !1),
      !Nw()
    );
  }
  cancelPress(t, r) {
    if (!this.checkPressEnd()) return;
    const { onTapCancel: n } = this.node.getProps();
    n && ct.postRender(() => n(t, r));
  }
  mount() {
    const t = this.node.getProps(),
      r = Ur(
        t.globalTapTarget ? window : this.node.current,
        'pointerdown',
        this.startPointerPress,
        { passive: !(t.onTapStart || t.onPointerStart) },
      ),
      n = Br(this.node.current, 'focus', this.startAccessiblePress);
    this.removeStartListeners = Hr(r, n);
  }
  unmount() {
    this.removeStartListeners(),
      this.removeEndListeners(),
      this.removeAccessibleListeners();
  }
}
const dh = new WeakMap(),
  Qd = new WeakMap(),
  h4 = (e) => {
    const t = dh.get(e.target);
    t && t(e);
  },
  m4 = (e) => {
    e.forEach(h4);
  };
function g4({ root: e, ...t }) {
  const r = e || document;
  Qd.has(r) || Qd.set(r, {});
  const n = Qd.get(r),
    i = JSON.stringify(t);
  return n[i] || (n[i] = new IntersectionObserver(m4, { root: e, ...t })), n[i];
}
function _4(e, t, r) {
  const n = g4(t);
  return (
    dh.set(e, r),
    n.observe(e),
    () => {
      dh.delete(e), n.unobserve(e);
    }
  );
}
const y4 = { some: 0, all: 1 };
class v4 extends $i {
  constructor() {
    super(...arguments), (this.hasEnteredView = !1), (this.isInView = !1);
  }
  startObserver() {
    this.unmount();
    const { viewport: t = {} } = this.node.getProps(),
      { root: r, margin: n, amount: i = 'some', once: o } = t,
      s = {
        root: r ? r.current : void 0,
        rootMargin: n,
        threshold: typeof i == 'number' ? i : y4[i],
      },
      l = (c) => {
        const { isIntersecting: h } = c;
        if (
          this.isInView === h ||
          ((this.isInView = h), o && !h && this.hasEnteredView)
        )
          return;
        h && (this.hasEnteredView = !0),
          this.node.animationState &&
            this.node.animationState.setActive('whileInView', h);
        const { onViewportEnter: y, onViewportLeave: m } = this.node.getProps(),
          x = h ? y : m;
        x && x(c);
      };
    return _4(this.node.current, s, l);
  }
  mount() {
    this.startObserver();
  }
  update() {
    if (typeof IntersectionObserver > 'u') return;
    const { props: t, prevProps: r } = this.node;
    ['amount', 'margin', 'root'].some(b4(t, r)) && this.startObserver();
  }
  unmount() {}
}
function b4({ viewport: e = {} }, { viewport: t = {} } = {}) {
  return (r) => e[r] !== t[r];
}
const w4 = {
  inView: { Feature: v4 },
  tap: { Feature: p4 },
  focus: { Feature: d4 },
  hover: { Feature: f4 },
};
function Bw(e, t) {
  if (!Array.isArray(t)) return !1;
  const r = t.length;
  if (r !== e.length) return !1;
  for (let n = 0; n < r; n++) if (t[n] !== e[n]) return !1;
  return !0;
}
function cf(e, t, r) {
  const n = e.getProps();
  return ig(n, t, r !== void 0 ? r : n.custom, e);
}
const Qr = (e) => e * 1e3,
  Gr = (e) => e / 1e3,
  S4 = { type: 'spring', stiffness: 500, damping: 25, restSpeed: 10 },
  x4 = (e) => ({
    type: 'spring',
    stiffness: 550,
    damping: e === 0 ? 2 * Math.sqrt(550) : 30,
    restSpeed: 10,
  }),
  k4 = { type: 'keyframes', duration: 0.8 },
  E4 = { type: 'keyframes', ease: [0.25, 0.1, 0.35, 1], duration: 0.3 },
  T4 = (e, { keyframes: t }) =>
    t.length > 2
      ? k4
      : zi.has(e)
        ? e.startsWith('scale')
          ? x4(t[1])
          : S4
        : E4;
function C4({
  when: e,
  delay: t,
  delayChildren: r,
  staggerChildren: n,
  staggerDirection: i,
  repeat: o,
  repeatType: s,
  repeatDelay: l,
  from: c,
  elapsed: h,
  ...y
}) {
  return !!Object.keys(y).length;
}
function sg(e, t) {
  return e[t] || e.default || e;
}
const A4 = (e) => e !== null;
function ff(e, { repeat: t, repeatType: r = 'loop' }, n) {
  const i = e.filter(A4),
    o = t && r !== 'loop' && t % 2 === 1 ? 0 : i.length - 1;
  return !o || n === void 0 ? i[o] : n;
}
const Vw = (e) => /^0[^.\s]+$/u.test(e);
function P4(e) {
  return typeof e == 'number'
    ? e === 0
    : e !== null
      ? e === 'none' || e === '0' || Vw(e)
      : !0;
}
const Ww = (e) => /^-?(?:\d+(?:\.\d+)?|\.\d+)$/u.test(e),
  q4 = /^var\(--(?:([\w-]+)|([\w-]+), ?([a-zA-Z\d ()%#.,-]+))\)/u;
function I4(e) {
  const t = q4.exec(e);
  if (!t) return [,];
  const [, r, n, i] = t;
  return [`--${r ?? n}`, i];
}
function Uw(e, t, r = 1) {
  const [n, i] = I4(e);
  if (!n) return;
  const o = window.getComputedStyle(t).getPropertyValue(n);
  if (o) {
    const s = o.trim();
    return Ww(s) ? parseFloat(s) : s;
  }
  return Jm(i) ? Uw(i, t, r + 1) : i;
}
const F4 = new Set([
    'width',
    'height',
    'top',
    'left',
    'right',
    'bottom',
    'x',
    'y',
    'translateX',
    'translateY',
  ]),
  Ky = (e) => e === Ts || e === $e,
  Xy = (e, t) => parseFloat(e.split(', ')[t]),
  Yy =
    (e, t) =>
    (r, { transform: n }) => {
      if (n === 'none' || !n) return 0;
      const i = n.match(/^matrix3d\((.+)\)$/u);
      if (i) return Xy(i[1], t);
      {
        const o = n.match(/^matrix\((.+)\)$/u);
        return o ? Xy(o[1], e) : 0;
      }
    },
  R4 = new Set(['x', 'y', 'z']),
  O4 = fl.filter((e) => !R4.has(e));
function L4(e) {
  const t = [];
  return (
    O4.forEach((r) => {
      const n = e.getValue(r);
      n !== void 0 &&
        (t.push([r, n.get()]), n.set(r.startsWith('scale') ? 1 : 0));
    }),
    t
  );
}
const bs = {
  width: ({ x: e }, { paddingLeft: t = '0', paddingRight: r = '0' }) =>
    e.max - e.min - parseFloat(t) - parseFloat(r),
  height: ({ y: e }, { paddingTop: t = '0', paddingBottom: r = '0' }) =>
    e.max - e.min - parseFloat(t) - parseFloat(r),
  top: (e, { top: t }) => parseFloat(t),
  left: (e, { left: t }) => parseFloat(t),
  bottom: ({ y: e }, { top: t }) => parseFloat(t) + (e.max - e.min),
  right: ({ x: e }, { left: t }) => parseFloat(t) + (e.max - e.min),
  x: Yy(4, 13),
  y: Yy(5, 14),
};
bs.translateX = bs.x;
bs.translateY = bs.y;
const Hw = (e) => (t) => t.test(e),
  M4 = { test: (e) => e === 'auto', parse: (e) => e },
  Qw = [Ts, $e, Pr, hi, DR, MR, M4],
  Jy = (e) => Qw.find(Hw(e)),
  ao = new Set();
let ph = !1,
  hh = !1;
function Gw() {
  if (hh) {
    const e = Array.from(ao).filter((n) => n.needsMeasurement),
      t = new Set(e.map((n) => n.element)),
      r = new Map();
    t.forEach((n) => {
      const i = L4(n);
      i.length && (r.set(n, i), n.render());
    }),
      e.forEach((n) => n.measureInitialState()),
      t.forEach((n) => {
        n.render();
        const i = r.get(n);
        i &&
          i.forEach(([o, s]) => {
            var l;
            (l = n.getValue(o)) === null || l === void 0 || l.set(s);
          });
      }),
      e.forEach((n) => n.measureEndState()),
      e.forEach((n) => {
        n.suspendedScrollY !== void 0 && window.scrollTo(0, n.suspendedScrollY);
      });
  }
  (hh = !1), (ph = !1), ao.forEach((e) => e.complete()), ao.clear();
}
function Kw() {
  ao.forEach((e) => {
    e.readKeyframes(), e.needsMeasurement && (hh = !0);
  });
}
function D4() {
  Kw(), Gw();
}
class ag {
  constructor(t, r, n, i, o, s = !1) {
    (this.isComplete = !1),
      (this.isAsync = !1),
      (this.needsMeasurement = !1),
      (this.isScheduled = !1),
      (this.unresolvedKeyframes = [...t]),
      (this.onComplete = r),
      (this.name = n),
      (this.motionValue = i),
      (this.element = o),
      (this.isAsync = s);
  }
  scheduleResolve() {
    (this.isScheduled = !0),
      this.isAsync
        ? (ao.add(this),
          ph || ((ph = !0), ct.read(Kw), ct.resolveKeyframes(Gw)))
        : (this.readKeyframes(), this.complete());
  }
  readKeyframes() {
    const {
      unresolvedKeyframes: t,
      name: r,
      element: n,
      motionValue: i,
    } = this;
    for (let o = 0; o < t.length; o++)
      if (t[o] === null)
        if (o === 0) {
          const s = i == null ? void 0 : i.get(),
            l = t[t.length - 1];
          if (s !== void 0) t[0] = s;
          else if (n && r) {
            const c = n.readValue(r, l);
            c != null && (t[0] = c);
          }
          t[0] === void 0 && (t[0] = l), i && s === void 0 && i.set(t[0]);
        } else t[o] = t[o - 1];
  }
  setFinalKeyframe() {}
  measureInitialState() {}
  renderEndStyles() {}
  measureEndState() {}
  complete() {
    (this.isComplete = !0),
      this.onComplete(this.unresolvedKeyframes, this.finalKeyframe),
      ao.delete(this);
  }
  cancel() {
    this.isComplete || ((this.isScheduled = !1), ao.delete(this));
  }
  resume() {
    this.isComplete || this.scheduleResolve();
  }
}
const lg = (e, t) => (r) =>
    !!(
      (dl(r) && OR.test(r) && r.startsWith(e)) ||
      (t && !LR(r) && Object.prototype.hasOwnProperty.call(r, t))
    ),
  Xw = (e, t, r) => (n) => {
    if (!dl(n)) return n;
    const [i, o, s, l] = n.match(Xm);
    return {
      [e]: parseFloat(i),
      [t]: parseFloat(o),
      [r]: parseFloat(s),
      alpha: l !== void 0 ? parseFloat(l) : 1,
    };
  },
  z4 = (e) => Ri(0, 255, e),
  Gd = { ...Ts, transform: (e) => Math.round(z4(e)) },
  eo = {
    test: lg('rgb', 'red'),
    parse: Xw('red', 'green', 'blue'),
    transform: ({ red: e, green: t, blue: r, alpha: n = 1 }) =>
      'rgba(' +
      Gd.transform(e) +
      ', ' +
      Gd.transform(t) +
      ', ' +
      Gd.transform(r) +
      ', ' +
      wa(ba.transform(n)) +
      ')',
  };
function $4(e) {
  let t = '',
    r = '',
    n = '',
    i = '';
  return (
    e.length > 5
      ? ((t = e.substring(1, 3)),
        (r = e.substring(3, 5)),
        (n = e.substring(5, 7)),
        (i = e.substring(7, 9)))
      : ((t = e.substring(1, 2)),
        (r = e.substring(2, 3)),
        (n = e.substring(3, 4)),
        (i = e.substring(4, 5)),
        (t += t),
        (r += r),
        (n += n),
        (i += i)),
    {
      red: parseInt(t, 16),
      green: parseInt(r, 16),
      blue: parseInt(n, 16),
      alpha: i ? parseInt(i, 16) / 255 : 1,
    }
  );
}
const mh = { test: lg('#'), parse: $4, transform: eo.transform },
  Qo = {
    test: lg('hsl', 'hue'),
    parse: Xw('hue', 'saturation', 'lightness'),
    transform: ({ hue: e, saturation: t, lightness: r, alpha: n = 1 }) =>
      'hsla(' +
      Math.round(e) +
      ', ' +
      Pr.transform(wa(t)) +
      ', ' +
      Pr.transform(wa(r)) +
      ', ' +
      wa(ba.transform(n)) +
      ')',
  },
  sn = {
    test: (e) => eo.test(e) || mh.test(e) || Qo.test(e),
    parse: (e) =>
      eo.test(e) ? eo.parse(e) : Qo.test(e) ? Qo.parse(e) : mh.parse(e),
    transform: (e) =>
      dl(e) ? e : e.hasOwnProperty('red') ? eo.transform(e) : Qo.transform(e),
  };
function N4(e) {
  var t, r;
  return (
    isNaN(e) &&
    dl(e) &&
    (((t = e.match(Xm)) === null || t === void 0 ? void 0 : t.length) || 0) +
      (((r = e.match(RR)) === null || r === void 0 ? void 0 : r.length) || 0) >
      0
  );
}
const Yw = 'number',
  Jw = 'color',
  j4 = 'var',
  B4 = 'var(',
  Zy = '${}',
  V4 =
    /var\s*\(\s*--(?:[\w-]+\s*|[\w-]+\s*,(?:\s*[^)(\s]|\s*\((?:[^)(]|\([^)(]*\))*\))+\s*)\)|#[\da-f]{3,8}|(?:rgb|hsl)a?\((?:-?[\d.]+%?[,\s]+){2}-?[\d.]+%?\s*(?:[,/]\s*)?(?:\b\d+(?:\.\d+)?|\.\d+)?%?\)|-?(?:\d+(?:\.\d+)?|\.\d+)/giu;
function Za(e) {
  const t = e.toString(),
    r = [],
    n = { color: [], number: [], var: [] },
    i = [];
  let o = 0;
  const l = t
    .replace(
      V4,
      (c) => (
        sn.test(c)
          ? (n.color.push(o), i.push(Jw), r.push(sn.parse(c)))
          : c.startsWith(B4)
            ? (n.var.push(o), i.push(j4), r.push(c))
            : (n.number.push(o), i.push(Yw), r.push(parseFloat(c))),
        ++o,
        Zy
      ),
    )
    .split(Zy);
  return { values: r, split: l, indexes: n, types: i };
}
function Zw(e) {
  return Za(e).values;
}
function eS(e) {
  const { split: t, types: r } = Za(e),
    n = t.length;
  return (i) => {
    let o = '';
    for (let s = 0; s < n; s++)
      if (((o += t[s]), i[s] !== void 0)) {
        const l = r[s];
        l === Yw
          ? (o += wa(i[s]))
          : l === Jw
            ? (o += sn.transform(i[s]))
            : (o += i[s]);
      }
    return o;
  };
}
const W4 = (e) => (typeof e == 'number' ? 0 : e);
function U4(e) {
  const t = Zw(e);
  return eS(e)(t.map(W4));
}
const Oi = {
    test: N4,
    parse: Zw,
    createTransformer: eS,
    getAnimatableNone: U4,
  },
  H4 = new Set(['brightness', 'contrast', 'saturate', 'opacity']);
function Q4(e) {
  const [t, r] = e.slice(0, -1).split('(');
  if (t === 'drop-shadow') return e;
  const [n] = r.match(Xm) || [];
  if (!n) return e;
  const i = r.replace(n, '');
  let o = H4.has(t) ? 1 : 0;
  return n !== r && (o *= 100), t + '(' + o + i + ')';
}
const G4 = /\b([a-z-]*)\(.*?\)/gu,
  gh = {
    ...Oi,
    getAnimatableNone: (e) => {
      const t = e.match(G4);
      return t ? t.map(Q4).join(' ') : e;
    },
  },
  K4 = {
    ...Ym,
    color: sn,
    backgroundColor: sn,
    outlineColor: sn,
    fill: sn,
    stroke: sn,
    borderColor: sn,
    borderTopColor: sn,
    borderRightColor: sn,
    borderBottomColor: sn,
    borderLeftColor: sn,
    filter: gh,
    WebkitFilter: gh,
  },
  ug = (e) => K4[e];
function tS(e, t) {
  let r = ug(e);
  return (
    r !== gh && (r = Oi), r.getAnimatableNone ? r.getAnimatableNone(t) : void 0
  );
}
const X4 = new Set(['auto', 'none', '0']);
function Y4(e, t, r) {
  let n = 0,
    i;
  for (; n < e.length && !i; ) {
    const o = e[n];
    typeof o == 'string' && !X4.has(o) && Za(o).values.length && (i = e[n]),
      n++;
  }
  if (i && r) for (const o of t) e[o] = tS(r, i);
}
class nS extends ag {
  constructor(t, r, n, i, o) {
    super(t, r, n, i, o, !0);
  }
  readKeyframes() {
    const { unresolvedKeyframes: t, element: r, name: n } = this;
    if (!r || !r.current) return;
    super.readKeyframes();
    for (let c = 0; c < t.length; c++) {
      let h = t[c];
      if (typeof h == 'string' && ((h = h.trim()), Jm(h))) {
        const y = Uw(h, r.current);
        y !== void 0 && (t[c] = y),
          c === t.length - 1 && (this.finalKeyframe = h);
      }
    }
    if ((this.resolveNoneKeyframes(), !F4.has(n) || t.length !== 2)) return;
    const [i, o] = t,
      s = Jy(i),
      l = Jy(o);
    if (s !== l)
      if (Ky(s) && Ky(l))
        for (let c = 0; c < t.length; c++) {
          const h = t[c];
          typeof h == 'string' && (t[c] = parseFloat(h));
        }
      else this.needsMeasurement = !0;
  }
  resolveNoneKeyframes() {
    const { unresolvedKeyframes: t, name: r } = this,
      n = [];
    for (let i = 0; i < t.length; i++) P4(t[i]) && n.push(i);
    n.length && Y4(t, n, r);
  }
  measureInitialState() {
    const { element: t, unresolvedKeyframes: r, name: n } = this;
    if (!t || !t.current) return;
    n === 'height' && (this.suspendedScrollY = window.pageYOffset),
      (this.measuredOrigin = bs[n](
        t.measureViewportBox(),
        window.getComputedStyle(t.current),
      )),
      (r[0] = this.measuredOrigin);
    const i = r[r.length - 1];
    i !== void 0 && t.getValue(n, i).jump(i, !1);
  }
  measureEndState() {
    var t;
    const { element: r, name: n, unresolvedKeyframes: i } = this;
    if (!r || !r.current) return;
    const o = r.getValue(n);
    o && o.jump(this.measuredOrigin, !1);
    const s = i.length - 1,
      l = i[s];
    (i[s] = bs[n](r.measureViewportBox(), window.getComputedStyle(r.current))),
      l !== null && this.finalKeyframe === void 0 && (this.finalKeyframe = l),
      !((t = this.removedTransforms) === null || t === void 0) &&
        t.length &&
        this.removedTransforms.forEach(([c, h]) => {
          r.getValue(c).set(h);
        }),
      this.resolveNoneKeyframes();
  }
}
function rS(e) {
  let t;
  return () => (t === void 0 && (t = e()), t);
}
let Ru;
function J4() {
  Ru = void 0;
}
const Kr = {
    now: () => (
      Ru === void 0 &&
        Kr.set(
          Jt.isProcessing || mR.useManualTiming
            ? Jt.timestamp
            : performance.now(),
        ),
      Ru
    ),
    set: (e) => {
      (Ru = e), queueMicrotask(J4);
    },
  },
  e0 = (e, t) =>
    t === 'zIndex'
      ? !1
      : !!(
          typeof e == 'number' ||
          Array.isArray(e) ||
          (typeof e == 'string' &&
            (Oi.test(e) || e === '0') &&
            !e.startsWith('url('))
        );
function Z4(e) {
  const t = e[0];
  if (e.length === 1) return !0;
  for (let r = 0; r < e.length; r++) if (e[r] !== t) return !0;
}
function eO(e, t, r, n) {
  const i = e[0];
  if (i === null) return !1;
  if (t === 'display' || t === 'visibility') return !0;
  const o = e[e.length - 1],
    s = e0(i, t),
    l = e0(o, t);
  return !s || !l ? !1 : Z4(e) || (r === 'spring' && n);
}
const tO = 40;
class iS {
  constructor({
    autoplay: t = !0,
    delay: r = 0,
    type: n = 'keyframes',
    repeat: i = 0,
    repeatDelay: o = 0,
    repeatType: s = 'loop',
    ...l
  }) {
    (this.isStopped = !1),
      (this.hasAttemptedResolve = !1),
      (this.createdAt = Kr.now()),
      (this.options = {
        autoplay: t,
        delay: r,
        type: n,
        repeat: i,
        repeatDelay: o,
        repeatType: s,
        ...l,
      }),
      this.updateFinishedPromise();
  }
  calcStartTime() {
    return this.resolvedAt
      ? this.resolvedAt - this.createdAt > tO
        ? this.resolvedAt
        : this.createdAt
      : this.createdAt;
  }
  get resolved() {
    return !this._resolved && !this.hasAttemptedResolve && D4(), this._resolved;
  }
  onKeyframesResolved(t, r) {
    (this.resolvedAt = Kr.now()), (this.hasAttemptedResolve = !0);
    const {
      name: n,
      type: i,
      velocity: o,
      delay: s,
      onComplete: l,
      onUpdate: c,
      isGenerator: h,
    } = this.options;
    if (!h && !eO(t, n, i, o))
      if (s) this.options.duration = 0;
      else {
        c == null || c(ff(t, this.options, r)),
          l == null || l(),
          this.resolveFinishedPromise();
        return;
      }
    const y = this.initPlayback(t, r);
    y !== !1 &&
      ((this._resolved = { keyframes: t, finalKeyframe: r, ...y }),
      this.onPostResolved());
  }
  onPostResolved() {}
  then(t, r) {
    return this.currentFinishedPromise.then(t, r);
  }
  updateFinishedPromise() {
    this.currentFinishedPromise = new Promise((t) => {
      this.resolveFinishedPromise = t;
    });
  }
}
function oS(e, t) {
  return t ? e * (1e3 / t) : 0;
}
const nO = 5;
function sS(e, t, r) {
  const n = Math.max(t - nO, 0);
  return oS(r - e(n), t - n);
}
const Kd = 0.001,
  rO = 0.01,
  iO = 10,
  oO = 0.05,
  sO = 1;
function aO({
  duration: e = 800,
  bounce: t = 0.25,
  velocity: r = 0,
  mass: n = 1,
}) {
  let i,
    o,
    s = 1 - t;
  (s = Ri(oO, sO, s)),
    (e = Ri(rO, iO, Gr(e))),
    s < 1
      ? ((i = (h) => {
          const y = h * s,
            m = y * e,
            x = y - r,
            I = _h(h, s),
            $ = Math.exp(-m);
          return Kd - (x / I) * $;
        }),
        (o = (h) => {
          const m = h * s * e,
            x = m * r + r,
            I = Math.pow(s, 2) * Math.pow(h, 2) * e,
            $ = Math.exp(-m),
            j = _h(Math.pow(h, 2), s);
          return ((-i(h) + Kd > 0 ? -1 : 1) * ((x - I) * $)) / j;
        }))
      : ((i = (h) => {
          const y = Math.exp(-h * e),
            m = (h - r) * e + 1;
          return -Kd + y * m;
        }),
        (o = (h) => {
          const y = Math.exp(-h * e),
            m = (r - h) * (e * e);
          return y * m;
        }));
  const l = 5 / e,
    c = uO(i, o, l);
  if (((e = Qr(e)), isNaN(c)))
    return { stiffness: 100, damping: 10, duration: e };
  {
    const h = Math.pow(c, 2) * n;
    return { stiffness: h, damping: s * 2 * Math.sqrt(n * h), duration: e };
  }
}
const lO = 12;
function uO(e, t, r) {
  let n = r;
  for (let i = 1; i < lO; i++) n = n - e(n) / t(n);
  return n;
}
function _h(e, t) {
  return e * Math.sqrt(1 - t * t);
}
const cO = ['duration', 'bounce'],
  fO = ['stiffness', 'damping', 'mass'];
function t0(e, t) {
  return t.some((r) => e[r] !== void 0);
}
function dO(e) {
  let t = {
    velocity: 0,
    stiffness: 100,
    damping: 10,
    mass: 1,
    isResolvedFromDuration: !1,
    ...e,
  };
  if (!t0(e, fO) && t0(e, cO)) {
    const r = aO(e);
    (t = { ...t, ...r, mass: 1 }), (t.isResolvedFromDuration = !0);
  }
  return t;
}
function aS({ keyframes: e, restDelta: t, restSpeed: r, ...n }) {
  const i = e[0],
    o = e[e.length - 1],
    s = { done: !1, value: i },
    {
      stiffness: l,
      damping: c,
      mass: h,
      duration: y,
      velocity: m,
      isResolvedFromDuration: x,
    } = dO({ ...n, velocity: -Gr(n.velocity || 0) }),
    I = m || 0,
    $ = c / (2 * Math.sqrt(l * h)),
    j = o - i,
    G = Gr(Math.sqrt(l / h)),
    C = Math.abs(j) < 5;
  r || (r = C ? 0.01 : 2), t || (t = C ? 0.005 : 0.5);
  let T;
  if ($ < 1) {
    const q = _h(G, $);
    T = (H) => {
      const ie = Math.exp(-$ * G * H);
      return (
        o - ie * (((I + $ * G * j) / q) * Math.sin(q * H) + j * Math.cos(q * H))
      );
    };
  } else if ($ === 1) T = (q) => o - Math.exp(-G * q) * (j + (I + G * j) * q);
  else {
    const q = G * Math.sqrt($ * $ - 1);
    T = (H) => {
      const ie = Math.exp(-$ * G * H),
        he = Math.min(q * H, 300);
      return (
        o - (ie * ((I + $ * G * j) * Math.sinh(he) + q * j * Math.cosh(he))) / q
      );
    };
  }
  return {
    calculatedDuration: (x && y) || null,
    next: (q) => {
      const H = T(q);
      if (x) s.done = q >= y;
      else {
        let ie = 0;
        $ < 1 && (ie = q === 0 ? Qr(I) : sS(T, q, H));
        const he = Math.abs(ie) <= r,
          le = Math.abs(o - H) <= t;
        s.done = he && le;
      }
      return (s.value = s.done ? o : H), s;
    },
  };
}
function n0({
  keyframes: e,
  velocity: t = 0,
  power: r = 0.8,
  timeConstant: n = 325,
  bounceDamping: i = 10,
  bounceStiffness: o = 500,
  modifyTarget: s,
  min: l,
  max: c,
  restDelta: h = 0.5,
  restSpeed: y,
}) {
  const m = e[0],
    x = { done: !1, value: m },
    I = (de) => (l !== void 0 && de < l) || (c !== void 0 && de > c),
    $ = (de) =>
      l === void 0
        ? c
        : c === void 0 || Math.abs(l - de) < Math.abs(c - de)
          ? l
          : c;
  let j = r * t;
  const G = m + j,
    C = s === void 0 ? G : s(G);
  C !== G && (j = C - m);
  const T = (de) => -j * Math.exp(-de / n),
    q = (de) => C + T(de),
    H = (de) => {
      const Fe = T(de),
        Ae = q(de);
      (x.done = Math.abs(Fe) <= h), (x.value = x.done ? C : Ae);
    };
  let ie, he;
  const le = (de) => {
    I(x.value) &&
      ((ie = de),
      (he = aS({
        keyframes: [x.value, $(x.value)],
        velocity: sS(q, de, x.value),
        damping: i,
        stiffness: o,
        restDelta: h,
        restSpeed: y,
      })));
  };
  return (
    le(0),
    {
      calculatedDuration: null,
      next: (de) => {
        let Fe = !1;
        return (
          !he && ie === void 0 && ((Fe = !0), H(de), le(de)),
          ie !== void 0 && de >= ie ? he.next(de - ie) : (!Fe && H(de), x)
        );
      },
    }
  );
}
const lS = (e, t, r) =>
    (((1 - 3 * r + 3 * t) * e + (3 * r - 6 * t)) * e + 3 * t) * e,
  pO = 1e-7,
  hO = 12;
function mO(e, t, r, n, i) {
  let o,
    s,
    l = 0;
  do (s = t + (r - t) / 2), (o = lS(s, n, i) - e), o > 0 ? (r = s) : (t = s);
  while (Math.abs(o) > pO && ++l < hO);
  return s;
}
function hl(e, t, r, n) {
  if (e === t && r === n) return un;
  const i = (o) => mO(o, 0, 1, e, r);
  return (o) => (o === 0 || o === 1 ? o : lS(i(o), t, n));
}
const gO = hl(0.42, 0, 1, 1),
  _O = hl(0, 0, 0.58, 1),
  uS = hl(0.42, 0, 0.58, 1),
  yO = (e) => Array.isArray(e) && typeof e[0] != 'number',
  cS = (e) => (t) => (t <= 0.5 ? e(2 * t) / 2 : (2 - e(2 * (1 - t))) / 2),
  fS = (e) => (t) => 1 - e(1 - t),
  cg = (e) => 1 - Math.sin(Math.acos(e)),
  dS = fS(cg),
  vO = cS(cg),
  pS = hl(0.33, 1.53, 0.69, 0.99),
  fg = fS(pS),
  bO = cS(fg),
  wO = (e) =>
    (e *= 2) < 1 ? 0.5 * fg(e) : 0.5 * (2 - Math.pow(2, -10 * (e - 1))),
  r0 = {
    linear: un,
    easeIn: gO,
    easeInOut: uS,
    easeOut: _O,
    circIn: cg,
    circInOut: vO,
    circOut: dS,
    backIn: fg,
    backInOut: bO,
    backOut: pS,
    anticipate: wO,
  },
  i0 = (e) => {
    if (Array.isArray(e)) {
      ch(e.length === 4);
      const [t, r, n, i] = e;
      return hl(t, r, n, i);
    } else if (typeof e == 'string') return ch(r0[e] !== void 0), r0[e];
    return e;
  },
  el = (e, t, r) => {
    const n = t - e;
    return n === 0 ? 1 : (r - e) / n;
  },
  qt = (e, t, r) => e + (t - e) * r;
function Xd(e, t, r) {
  return (
    r < 0 && (r += 1),
    r > 1 && (r -= 1),
    r < 1 / 6
      ? e + (t - e) * 6 * r
      : r < 1 / 2
        ? t
        : r < 2 / 3
          ? e + (t - e) * (2 / 3 - r) * 6
          : e
  );
}
function SO({ hue: e, saturation: t, lightness: r, alpha: n }) {
  (e /= 360), (t /= 100), (r /= 100);
  let i = 0,
    o = 0,
    s = 0;
  if (!t) i = o = s = r;
  else {
    const l = r < 0.5 ? r * (1 + t) : r + t - r * t,
      c = 2 * r - l;
    (i = Xd(c, l, e + 1 / 3)), (o = Xd(c, l, e)), (s = Xd(c, l, e - 1 / 3));
  }
  return {
    red: Math.round(i * 255),
    green: Math.round(o * 255),
    blue: Math.round(s * 255),
    alpha: n,
  };
}
function gc(e, t) {
  return (r) => (r > 0 ? t : e);
}
const Yd = (e, t, r) => {
    const n = e * e,
      i = r * (t * t - n) + n;
    return i < 0 ? 0 : Math.sqrt(i);
  },
  xO = [mh, eo, Qo],
  kO = (e) => xO.find((t) => t.test(e));
function o0(e) {
  const t = kO(e);
  if (!t) return !1;
  let r = t.parse(e);
  return t === Qo && (r = SO(r)), r;
}
const s0 = (e, t) => {
    const r = o0(e),
      n = o0(t);
    if (!r || !n) return gc(e, t);
    const i = { ...r };
    return (o) => (
      (i.red = Yd(r.red, n.red, o)),
      (i.green = Yd(r.green, n.green, o)),
      (i.blue = Yd(r.blue, n.blue, o)),
      (i.alpha = qt(r.alpha, n.alpha, o)),
      eo.transform(i)
    );
  },
  yh = new Set(['none', 'hidden']);
function EO(e, t) {
  return yh.has(e) ? (r) => (r <= 0 ? e : t) : (r) => (r >= 1 ? t : e);
}
function TO(e, t) {
  return (r) => qt(e, t, r);
}
function dg(e) {
  return typeof e == 'number'
    ? TO
    : typeof e == 'string'
      ? Jm(e)
        ? gc
        : sn.test(e)
          ? s0
          : PO
      : Array.isArray(e)
        ? hS
        : typeof e == 'object'
          ? sn.test(e)
            ? s0
            : CO
          : gc;
}
function hS(e, t) {
  const r = [...e],
    n = r.length,
    i = e.map((o, s) => dg(o)(o, t[s]));
  return (o) => {
    for (let s = 0; s < n; s++) r[s] = i[s](o);
    return r;
  };
}
function CO(e, t) {
  const r = { ...e, ...t },
    n = {};
  for (const i in r)
    e[i] !== void 0 && t[i] !== void 0 && (n[i] = dg(e[i])(e[i], t[i]));
  return (i) => {
    for (const o in n) r[o] = n[o](i);
    return r;
  };
}
function AO(e, t) {
  var r;
  const n = [],
    i = { color: 0, var: 0, number: 0 };
  for (let o = 0; o < t.values.length; o++) {
    const s = t.types[o],
      l = e.indexes[s][i[s]],
      c = (r = e.values[l]) !== null && r !== void 0 ? r : 0;
    (n[o] = c), i[s]++;
  }
  return n;
}
const PO = (e, t) => {
  const r = Oi.createTransformer(t),
    n = Za(e),
    i = Za(t);
  return n.indexes.var.length === i.indexes.var.length &&
    n.indexes.color.length === i.indexes.color.length &&
    n.indexes.number.length >= i.indexes.number.length
    ? (yh.has(e) && !i.values.length) || (yh.has(t) && !n.values.length)
      ? EO(e, t)
      : Hr(hS(AO(n, i), i.values), r)
    : gc(e, t);
};
function mS(e, t, r) {
  return typeof e == 'number' && typeof t == 'number' && typeof r == 'number'
    ? qt(e, t, r)
    : dg(e)(e, t);
}
function qO(e, t, r) {
  const n = [],
    i = r || mS,
    o = e.length - 1;
  for (let s = 0; s < o; s++) {
    let l = i(e[s], e[s + 1]);
    if (t) {
      const c = Array.isArray(t) ? t[s] || un : t;
      l = Hr(c, l);
    }
    n.push(l);
  }
  return n;
}
function IO(e, t, { clamp: r = !0, ease: n, mixer: i } = {}) {
  const o = e.length;
  if ((ch(o === t.length), o === 1)) return () => t[0];
  if (o === 2 && e[0] === e[1]) return () => t[1];
  e[0] > e[o - 1] && ((e = [...e].reverse()), (t = [...t].reverse()));
  const s = qO(t, n, i),
    l = s.length,
    c = (h) => {
      let y = 0;
      if (l > 1) for (; y < e.length - 2 && !(h < e[y + 1]); y++);
      const m = el(e[y], e[y + 1], h);
      return s[y](m);
    };
  return r ? (h) => c(Ri(e[0], e[o - 1], h)) : c;
}
function FO(e, t) {
  const r = e[e.length - 1];
  for (let n = 1; n <= t; n++) {
    const i = el(0, t, n);
    e.push(qt(r, 1, i));
  }
}
function RO(e) {
  const t = [0];
  return FO(t, e.length - 1), t;
}
function OO(e, t) {
  return e.map((r) => r * t);
}
function LO(e, t) {
  return e.map(() => t || uS).splice(0, e.length - 1);
}
function _c({
  duration: e = 300,
  keyframes: t,
  times: r,
  ease: n = 'easeInOut',
}) {
  const i = yO(n) ? n.map(i0) : i0(n),
    o = { done: !1, value: t[0] },
    s = OO(r && r.length === t.length ? r : RO(t), e),
    l = IO(s, t, { ease: Array.isArray(i) ? i : LO(t, i) });
  return {
    calculatedDuration: e,
    next: (c) => ((o.value = l(c)), (o.done = c >= e), o),
  };
}
const a0 = 2e4;
function MO(e) {
  let t = 0;
  const r = 50;
  let n = e.next(t);
  for (; !n.done && t < a0; ) (t += r), (n = e.next(t));
  return t >= a0 ? 1 / 0 : t;
}
const DO = (e) => {
    const t = ({ timestamp: r }) => e(r);
    return {
      start: () => ct.update(t, !0),
      stop: () => ti(t),
      now: () => (Jt.isProcessing ? Jt.timestamp : Kr.now()),
    };
  },
  zO = { decay: n0, inertia: n0, tween: _c, keyframes: _c, spring: aS },
  $O = (e) => e / 100;
class pg extends iS {
  constructor(t) {
    super(t),
      (this.holdTime = null),
      (this.cancelTime = null),
      (this.currentTime = 0),
      (this.playbackSpeed = 1),
      (this.pendingPlayState = 'running'),
      (this.startTime = null),
      (this.state = 'idle'),
      (this.stop = () => {
        if (
          (this.resolver.cancel(), (this.isStopped = !0), this.state === 'idle')
        )
          return;
        this.teardown();
        const { onStop: c } = this.options;
        c && c();
      });
    const { name: r, motionValue: n, element: i, keyframes: o } = this.options,
      s = (i == null ? void 0 : i.KeyframeResolver) || ag,
      l = (c, h) => this.onKeyframesResolved(c, h);
    (this.resolver = new s(o, l, r, n, i)), this.resolver.scheduleResolve();
  }
  initPlayback(t) {
    const {
        type: r = 'keyframes',
        repeat: n = 0,
        repeatDelay: i = 0,
        repeatType: o,
        velocity: s = 0,
      } = this.options,
      l = zO[r] || _c;
    let c, h;
    l !== _c &&
      typeof t[0] != 'number' &&
      ((c = Hr($O, mS(t[0], t[1]))), (t = [0, 100]));
    const y = l({ ...this.options, keyframes: t });
    o === 'mirror' &&
      (h = l({ ...this.options, keyframes: [...t].reverse(), velocity: -s })),
      y.calculatedDuration === null && (y.calculatedDuration = MO(y));
    const { calculatedDuration: m } = y,
      x = m + i,
      I = x * (n + 1) - i;
    return {
      generator: y,
      mirroredGenerator: h,
      mapPercentToKeyframes: c,
      calculatedDuration: m,
      resolvedDuration: x,
      totalDuration: I,
    };
  }
  onPostResolved() {
    const { autoplay: t = !0 } = this.options;
    this.play(),
      this.pendingPlayState === 'paused' || !t
        ? this.pause()
        : (this.state = this.pendingPlayState);
  }
  tick(t, r = !1) {
    const { resolved: n } = this;
    if (!n) {
      const { keyframes: de } = this.options;
      return { done: !0, value: de[de.length - 1] };
    }
    const {
      finalKeyframe: i,
      generator: o,
      mirroredGenerator: s,
      mapPercentToKeyframes: l,
      keyframes: c,
      calculatedDuration: h,
      totalDuration: y,
      resolvedDuration: m,
    } = n;
    if (this.startTime === null) return o.next(0);
    const {
      delay: x,
      repeat: I,
      repeatType: $,
      repeatDelay: j,
      onUpdate: G,
    } = this.options;
    this.speed > 0
      ? (this.startTime = Math.min(this.startTime, t))
      : this.speed < 0 &&
        (this.startTime = Math.min(t - y / this.speed, this.startTime)),
      r
        ? (this.currentTime = t)
        : this.holdTime !== null
          ? (this.currentTime = this.holdTime)
          : (this.currentTime = Math.round(t - this.startTime) * this.speed);
    const C = this.currentTime - x * (this.speed >= 0 ? 1 : -1),
      T = this.speed >= 0 ? C < 0 : C > y;
    (this.currentTime = Math.max(C, 0)),
      this.state === 'finished' &&
        this.holdTime === null &&
        (this.currentTime = y);
    let q = this.currentTime,
      H = o;
    if (I) {
      const de = Math.min(this.currentTime, y) / m;
      let Fe = Math.floor(de),
        Ae = de % 1;
      !Ae && de >= 1 && (Ae = 1),
        Ae === 1 && Fe--,
        (Fe = Math.min(Fe, I + 1)),
        !!(Fe % 2) &&
          ($ === 'reverse'
            ? ((Ae = 1 - Ae), j && (Ae -= j / m))
            : $ === 'mirror' && (H = s)),
        (q = Ri(0, 1, Ae) * m);
    }
    const ie = T ? { done: !1, value: c[0] } : H.next(q);
    l && (ie.value = l(ie.value));
    let { done: he } = ie;
    !T &&
      h !== null &&
      (he = this.speed >= 0 ? this.currentTime >= y : this.currentTime <= 0);
    const le =
      this.holdTime === null &&
      (this.state === 'finished' || (this.state === 'running' && he));
    return (
      le && i !== void 0 && (ie.value = ff(c, this.options, i)),
      G && G(ie.value),
      le && this.finish(),
      ie
    );
  }
  get duration() {
    const { resolved: t } = this;
    return t ? Gr(t.calculatedDuration) : 0;
  }
  get time() {
    return Gr(this.currentTime);
  }
  set time(t) {
    (t = Qr(t)),
      (this.currentTime = t),
      this.holdTime !== null || this.speed === 0
        ? (this.holdTime = t)
        : this.driver && (this.startTime = this.driver.now() - t / this.speed);
  }
  get speed() {
    return this.playbackSpeed;
  }
  set speed(t) {
    const r = this.playbackSpeed !== t;
    (this.playbackSpeed = t), r && (this.time = Gr(this.currentTime));
  }
  play() {
    if (
      (this.resolver.isScheduled || this.resolver.resume(), !this._resolved)
    ) {
      this.pendingPlayState = 'running';
      return;
    }
    if (this.isStopped) return;
    const { driver: t = DO, onPlay: r, startTime: n } = this.options;
    this.driver || (this.driver = t((o) => this.tick(o))), r && r();
    const i = this.driver.now();
    this.holdTime !== null
      ? (this.startTime = i - this.holdTime)
      : this.startTime
        ? this.state === 'finished' && (this.startTime = i)
        : (this.startTime = n ?? this.calcStartTime()),
      this.state === 'finished' && this.updateFinishedPromise(),
      (this.cancelTime = this.startTime),
      (this.holdTime = null),
      (this.state = 'running'),
      this.driver.start();
  }
  pause() {
    var t;
    if (!this._resolved) {
      this.pendingPlayState = 'paused';
      return;
    }
    (this.state = 'paused'),
      (this.holdTime = (t = this.currentTime) !== null && t !== void 0 ? t : 0);
  }
  complete() {
    this.state !== 'running' && this.play(),
      (this.pendingPlayState = this.state = 'finished'),
      (this.holdTime = null);
  }
  finish() {
    this.teardown(), (this.state = 'finished');
    const { onComplete: t } = this.options;
    t && t();
  }
  cancel() {
    this.cancelTime !== null && this.tick(this.cancelTime),
      this.teardown(),
      this.updateFinishedPromise();
  }
  teardown() {
    (this.state = 'idle'),
      this.stopDriver(),
      this.resolveFinishedPromise(),
      this.updateFinishedPromise(),
      (this.startTime = this.cancelTime = null),
      this.resolver.cancel();
  }
  stopDriver() {
    this.driver && (this.driver.stop(), (this.driver = void 0));
  }
  sample(t) {
    return (this.startTime = 0), this.tick(t, !0);
  }
}
const gS = (e) => Array.isArray(e) && typeof e[0] == 'number';
function _S(e) {
  return !!(
    !e ||
    (typeof e == 'string' && e in hg) ||
    gS(e) ||
    (Array.isArray(e) && e.every(_S))
  );
}
const ra = ([e, t, r, n]) => `cubic-bezier(${e}, ${t}, ${r}, ${n})`,
  hg = {
    linear: 'linear',
    ease: 'ease',
    easeIn: 'ease-in',
    easeOut: 'ease-out',
    easeInOut: 'ease-in-out',
    circIn: ra([0, 0.65, 0.55, 1]),
    circOut: ra([0.55, 0, 1, 0.45]),
    backIn: ra([0.31, 0.01, 0.66, -0.59]),
    backOut: ra([0.33, 1.53, 0.69, 0.99]),
  };
function NO(e) {
  return yS(e) || hg.easeOut;
}
function yS(e) {
  if (e) return gS(e) ? ra(e) : Array.isArray(e) ? e.map(NO) : hg[e];
}
function jO(
  e,
  t,
  r,
  {
    delay: n = 0,
    duration: i = 300,
    repeat: o = 0,
    repeatType: s = 'loop',
    ease: l,
    times: c,
  } = {},
) {
  const h = { [t]: r };
  c && (h.offset = c);
  const y = yS(l);
  return (
    Array.isArray(y) && (h.easing = y),
    e.animate(h, {
      delay: n,
      duration: i,
      easing: Array.isArray(y) ? 'linear' : y,
      fill: 'both',
      iterations: o + 1,
      direction: s === 'reverse' ? 'alternate' : 'normal',
    })
  );
}
const BO = rS(() => Object.hasOwnProperty.call(Element.prototype, 'animate')),
  yc = 10,
  VO = 2e4;
function WO(e) {
  return e.type === 'spring' || !_S(e.ease);
}
function UO(e, t) {
  const r = new pg({
    ...t,
    keyframes: e,
    repeat: 0,
    delay: 0,
    isGenerator: !0,
  });
  let n = { done: !1, value: e[0] };
  const i = [];
  let o = 0;
  for (; !n.done && o < VO; ) (n = r.sample(o)), i.push(n.value), (o += yc);
  return { times: void 0, keyframes: i, duration: o - yc, ease: 'linear' };
}
class l0 extends iS {
  constructor(t) {
    super(t);
    const { name: r, motionValue: n, element: i, keyframes: o } = this.options;
    (this.resolver = new nS(
      o,
      (s, l) => this.onKeyframesResolved(s, l),
      r,
      n,
      i,
    )),
      this.resolver.scheduleResolve();
  }
  initPlayback(t, r) {
    var n;
    let {
      duration: i = 300,
      times: o,
      ease: s,
      type: l,
      motionValue: c,
      name: h,
      startTime: y,
    } = this.options;
    if (!(!((n = c.owner) === null || n === void 0) && n.current)) return !1;
    if (WO(this.options)) {
      const {
          onComplete: x,
          onUpdate: I,
          motionValue: $,
          element: j,
          ...G
        } = this.options,
        C = UO(t, G);
      (t = C.keyframes),
        t.length === 1 && (t[1] = t[0]),
        (i = C.duration),
        (o = C.times),
        (s = C.ease),
        (l = 'keyframes');
    }
    const m = jO(c.owner.current, h, t, {
      ...this.options,
      duration: i,
      times: o,
      ease: s,
    });
    return (
      (m.startTime = y ?? this.calcStartTime()),
      this.pendingTimeline
        ? ((m.timeline = this.pendingTimeline), (this.pendingTimeline = void 0))
        : (m.onfinish = () => {
            const { onComplete: x } = this.options;
            c.set(ff(t, this.options, r)),
              x && x(),
              this.cancel(),
              this.resolveFinishedPromise();
          }),
      { animation: m, duration: i, times: o, type: l, ease: s, keyframes: t }
    );
  }
  get duration() {
    const { resolved: t } = this;
    if (!t) return 0;
    const { duration: r } = t;
    return Gr(r);
  }
  get time() {
    const { resolved: t } = this;
    if (!t) return 0;
    const { animation: r } = t;
    return Gr(r.currentTime || 0);
  }
  set time(t) {
    const { resolved: r } = this;
    if (!r) return;
    const { animation: n } = r;
    n.currentTime = Qr(t);
  }
  get speed() {
    const { resolved: t } = this;
    if (!t) return 1;
    const { animation: r } = t;
    return r.playbackRate;
  }
  set speed(t) {
    const { resolved: r } = this;
    if (!r) return;
    const { animation: n } = r;
    n.playbackRate = t;
  }
  get state() {
    const { resolved: t } = this;
    if (!t) return 'idle';
    const { animation: r } = t;
    return r.playState;
  }
  get startTime() {
    const { resolved: t } = this;
    if (!t) return null;
    const { animation: r } = t;
    return r.startTime;
  }
  attachTimeline(t) {
    if (!this._resolved) this.pendingTimeline = t;
    else {
      const { resolved: r } = this;
      if (!r) return un;
      const { animation: n } = r;
      (n.timeline = t), (n.onfinish = null);
    }
    return un;
  }
  play() {
    if (this.isStopped) return;
    const { resolved: t } = this;
    if (!t) return;
    const { animation: r } = t;
    r.playState === 'finished' && this.updateFinishedPromise(), r.play();
  }
  pause() {
    const { resolved: t } = this;
    if (!t) return;
    const { animation: r } = t;
    r.pause();
  }
  stop() {
    if ((this.resolver.cancel(), (this.isStopped = !0), this.state === 'idle'))
      return;
    this.resolveFinishedPromise(), this.updateFinishedPromise();
    const { resolved: t } = this;
    if (!t) return;
    const {
      animation: r,
      keyframes: n,
      duration: i,
      type: o,
      ease: s,
      times: l,
    } = t;
    if (r.playState === 'idle' || r.playState === 'finished') return;
    if (this.time) {
      const {
          motionValue: h,
          onUpdate: y,
          onComplete: m,
          element: x,
          ...I
        } = this.options,
        $ = new pg({
          ...I,
          keyframes: n,
          duration: i,
          type: o,
          ease: s,
          times: l,
          isGenerator: !0,
        }),
        j = Qr(this.time);
      h.setWithVelocity($.sample(j - yc).value, $.sample(j).value, yc);
    }
    const { onStop: c } = this.options;
    c && c(), this.cancel();
  }
  complete() {
    const { resolved: t } = this;
    t && t.animation.finish();
  }
  cancel() {
    const { resolved: t } = this;
    t && t.animation.cancel();
  }
  static supports(t) {
    const {
      motionValue: r,
      name: n,
      repeatDelay: i,
      repeatType: o,
      damping: s,
      type: l,
    } = t;
    return (
      BO() &&
      n &&
      Ow.has(n) &&
      r &&
      r.owner &&
      r.owner.current instanceof HTMLElement &&
      !r.owner.getProps().onUpdate &&
      !i &&
      o !== 'mirror' &&
      s !== 0 &&
      l !== 'inertia'
    );
  }
}
function HO(e, t) {
  let r;
  const n = () => {
    const { currentTime: i } = t,
      s = (i === null ? 0 : i.value) / 100;
    r !== s && e(s), (r = s);
  };
  return ct.update(n, !0), () => ti(n);
}
const QO = rS(() => window.ScrollTimeline !== void 0);
class GO {
  constructor(t) {
    (this.stop = () => this.runAll('stop')),
      (this.animations = t.filter(Boolean));
  }
  then(t, r) {
    return Promise.all(this.animations).then(t).catch(r);
  }
  getAll(t) {
    return this.animations[0][t];
  }
  setAll(t, r) {
    for (let n = 0; n < this.animations.length; n++) this.animations[n][t] = r;
  }
  attachTimeline(t) {
    const r = this.animations.map((n) => {
      if (QO() && n.attachTimeline) n.attachTimeline(t);
      else
        return (
          n.pause(),
          HO((i) => {
            n.time = n.duration * i;
          }, t)
        );
    });
    return () => {
      r.forEach((n, i) => {
        n && n(), this.animations[i].stop();
      });
    };
  }
  get time() {
    return this.getAll('time');
  }
  set time(t) {
    this.setAll('time', t);
  }
  get speed() {
    return this.getAll('speed');
  }
  set speed(t) {
    this.setAll('speed', t);
  }
  get startTime() {
    return this.getAll('startTime');
  }
  get duration() {
    let t = 0;
    for (let r = 0; r < this.animations.length; r++)
      t = Math.max(t, this.animations[r].duration);
    return t;
  }
  runAll(t) {
    this.animations.forEach((r) => r[t]());
  }
  play() {
    this.runAll('play');
  }
  pause() {
    this.runAll('pause');
  }
  cancel() {
    this.runAll('cancel');
  }
  complete() {
    this.runAll('complete');
  }
}
const mg =
  (e, t, r, n = {}, i, o, s) =>
  (l) => {
    const c = sg(n, e) || {},
      h = c.delay || n.delay || 0;
    let { elapsed: y = 0 } = n;
    y = y - Qr(h);
    let m = {
      keyframes: Array.isArray(r) ? r : [null, r],
      ease: 'easeOut',
      velocity: t.getVelocity(),
      ...c,
      delay: -y,
      onUpdate: (I) => {
        t.set(I), c.onUpdate && c.onUpdate(I);
      },
      onComplete: () => {
        l(), c.onComplete && c.onComplete(), s && s();
      },
      onStop: s,
      name: e,
      motionValue: t,
      element: o ? void 0 : i,
    };
    C4(c) || (m = { ...m, ...T4(e, m) }),
      m.duration && (m.duration = Qr(m.duration)),
      m.repeatDelay && (m.repeatDelay = Qr(m.repeatDelay)),
      m.from !== void 0 && (m.keyframes[0] = m.from);
    let x = !1;
    if (
      ((m.type === !1 || (m.duration === 0 && !m.repeatDelay)) &&
        ((m.duration = 0), m.delay === 0 && (x = !0)),
      x && !o && t.get() !== void 0)
    ) {
      const I = ff(m.keyframes, c);
      if (I !== void 0)
        return (
          ct.update(() => {
            m.onUpdate(I), m.onComplete();
          }),
          new GO([])
        );
    }
    return !o && l0.supports(m) ? new l0(m) : new pg(m);
  };
class gg {
  constructor() {
    this.subscriptions = [];
  }
  add(t) {
    return af(this.subscriptions, t), () => lf(this.subscriptions, t);
  }
  notify(t, r, n) {
    const i = this.subscriptions.length;
    if (i)
      if (i === 1) this.subscriptions[0](t, r, n);
      else
        for (let o = 0; o < i; o++) {
          const s = this.subscriptions[o];
          s && s(t, r, n);
        }
  }
  getSize() {
    return this.subscriptions.length;
  }
  clear() {
    this.subscriptions.length = 0;
  }
}
const u0 = 30,
  KO = (e) => !isNaN(parseFloat(e));
class vS {
  constructor(t, r = {}) {
    (this.version = '11.3.31'),
      (this.canTrackVelocity = null),
      (this.events = {}),
      (this.updateAndNotify = (n, i = !0) => {
        const o = Kr.now();
        this.updatedAt !== o && this.setPrevFrameValue(),
          (this.prev = this.current),
          this.setCurrent(n),
          this.current !== this.prev &&
            this.events.change &&
            this.events.change.notify(this.current),
          i &&
            this.events.renderRequest &&
            this.events.renderRequest.notify(this.current);
      }),
      (this.hasAnimated = !1),
      this.setCurrent(t),
      (this.owner = r.owner);
  }
  setCurrent(t) {
    (this.current = t),
      (this.updatedAt = Kr.now()),
      this.canTrackVelocity === null &&
        t !== void 0 &&
        (this.canTrackVelocity = KO(this.current));
  }
  setPrevFrameValue(t = this.current) {
    (this.prevFrameValue = t), (this.prevUpdatedAt = this.updatedAt);
  }
  onChange(t) {
    return this.on('change', t);
  }
  on(t, r) {
    this.events[t] || (this.events[t] = new gg());
    const n = this.events[t].add(r);
    return t === 'change'
      ? () => {
          n(),
            ct.read(() => {
              this.events.change.getSize() || this.stop();
            });
        }
      : n;
  }
  clearListeners() {
    for (const t in this.events) this.events[t].clear();
  }
  attach(t, r) {
    (this.passiveEffect = t), (this.stopPassiveEffect = r);
  }
  set(t, r = !0) {
    !r || !this.passiveEffect
      ? this.updateAndNotify(t, r)
      : this.passiveEffect(t, this.updateAndNotify);
  }
  setWithVelocity(t, r, n) {
    this.set(r),
      (this.prev = void 0),
      (this.prevFrameValue = t),
      (this.prevUpdatedAt = this.updatedAt - n);
  }
  jump(t, r = !0) {
    this.updateAndNotify(t),
      (this.prev = t),
      (this.prevUpdatedAt = this.prevFrameValue = void 0),
      r && this.stop(),
      this.stopPassiveEffect && this.stopPassiveEffect();
  }
  get() {
    return this.current;
  }
  getPrevious() {
    return this.prev;
  }
  getVelocity() {
    const t = Kr.now();
    if (
      !this.canTrackVelocity ||
      this.prevFrameValue === void 0 ||
      t - this.updatedAt > u0
    )
      return 0;
    const r = Math.min(this.updatedAt - this.prevUpdatedAt, u0);
    return oS(parseFloat(this.current) - parseFloat(this.prevFrameValue), r);
  }
  start(t) {
    return (
      this.stop(),
      new Promise((r) => {
        (this.hasAnimated = !0),
          (this.animation = t(r)),
          this.events.animationStart && this.events.animationStart.notify();
      }).then(() => {
        this.events.animationComplete && this.events.animationComplete.notify(),
          this.clearAnimation();
      })
    );
  }
  stop() {
    this.animation &&
      (this.animation.stop(),
      this.events.animationCancel && this.events.animationCancel.notify()),
      this.clearAnimation();
  }
  isAnimating() {
    return !!this.animation;
  }
  clearAnimation() {
    delete this.animation;
  }
  destroy() {
    this.clearListeners(),
      this.stop(),
      this.stopPassiveEffect && this.stopPassiveEffect();
  }
}
function tl(e, t) {
  return new vS(e, t);
}
function XO(e, t, r) {
  e.hasValue(t) ? e.getValue(t).set(r) : e.addValue(t, tl(r));
}
function YO(e, t) {
  const r = cf(e, t);
  let { transitionEnd: n = {}, transition: i = {}, ...o } = r || {};
  o = { ...o, ...n };
  for (const s in o) {
    const l = n4(o[s]);
    XO(e, s, l);
  }
}
function bS(e) {
  return e.props[yw];
}
class JO extends vS {
  constructor() {
    super(...arguments), (this.output = []), (this.counts = new Map());
  }
  add(t) {
    const r = Lw(t);
    if (!r) return;
    const n = this.counts.get(r) || 0;
    this.counts.set(r, n + 1), n === 0 && (this.output.push(r), this.update());
    let i = !1;
    return () => {
      if (i) return;
      i = !0;
      const o = this.counts.get(r) - 1;
      this.counts.set(r, o), o === 0 && (lf(this.output, r), this.update());
    };
  }
  update() {
    this.set(this.output.length ? this.output.join(', ') : 'auto');
  }
}
function ZO(e) {
  return !!(ln(e) && e.add);
}
function vh(e, t) {
  var r;
  if (!e.applyWillChange) return;
  let n = e.getValue('willChange');
  if (
    (!n &&
      !(!((r = e.props.style) === null || r === void 0) && r.willChange) &&
      ((n = new JO('auto')), e.addValue('willChange', n)),
    ZO(n))
  )
    return n.add(t);
}
function eL({ protectedKeys: e, needsAnimating: t }, r) {
  const n = e.hasOwnProperty(r) && t[r] !== !0;
  return (t[r] = !1), n;
}
function wS(e, t, { delay: r = 0, transitionOverride: n, type: i } = {}) {
  var o;
  let { transition: s = e.getDefaultTransition(), transitionEnd: l, ...c } = t;
  n && (s = n);
  const h = [],
    y = i && e.animationState && e.animationState.getState()[i];
  for (const m in c) {
    const x = e.getValue(
        m,
        (o = e.latestValues[m]) !== null && o !== void 0 ? o : null,
      ),
      I = c[m];
    if (I === void 0 || (y && eL(y, m))) continue;
    const $ = { delay: r, ...sg(s || {}, m) };
    let j = !1;
    if (window.MotionHandoffAnimation) {
      const C = bS(e);
      if (C) {
        const T = window.MotionHandoffAnimation(C, m, ct);
        T !== null && (($.startTime = T), (j = !0));
      }
    }
    x.start(
      mg(
        m,
        x,
        I,
        e.shouldReduceMotion && zi.has(m) ? { type: !1 } : $,
        e,
        j,
        vh(e, m),
      ),
    );
    const G = x.animation;
    G && h.push(G);
  }
  return (
    l &&
      Promise.all(h).then(() => {
        ct.update(() => {
          l && YO(e, l);
        });
      }),
    h
  );
}
function bh(e, t, r = {}) {
  var n;
  const i = cf(
    e,
    t,
    r.type === 'exit'
      ? (n = e.presenceContext) === null || n === void 0
        ? void 0
        : n.custom
      : void 0,
  );
  let { transition: o = e.getDefaultTransition() || {} } = i || {};
  r.transitionOverride && (o = r.transitionOverride);
  const s = i ? () => Promise.all(wS(e, i, r)) : () => Promise.resolve(),
    l =
      e.variantChildren && e.variantChildren.size
        ? (h = 0) => {
            const {
              delayChildren: y = 0,
              staggerChildren: m,
              staggerDirection: x,
            } = o;
            return tL(e, t, y + h, m, x, r);
          }
        : () => Promise.resolve(),
    { when: c } = o;
  if (c) {
    const [h, y] = c === 'beforeChildren' ? [s, l] : [l, s];
    return h().then(() => y());
  } else return Promise.all([s(), l(r.delay)]);
}
function tL(e, t, r = 0, n = 0, i = 1, o) {
  const s = [],
    l = (e.variantChildren.size - 1) * n,
    c = i === 1 ? (h = 0) => h * n : (h = 0) => l - h * n;
  return (
    Array.from(e.variantChildren)
      .sort(nL)
      .forEach((h, y) => {
        h.notify('AnimationStart', t),
          s.push(
            bh(h, t, { ...o, delay: r + c(y) }).then(() =>
              h.notify('AnimationComplete', t),
            ),
          );
      }),
    Promise.all(s)
  );
}
function nL(e, t) {
  return e.sortNodePosition(t);
}
function rL(e, t, r = {}) {
  e.notify('AnimationStart', t);
  let n;
  if (Array.isArray(t)) {
    const i = t.map((o) => bh(e, o, r));
    n = Promise.all(i);
  } else if (typeof t == 'string') n = bh(e, t, r);
  else {
    const i = typeof t == 'function' ? cf(e, t, r.custom) : t;
    n = Promise.all(wS(e, i, r));
  }
  return n.then(() => {
    e.notify('AnimationComplete', t);
  });
}
const iL = [...Hm].reverse(),
  oL = Hm.length;
function sL(e) {
  return (t) =>
    Promise.all(t.map(({ animation: r, options: n }) => rL(e, r, n)));
}
function aL(e) {
  let t = sL(e),
    r = c0(),
    n = !0;
  const i = (c) => (h, y) => {
    var m;
    const x = cf(
      e,
      y,
      c === 'exit'
        ? (m = e.presenceContext) === null || m === void 0
          ? void 0
          : m.custom
        : void 0,
    );
    if (x) {
      const { transition: I, transitionEnd: $, ...j } = x;
      h = { ...h, ...j, ...$ };
    }
    return h;
  };
  function o(c) {
    t = c(e);
  }
  function s(c) {
    const h = e.getProps(),
      y = e.getVariantContext(!0) || {},
      m = [],
      x = new Set();
    let I = {},
      $ = 1 / 0;
    for (let G = 0; G < oL; G++) {
      const C = iL[G],
        T = r[C],
        q = h[C] !== void 0 ? h[C] : y[C],
        H = Ya(q),
        ie = C === c ? T.isActive : null;
      ie === !1 && ($ = G);
      let he = q === y[C] && q !== h[C] && H;
      if (
        (he && n && e.manuallyAnimateOnMount && (he = !1),
        (T.protectedKeys = { ...I }),
        (!T.isActive && ie === null) ||
          (!q && !T.prevProp) ||
          Ja(q) ||
          typeof q == 'boolean')
      )
        continue;
      let de =
          lL(T.prevProp, q) ||
          (C === c && T.isActive && !he && H) ||
          (G > $ && H),
        Fe = !1;
      const Ae = Array.isArray(q) ? q : [q];
      let ut = Ae.reduce(i(C), {});
      ie === !1 && (ut = {});
      const { prevResolvedValues: bt = {} } = T,
        ht = { ...bt, ...ut },
        Dt = (wt) => {
          (de = !0),
            x.has(wt) && ((Fe = !0), x.delete(wt)),
            (T.needsAnimating[wt] = !0);
          const qe = e.getValue(wt);
          qe && (qe.liveStyle = !1);
        };
      for (const wt in ht) {
        const qe = ut[wt],
          Qe = bt[wt];
        if (I.hasOwnProperty(wt)) continue;
        let Se = !1;
        fh(qe) && fh(Qe) ? (Se = !Bw(qe, Qe)) : (Se = qe !== Qe),
          Se
            ? qe != null
              ? Dt(wt)
              : x.add(wt)
            : qe !== void 0 && x.has(wt)
              ? Dt(wt)
              : (T.protectedKeys[wt] = !0);
      }
      (T.prevProp = q),
        (T.prevResolvedValues = ut),
        T.isActive && (I = { ...I, ...ut }),
        n && e.blockInitialAnimation && (de = !1),
        de &&
          (!he || Fe) &&
          m.push(...Ae.map((wt) => ({ animation: wt, options: { type: C } })));
    }
    if (x.size) {
      const G = {};
      x.forEach((C) => {
        const T = e.getBaseTarget(C),
          q = e.getValue(C);
        q && (q.liveStyle = !0), (G[C] = T ?? null);
      }),
        m.push({ animation: G });
    }
    let j = !!m.length;
    return (
      n &&
        (h.initial === !1 || h.initial === h.animate) &&
        !e.manuallyAnimateOnMount &&
        (j = !1),
      (n = !1),
      j ? t(m) : Promise.resolve()
    );
  }
  function l(c, h) {
    var y;
    if (r[c].isActive === h) return Promise.resolve();
    (y = e.variantChildren) === null ||
      y === void 0 ||
      y.forEach((x) => {
        var I;
        return (I = x.animationState) === null || I === void 0
          ? void 0
          : I.setActive(c, h);
      }),
      (r[c].isActive = h);
    const m = s(c);
    for (const x in r) r[x].protectedKeys = {};
    return m;
  }
  return {
    animateChanges: s,
    setActive: l,
    setAnimateFunction: o,
    getState: () => r,
    reset: () => {
      (r = c0()), (n = !0);
    },
  };
}
function lL(e, t) {
  return typeof t == 'string' ? t !== e : Array.isArray(t) ? !Bw(t, e) : !1;
}
function Vi(e = !1) {
  return {
    isActive: e,
    protectedKeys: {},
    needsAnimating: {},
    prevResolvedValues: {},
  };
}
function c0() {
  return {
    animate: Vi(!0),
    whileInView: Vi(),
    whileHover: Vi(),
    whileTap: Vi(),
    whileDrag: Vi(),
    whileFocus: Vi(),
    exit: Vi(),
  };
}
class uL extends $i {
  constructor(t) {
    super(t), t.animationState || (t.animationState = aL(t));
  }
  updateAnimationControlsSubscription() {
    const { animate: t } = this.node.getProps();
    Ja(t) && (this.unmountControls = t.subscribe(this.node));
  }
  mount() {
    this.updateAnimationControlsSubscription();
  }
  update() {
    const { animate: t } = this.node.getProps(),
      { animate: r } = this.node.prevProps || {};
    t !== r && this.updateAnimationControlsSubscription();
  }
  unmount() {
    var t;
    this.node.animationState.reset(),
      (t = this.unmountControls) === null || t === void 0 || t.call(this);
  }
}
let cL = 0;
class fL extends $i {
  constructor() {
    super(...arguments), (this.id = cL++);
  }
  update() {
    if (!this.node.presenceContext) return;
    const { isPresent: t, onExitComplete: r } = this.node.presenceContext,
      { isPresent: n } = this.node.prevPresenceContext || {};
    if (!this.node.animationState || t === n) return;
    const i = this.node.animationState.setActive('exit', !t);
    r && !t && i.then(() => r(this.id));
  }
  mount() {
    const { register: t } = this.node.presenceContext || {};
    t && (this.unmount = t(this.id));
  }
  unmount() {}
}
const dL = { animation: { Feature: uL }, exit: { Feature: fL } },
  f0 = (e, t) => Math.abs(e - t);
function pL(e, t) {
  const r = f0(e.x, t.x),
    n = f0(e.y, t.y);
  return Math.sqrt(r ** 2 + n ** 2);
}
class SS {
  constructor(
    t,
    r,
    { transformPagePoint: n, contextWindow: i, dragSnapToOrigin: o = !1 } = {},
  ) {
    if (
      ((this.startEvent = null),
      (this.lastMoveEvent = null),
      (this.lastMoveEventInfo = null),
      (this.handlers = {}),
      (this.contextWindow = window),
      (this.updatePoint = () => {
        if (!(this.lastMoveEvent && this.lastMoveEventInfo)) return;
        const m = Zd(this.lastMoveEventInfo, this.history),
          x = this.startEvent !== null,
          I = pL(m.offset, { x: 0, y: 0 }) >= 3;
        if (!x && !I) return;
        const { point: $ } = m,
          { timestamp: j } = Jt;
        this.history.push({ ...$, timestamp: j });
        const { onStart: G, onMove: C } = this.handlers;
        x ||
          (G && G(this.lastMoveEvent, m),
          (this.startEvent = this.lastMoveEvent)),
          C && C(this.lastMoveEvent, m);
      }),
      (this.handlePointerMove = (m, x) => {
        (this.lastMoveEvent = m),
          (this.lastMoveEventInfo = Jd(x, this.transformPagePoint)),
          ct.update(this.updatePoint, !0);
      }),
      (this.handlePointerUp = (m, x) => {
        this.end();
        const { onEnd: I, onSessionEnd: $, resumeAnimation: j } = this.handlers;
        if (
          (this.dragSnapToOrigin && j && j(),
          !(this.lastMoveEvent && this.lastMoveEventInfo))
        )
          return;
        const G = Zd(
          m.type === 'pointercancel'
            ? this.lastMoveEventInfo
            : Jd(x, this.transformPagePoint),
          this.history,
        );
        this.startEvent && I && I(m, G), $ && $(m, G);
      }),
      !Dw(t))
    )
      return;
    (this.dragSnapToOrigin = o),
      (this.handlers = r),
      (this.transformPagePoint = n),
      (this.contextWindow = i || window);
    const s = uf(t),
      l = Jd(s, this.transformPagePoint),
      { point: c } = l,
      { timestamp: h } = Jt;
    this.history = [{ ...c, timestamp: h }];
    const { onSessionStart: y } = r;
    y && y(t, Zd(l, this.history)),
      (this.removeListeners = Hr(
        Ur(this.contextWindow, 'pointermove', this.handlePointerMove),
        Ur(this.contextWindow, 'pointerup', this.handlePointerUp),
        Ur(this.contextWindow, 'pointercancel', this.handlePointerUp),
      ));
  }
  updateHandlers(t) {
    this.handlers = t;
  }
  end() {
    this.removeListeners && this.removeListeners(), ti(this.updatePoint);
  }
}
function Jd(e, t) {
  return t ? { point: t(e.point) } : e;
}
function d0(e, t) {
  return { x: e.x - t.x, y: e.y - t.y };
}
function Zd({ point: e }, t) {
  return {
    point: e,
    delta: d0(e, xS(t)),
    offset: d0(e, hL(t)),
    velocity: mL(t, 0.1),
  };
}
function hL(e) {
  return e[0];
}
function xS(e) {
  return e[e.length - 1];
}
function mL(e, t) {
  if (e.length < 2) return { x: 0, y: 0 };
  let r = e.length - 1,
    n = null;
  const i = xS(e);
  for (; r >= 0 && ((n = e[r]), !(i.timestamp - n.timestamp > Qr(t))); ) r--;
  if (!n) return { x: 0, y: 0 };
  const o = Gr(i.timestamp - n.timestamp);
  if (o === 0) return { x: 0, y: 0 };
  const s = { x: (i.x - n.x) / o, y: (i.y - n.y) / o };
  return s.x === 1 / 0 && (s.x = 0), s.y === 1 / 0 && (s.y = 0), s;
}
const kS = 1e-4,
  gL = 1 - kS,
  _L = 1 + kS,
  ES = 0.01,
  yL = 0 - ES,
  vL = 0 + ES;
function Ln(e) {
  return e.max - e.min;
}
function bL(e, t, r) {
  return Math.abs(e - t) <= r;
}
function p0(e, t, r, n = 0.5) {
  (e.origin = n),
    (e.originPoint = qt(t.min, t.max, e.origin)),
    (e.scale = Ln(r) / Ln(t)),
    (e.translate = qt(r.min, r.max, e.origin) - e.originPoint),
    ((e.scale >= gL && e.scale <= _L) || isNaN(e.scale)) && (e.scale = 1),
    ((e.translate >= yL && e.translate <= vL) || isNaN(e.translate)) &&
      (e.translate = 0);
}
function Sa(e, t, r, n) {
  p0(e.x, t.x, r.x, n ? n.originX : void 0),
    p0(e.y, t.y, r.y, n ? n.originY : void 0);
}
function h0(e, t, r) {
  (e.min = r.min + t.min), (e.max = e.min + Ln(t));
}
function wL(e, t, r) {
  h0(e.x, t.x, r.x), h0(e.y, t.y, r.y);
}
function m0(e, t, r) {
  (e.min = t.min - r.min), (e.max = e.min + Ln(t));
}
function xa(e, t, r) {
  m0(e.x, t.x, r.x), m0(e.y, t.y, r.y);
}
function SL(e, { min: t, max: r }, n) {
  return (
    t !== void 0 && e < t
      ? (e = n ? qt(t, e, n.min) : Math.max(e, t))
      : r !== void 0 && e > r && (e = n ? qt(r, e, n.max) : Math.min(e, r)),
    e
  );
}
function g0(e, t, r) {
  return {
    min: t !== void 0 ? e.min + t : void 0,
    max: r !== void 0 ? e.max + r - (e.max - e.min) : void 0,
  };
}
function xL(e, { top: t, left: r, bottom: n, right: i }) {
  return { x: g0(e.x, r, i), y: g0(e.y, t, n) };
}
function _0(e, t) {
  let r = t.min - e.min,
    n = t.max - e.max;
  return t.max - t.min < e.max - e.min && ([r, n] = [n, r]), { min: r, max: n };
}
function kL(e, t) {
  return { x: _0(e.x, t.x), y: _0(e.y, t.y) };
}
function EL(e, t) {
  let r = 0.5;
  const n = Ln(e),
    i = Ln(t);
  return (
    i > n
      ? (r = el(t.min, t.max - n, e.min))
      : n > i && (r = el(e.min, e.max - i, t.min)),
    Ri(0, 1, r)
  );
}
function TL(e, t) {
  const r = {};
  return (
    t.min !== void 0 && (r.min = t.min - e.min),
    t.max !== void 0 && (r.max = t.max - e.min),
    r
  );
}
const wh = 0.35;
function CL(e = wh) {
  return (
    e === !1 ? (e = 0) : e === !0 && (e = wh),
    { x: y0(e, 'left', 'right'), y: y0(e, 'top', 'bottom') }
  );
}
function y0(e, t, r) {
  return { min: v0(e, t), max: v0(e, r) };
}
function v0(e, t) {
  return typeof e == 'number' ? e : e[t] || 0;
}
const b0 = () => ({ translate: 0, scale: 1, origin: 0, originPoint: 0 }),
  Go = () => ({ x: b0(), y: b0() }),
  w0 = () => ({ min: 0, max: 0 }),
  Ot = () => ({ x: w0(), y: w0() });
function Hn(e) {
  return [e('x'), e('y')];
}
function TS({ top: e, left: t, right: r, bottom: n }) {
  return { x: { min: t, max: r }, y: { min: e, max: n } };
}
function AL({ x: e, y: t }) {
  return { top: t.min, right: e.max, bottom: t.max, left: e.min };
}
function PL(e, t) {
  if (!t) return e;
  const r = t({ x: e.left, y: e.top }),
    n = t({ x: e.right, y: e.bottom });
  return { top: r.y, left: r.x, bottom: n.y, right: n.x };
}
function ep(e) {
  return e === void 0 || e === 1;
}
function Sh({ scale: e, scaleX: t, scaleY: r }) {
  return !ep(e) || !ep(t) || !ep(r);
}
function Hi(e) {
  return (
    Sh(e) ||
    CS(e) ||
    e.z ||
    e.rotate ||
    e.rotateX ||
    e.rotateY ||
    e.skewX ||
    e.skewY
  );
}
function CS(e) {
  return S0(e.x) || S0(e.y);
}
function S0(e) {
  return e && e !== '0%';
}
function vc(e, t, r) {
  const n = e - r,
    i = t * n;
  return r + i;
}
function x0(e, t, r, n, i) {
  return i !== void 0 && (e = vc(e, i, n)), vc(e, r, n) + t;
}
function xh(e, t = 0, r = 1, n, i) {
  (e.min = x0(e.min, t, r, n, i)), (e.max = x0(e.max, t, r, n, i));
}
function AS(e, { x: t, y: r }) {
  xh(e.x, t.translate, t.scale, t.originPoint),
    xh(e.y, r.translate, r.scale, r.originPoint);
}
const k0 = 0.999999999999,
  E0 = 1.0000000000001;
function qL(e, t, r, n = !1) {
  const i = r.length;
  if (!i) return;
  t.x = t.y = 1;
  let o, s;
  for (let l = 0; l < i; l++) {
    (o = r[l]), (s = o.projectionDelta);
    const { visualElement: c } = o.options;
    (c && c.props.style && c.props.style.display === 'contents') ||
      (n &&
        o.options.layoutScroll &&
        o.scroll &&
        o !== o.root &&
        Xo(e, { x: -o.scroll.offset.x, y: -o.scroll.offset.y }),
      s && ((t.x *= s.x.scale), (t.y *= s.y.scale), AS(e, s)),
      n && Hi(o.latestValues) && Xo(e, o.latestValues));
  }
  t.x < E0 && t.x > k0 && (t.x = 1), t.y < E0 && t.y > k0 && (t.y = 1);
}
function Ko(e, t) {
  (e.min = e.min + t), (e.max = e.max + t);
}
function T0(e, t, r, n, i = 0.5) {
  const o = qt(e.min, e.max, i);
  xh(e, t, r, o, n);
}
function Xo(e, t) {
  T0(e.x, t.x, t.scaleX, t.scale, t.originX),
    T0(e.y, t.y, t.scaleY, t.scale, t.originY);
}
function PS(e, t) {
  return TS(PL(e.getBoundingClientRect(), t));
}
function IL(e, t, r) {
  const n = PS(e, r),
    { scroll: i } = t;
  return i && (Ko(n.x, i.offset.x), Ko(n.y, i.offset.y)), n;
}
const qS = ({ current: e }) => (e ? e.ownerDocument.defaultView : null),
  FL = new WeakMap();
class RL {
  constructor(t) {
    (this.openGlobalLock = null),
      (this.isDragging = !1),
      (this.currentDirection = null),
      (this.originPoint = { x: 0, y: 0 }),
      (this.constraints = !1),
      (this.hasMutatedConstraints = !1),
      (this.elastic = Ot()),
      (this.visualElement = t);
  }
  start(t, { snapToCursor: r = !1 } = {}) {
    const { presenceContext: n } = this.visualElement;
    if (n && n.isPresent === !1) return;
    const i = (y) => {
        const { dragSnapToOrigin: m } = this.getProps();
        m ? this.pauseAnimation() : this.stopAnimation(),
          r && this.snapToCursor(uf(y, 'page').point);
      },
      o = (y, m) => {
        var x;
        const { drag: I, dragPropagation: $, onDragStart: j } = this.getProps();
        if (
          I &&
          !$ &&
          (this.openGlobalLock && this.openGlobalLock(),
          (this.openGlobalLock = $w(I)),
          !this.openGlobalLock)
        )
          return;
        (this.isDragging = !0),
          (this.currentDirection = null),
          this.resolveConstraints(),
          this.visualElement.projection &&
            ((this.visualElement.projection.isAnimationBlocked = !0),
            (this.visualElement.projection.target = void 0)),
          Hn((C) => {
            let T = this.getAxisMotionValue(C).get() || 0;
            if (Pr.test(T)) {
              const { projection: q } = this.visualElement;
              if (q && q.layout) {
                const H = q.layout.layoutBox[C];
                H && (T = Ln(H) * (parseFloat(T) / 100));
              }
            }
            this.originPoint[C] = T;
          }),
          j && ct.postRender(() => j(y, m)),
          (x = this.removeWillChange) === null || x === void 0 || x.call(this),
          (this.removeWillChange = vh(this.visualElement, 'transform'));
        const { animationState: G } = this.visualElement;
        G && G.setActive('whileDrag', !0);
      },
      s = (y, m) => {
        const {
          dragPropagation: x,
          dragDirectionLock: I,
          onDirectionLock: $,
          onDrag: j,
        } = this.getProps();
        if (!x && !this.openGlobalLock) return;
        const { offset: G } = m;
        if (I && this.currentDirection === null) {
          (this.currentDirection = OL(G)),
            this.currentDirection !== null && $ && $(this.currentDirection);
          return;
        }
        this.updateAxis('x', m.point, G),
          this.updateAxis('y', m.point, G),
          this.visualElement.render(),
          j && j(y, m);
      },
      l = (y, m) => this.stop(y, m),
      c = () =>
        Hn((y) => {
          var m;
          return (
            this.getAnimationState(y) === 'paused' &&
            ((m = this.getAxisMotionValue(y).animation) === null || m === void 0
              ? void 0
              : m.play())
          );
        }),
      { dragSnapToOrigin: h } = this.getProps();
    this.panSession = new SS(
      t,
      {
        onSessionStart: i,
        onStart: o,
        onMove: s,
        onSessionEnd: l,
        resumeAnimation: c,
      },
      {
        transformPagePoint: this.visualElement.getTransformPagePoint(),
        dragSnapToOrigin: h,
        contextWindow: qS(this.visualElement),
      },
    );
  }
  stop(t, r) {
    var n;
    (n = this.removeWillChange) === null || n === void 0 || n.call(this);
    const i = this.isDragging;
    if ((this.cancel(), !i)) return;
    const { velocity: o } = r;
    this.startAnimation(o);
    const { onDragEnd: s } = this.getProps();
    s && ct.postRender(() => s(t, r));
  }
  cancel() {
    this.isDragging = !1;
    const { projection: t, animationState: r } = this.visualElement;
    t && (t.isAnimationBlocked = !1),
      this.panSession && this.panSession.end(),
      (this.panSession = void 0);
    const { dragPropagation: n } = this.getProps();
    !n &&
      this.openGlobalLock &&
      (this.openGlobalLock(), (this.openGlobalLock = null)),
      r && r.setActive('whileDrag', !1);
  }
  updateAxis(t, r, n) {
    const { drag: i } = this.getProps();
    if (!n || !iu(t, i, this.currentDirection)) return;
    const o = this.getAxisMotionValue(t);
    let s = this.originPoint[t] + n[t];
    this.constraints &&
      this.constraints[t] &&
      (s = SL(s, this.constraints[t], this.elastic[t])),
      o.set(s);
  }
  resolveConstraints() {
    var t;
    const { dragConstraints: r, dragElastic: n } = this.getProps(),
      i =
        this.visualElement.projection && !this.visualElement.projection.layout
          ? this.visualElement.projection.measure(!1)
          : (t = this.visualElement.projection) === null || t === void 0
            ? void 0
            : t.layout,
      o = this.constraints;
    r && Ho(r)
      ? this.constraints || (this.constraints = this.resolveRefConstraints())
      : r && i
        ? (this.constraints = xL(i.layoutBox, r))
        : (this.constraints = !1),
      (this.elastic = CL(n)),
      o !== this.constraints &&
        i &&
        this.constraints &&
        !this.hasMutatedConstraints &&
        Hn((s) => {
          this.constraints !== !1 &&
            this.getAxisMotionValue(s) &&
            (this.constraints[s] = TL(i.layoutBox[s], this.constraints[s]));
        });
  }
  resolveRefConstraints() {
    const { dragConstraints: t, onMeasureDragConstraints: r } = this.getProps();
    if (!t || !Ho(t)) return !1;
    const n = t.current,
      { projection: i } = this.visualElement;
    if (!i || !i.layout) return !1;
    const o = IL(n, i.root, this.visualElement.getTransformPagePoint());
    let s = kL(i.layout.layoutBox, o);
    if (r) {
      const l = r(AL(s));
      (this.hasMutatedConstraints = !!l), l && (s = TS(l));
    }
    return s;
  }
  startAnimation(t) {
    const {
        drag: r,
        dragMomentum: n,
        dragElastic: i,
        dragTransition: o,
        dragSnapToOrigin: s,
        onDragTransitionEnd: l,
      } = this.getProps(),
      c = this.constraints || {},
      h = Hn((y) => {
        if (!iu(y, r, this.currentDirection)) return;
        let m = (c && c[y]) || {};
        s && (m = { min: 0, max: 0 });
        const x = i ? 200 : 1e6,
          I = i ? 40 : 1e7,
          $ = {
            type: 'inertia',
            velocity: n ? t[y] : 0,
            bounceStiffness: x,
            bounceDamping: I,
            timeConstant: 750,
            restDelta: 1,
            restSpeed: 10,
            ...o,
            ...m,
          };
        return this.startAxisValueAnimation(y, $);
      });
    return Promise.all(h).then(l);
  }
  startAxisValueAnimation(t, r) {
    const n = this.getAxisMotionValue(t);
    return n.start(
      mg(t, n, 0, r, this.visualElement, !1, vh(this.visualElement, t)),
    );
  }
  stopAnimation() {
    Hn((t) => this.getAxisMotionValue(t).stop());
  }
  pauseAnimation() {
    Hn((t) => {
      var r;
      return (r = this.getAxisMotionValue(t).animation) === null || r === void 0
        ? void 0
        : r.pause();
    });
  }
  getAnimationState(t) {
    var r;
    return (r = this.getAxisMotionValue(t).animation) === null || r === void 0
      ? void 0
      : r.state;
  }
  getAxisMotionValue(t) {
    const r = `_drag${t.toUpperCase()}`,
      n = this.visualElement.getProps(),
      i = n[r];
    return (
      i ||
      this.visualElement.getValue(t, (n.initial ? n.initial[t] : void 0) || 0)
    );
  }
  snapToCursor(t) {
    Hn((r) => {
      const { drag: n } = this.getProps();
      if (!iu(r, n, this.currentDirection)) return;
      const { projection: i } = this.visualElement,
        o = this.getAxisMotionValue(r);
      if (i && i.layout) {
        const { min: s, max: l } = i.layout.layoutBox[r];
        o.set(t[r] - qt(s, l, 0.5));
      }
    });
  }
  scalePositionWithinConstraints() {
    if (!this.visualElement.current) return;
    const { drag: t, dragConstraints: r } = this.getProps(),
      { projection: n } = this.visualElement;
    if (!Ho(r) || !n || !this.constraints) return;
    this.stopAnimation();
    const i = { x: 0, y: 0 };
    Hn((s) => {
      const l = this.getAxisMotionValue(s);
      if (l && this.constraints !== !1) {
        const c = l.get();
        i[s] = EL({ min: c, max: c }, this.constraints[s]);
      }
    });
    const { transformTemplate: o } = this.visualElement.getProps();
    (this.visualElement.current.style.transform = o ? o({}, '') : 'none'),
      n.root && n.root.updateScroll(),
      n.updateLayout(),
      this.resolveConstraints(),
      Hn((s) => {
        if (!iu(s, t, null)) return;
        const l = this.getAxisMotionValue(s),
          { min: c, max: h } = this.constraints[s];
        l.set(qt(c, h, i[s]));
      });
  }
  addListeners() {
    if (!this.visualElement.current) return;
    FL.set(this.visualElement, this);
    const t = this.visualElement.current,
      r = Ur(t, 'pointerdown', (c) => {
        const { drag: h, dragListener: y = !0 } = this.getProps();
        h && y && this.start(c);
      }),
      n = () => {
        const { dragConstraints: c } = this.getProps();
        Ho(c) && c.current && (this.constraints = this.resolveRefConstraints());
      },
      { projection: i } = this.visualElement,
      o = i.addEventListener('measure', n);
    i && !i.layout && (i.root && i.root.updateScroll(), i.updateLayout()),
      ct.read(n);
    const s = Br(window, 'resize', () => this.scalePositionWithinConstraints()),
      l = i.addEventListener(
        'didUpdate',
        ({ delta: c, hasLayoutChanged: h }) => {
          this.isDragging &&
            h &&
            (Hn((y) => {
              const m = this.getAxisMotionValue(y);
              m &&
                ((this.originPoint[y] += c[y].translate),
                m.set(m.get() + c[y].translate));
            }),
            this.visualElement.render());
        },
      );
    return () => {
      s(), r(), o(), l && l();
    };
  }
  getProps() {
    const t = this.visualElement.getProps(),
      {
        drag: r = !1,
        dragDirectionLock: n = !1,
        dragPropagation: i = !1,
        dragConstraints: o = !1,
        dragElastic: s = wh,
        dragMomentum: l = !0,
      } = t;
    return {
      ...t,
      drag: r,
      dragDirectionLock: n,
      dragPropagation: i,
      dragConstraints: o,
      dragElastic: s,
      dragMomentum: l,
    };
  }
}
function iu(e, t, r) {
  return (t === !0 || t === e) && (r === null || r === e);
}
function OL(e, t = 10) {
  let r = null;
  return Math.abs(e.y) > t ? (r = 'y') : Math.abs(e.x) > t && (r = 'x'), r;
}
class LL extends $i {
  constructor(t) {
    super(t),
      (this.removeGroupControls = un),
      (this.removeListeners = un),
      (this.controls = new RL(t));
  }
  mount() {
    const { dragControls: t } = this.node.getProps();
    t && (this.removeGroupControls = t.subscribe(this.controls)),
      (this.removeListeners = this.controls.addListeners() || un);
  }
  unmount() {
    this.removeGroupControls(), this.removeListeners();
  }
}
const C0 = (e) => (t, r) => {
  e && ct.postRender(() => e(t, r));
};
class ML extends $i {
  constructor() {
    super(...arguments), (this.removePointerDownListener = un);
  }
  onPointerDown(t) {
    this.session = new SS(t, this.createPanHandlers(), {
      transformPagePoint: this.node.getTransformPagePoint(),
      contextWindow: qS(this.node),
    });
  }
  createPanHandlers() {
    const {
      onPanSessionStart: t,
      onPanStart: r,
      onPan: n,
      onPanEnd: i,
    } = this.node.getProps();
    return {
      onSessionStart: C0(t),
      onStart: C0(r),
      onMove: n,
      onEnd: (o, s) => {
        delete this.session, i && ct.postRender(() => i(o, s));
      },
    };
  }
  mount() {
    this.removePointerDownListener = Ur(this.node.current, 'pointerdown', (t) =>
      this.onPointerDown(t),
    );
  }
  update() {
    this.session && this.session.updateHandlers(this.createPanHandlers());
  }
  unmount() {
    this.removePointerDownListener(), this.session && this.session.end();
  }
}
function DL() {
  const e = K.useContext(cl);
  if (e === null) return [!0, null];
  const { isPresent: t, onExitComplete: r, register: n } = e,
    i = K.useId();
  K.useEffect(() => n(i), []);
  const o = K.useCallback(() => r && r(i), [i, r]);
  return !t && r ? [!1, o] : [!0];
}
function zL() {
  return $L(K.useContext(cl));
}
function $L(e) {
  return e === null ? !0 : e.isPresent;
}
const Ou = { hasAnimatedSinceResize: !0, hasEverUpdated: !1 };
function A0(e, t) {
  return t.max === t.min ? 0 : (e / (t.max - t.min)) * 100;
}
const Hs = {
    correct: (e, t) => {
      if (!t.target) return e;
      if (typeof e == 'string')
        if ($e.test(e)) e = parseFloat(e);
        else return e;
      const r = A0(e, t.target.x),
        n = A0(e, t.target.y);
      return `${r}% ${n}%`;
    },
  },
  NL = {
    correct: (e, { treeScale: t, projectionDelta: r }) => {
      const n = e,
        i = Oi.parse(e);
      if (i.length > 5) return n;
      const o = Oi.createTransformer(e),
        s = typeof i[0] != 'number' ? 1 : 0,
        l = r.x.scale * t.x,
        c = r.y.scale * t.y;
      (i[0 + s] /= l), (i[1 + s] /= c);
      const h = qt(l, c, 0.5);
      return (
        typeof i[2 + s] == 'number' && (i[2 + s] /= h),
        typeof i[3 + s] == 'number' && (i[3 + s] /= h),
        o(i)
      );
    },
  };
class jL extends K.Component {
  componentDidMount() {
    const {
        visualElement: t,
        layoutGroup: r,
        switchLayoutGroup: n,
        layoutId: i,
      } = this.props,
      { projection: o } = t;
    FR(BL),
      o &&
        (r.group && r.group.add(o),
        n && n.register && i && n.register(o),
        o.root.didUpdate(),
        o.addEventListener('animationComplete', () => {
          this.safeToRemove();
        }),
        o.setOptions({
          ...o.options,
          onExitComplete: () => this.safeToRemove(),
        })),
      (Ou.hasEverUpdated = !0);
  }
  getSnapshotBeforeUpdate(t) {
    const {
        layoutDependency: r,
        visualElement: n,
        drag: i,
        isPresent: o,
      } = this.props,
      s = n.projection;
    return (
      s &&
        ((s.isPresent = o),
        i || t.layoutDependency !== r || r === void 0
          ? s.willUpdate()
          : this.safeToRemove(),
        t.isPresent !== o &&
          (o
            ? s.promote()
            : s.relegate() ||
              ct.postRender(() => {
                const l = s.getStack();
                (!l || !l.members.length) && this.safeToRemove();
              }))),
      null
    );
  }
  componentDidUpdate() {
    const { projection: t } = this.props.visualElement;
    t &&
      (t.root.didUpdate(),
      Um.postRender(() => {
        !t.currentAnimation && t.isLead() && this.safeToRemove();
      }));
  }
  componentWillUnmount() {
    const {
        visualElement: t,
        layoutGroup: r,
        switchLayoutGroup: n,
      } = this.props,
      { projection: i } = t;
    i &&
      (i.scheduleCheckAfterUnmount(),
      r && r.group && r.group.remove(i),
      n && n.deregister && n.deregister(i));
  }
  safeToRemove() {
    const { safeToRemove: t } = this.props;
    t && t();
  }
  render() {
    return null;
  }
}
function IS(e) {
  const [t, r] = DL(),
    n = K.useContext(Gm);
  return te.jsx(jL, {
    ...e,
    layoutGroup: n,
    switchLayoutGroup: K.useContext(bw),
    isPresent: t,
    safeToRemove: r,
  });
}
const BL = {
    borderRadius: {
      ...Hs,
      applyTo: [
        'borderTopLeftRadius',
        'borderTopRightRadius',
        'borderBottomLeftRadius',
        'borderBottomRightRadius',
      ],
    },
    borderTopLeftRadius: Hs,
    borderTopRightRadius: Hs,
    borderBottomLeftRadius: Hs,
    borderBottomRightRadius: Hs,
    boxShadow: NL,
  },
  FS = ['TopLeft', 'TopRight', 'BottomLeft', 'BottomRight'],
  VL = FS.length,
  P0 = (e) => (typeof e == 'string' ? parseFloat(e) : e),
  q0 = (e) => typeof e == 'number' || $e.test(e);
function WL(e, t, r, n, i, o) {
  i
    ? ((e.opacity = qt(0, r.opacity !== void 0 ? r.opacity : 1, UL(n))),
      (e.opacityExit = qt(t.opacity !== void 0 ? t.opacity : 1, 0, HL(n))))
    : o &&
      (e.opacity = qt(
        t.opacity !== void 0 ? t.opacity : 1,
        r.opacity !== void 0 ? r.opacity : 1,
        n,
      ));
  for (let s = 0; s < VL; s++) {
    const l = `border${FS[s]}Radius`;
    let c = I0(t, l),
      h = I0(r, l);
    if (c === void 0 && h === void 0) continue;
    c || (c = 0),
      h || (h = 0),
      c === 0 || h === 0 || q0(c) === q0(h)
        ? ((e[l] = Math.max(qt(P0(c), P0(h), n), 0)),
          (Pr.test(h) || Pr.test(c)) && (e[l] += '%'))
        : (e[l] = h);
  }
  (t.rotate || r.rotate) && (e.rotate = qt(t.rotate || 0, r.rotate || 0, n));
}
function I0(e, t) {
  return e[t] !== void 0 ? e[t] : e.borderRadius;
}
const UL = RS(0, 0.5, dS),
  HL = RS(0.5, 0.95, un);
function RS(e, t, r) {
  return (n) => (n < e ? 0 : n > t ? 1 : r(el(e, t, n)));
}
function F0(e, t) {
  (e.min = t.min), (e.max = t.max);
}
function Wn(e, t) {
  F0(e.x, t.x), F0(e.y, t.y);
}
function R0(e, t) {
  (e.translate = t.translate),
    (e.scale = t.scale),
    (e.originPoint = t.originPoint),
    (e.origin = t.origin);
}
function O0(e, t, r, n, i) {
  return (
    (e -= t), (e = vc(e, 1 / r, n)), i !== void 0 && (e = vc(e, 1 / i, n)), e
  );
}
function QL(e, t = 0, r = 1, n = 0.5, i, o = e, s = e) {
  if (
    (Pr.test(t) &&
      ((t = parseFloat(t)), (t = qt(s.min, s.max, t / 100) - s.min)),
    typeof t != 'number')
  )
    return;
  let l = qt(o.min, o.max, n);
  e === o && (l -= t),
    (e.min = O0(e.min, t, r, l, i)),
    (e.max = O0(e.max, t, r, l, i));
}
function L0(e, t, [r, n, i], o, s) {
  QL(e, t[r], t[n], t[i], t.scale, o, s);
}
const GL = ['x', 'scaleX', 'originX'],
  KL = ['y', 'scaleY', 'originY'];
function M0(e, t, r, n) {
  L0(e.x, t, GL, r ? r.x : void 0, n ? n.x : void 0),
    L0(e.y, t, KL, r ? r.y : void 0, n ? n.y : void 0);
}
function D0(e) {
  return e.translate === 0 && e.scale === 1;
}
function OS(e) {
  return D0(e.x) && D0(e.y);
}
function z0(e, t) {
  return e.min === t.min && e.max === t.max;
}
function XL(e, t) {
  return z0(e.x, t.x) && z0(e.y, t.y);
}
function $0(e, t) {
  return (
    Math.round(e.min) === Math.round(t.min) &&
    Math.round(e.max) === Math.round(t.max)
  );
}
function LS(e, t) {
  return $0(e.x, t.x) && $0(e.y, t.y);
}
function N0(e) {
  return Ln(e.x) / Ln(e.y);
}
function j0(e, t) {
  return (
    e.translate === t.translate &&
    e.scale === t.scale &&
    e.originPoint === t.originPoint
  );
}
class YL {
  constructor() {
    this.members = [];
  }
  add(t) {
    af(this.members, t), t.scheduleRender();
  }
  remove(t) {
    if (
      (lf(this.members, t),
      t === this.prevLead && (this.prevLead = void 0),
      t === this.lead)
    ) {
      const r = this.members[this.members.length - 1];
      r && this.promote(r);
    }
  }
  relegate(t) {
    const r = this.members.findIndex((i) => t === i);
    if (r === 0) return !1;
    let n;
    for (let i = r; i >= 0; i--) {
      const o = this.members[i];
      if (o.isPresent !== !1) {
        n = o;
        break;
      }
    }
    return n ? (this.promote(n), !0) : !1;
  }
  promote(t, r) {
    const n = this.lead;
    if (t !== n && ((this.prevLead = n), (this.lead = t), t.show(), n)) {
      n.instance && n.scheduleRender(),
        t.scheduleRender(),
        (t.resumeFrom = n),
        r && (t.resumeFrom.preserveOpacity = !0),
        n.snapshot &&
          ((t.snapshot = n.snapshot),
          (t.snapshot.latestValues = n.animationValues || n.latestValues)),
        t.root && t.root.isUpdating && (t.isLayoutDirty = !0);
      const { crossfade: i } = t.options;
      i === !1 && n.hide();
    }
  }
  exitAnimationComplete() {
    this.members.forEach((t) => {
      const { options: r, resumingFrom: n } = t;
      r.onExitComplete && r.onExitComplete(),
        n && n.options.onExitComplete && n.options.onExitComplete();
    });
  }
  scheduleRender() {
    this.members.forEach((t) => {
      t.instance && t.scheduleRender(!1);
    });
  }
  removeLeadSnapshot() {
    this.lead && this.lead.snapshot && (this.lead.snapshot = void 0);
  }
}
function JL(e, t, r) {
  let n = '';
  const i = e.x.translate / t.x,
    o = e.y.translate / t.y,
    s = (r == null ? void 0 : r.z) || 0;
  if (
    ((i || o || s) && (n = `translate3d(${i}px, ${o}px, ${s}px) `),
    (t.x !== 1 || t.y !== 1) && (n += `scale(${1 / t.x}, ${1 / t.y}) `),
    r)
  ) {
    const {
      transformPerspective: h,
      rotate: y,
      rotateX: m,
      rotateY: x,
      skewX: I,
      skewY: $,
    } = r;
    h && (n = `perspective(${h}px) ${n}`),
      y && (n += `rotate(${y}deg) `),
      m && (n += `rotateX(${m}deg) `),
      x && (n += `rotateY(${x}deg) `),
      I && (n += `skewX(${I}deg) `),
      $ && (n += `skewY(${$}deg) `);
  }
  const l = e.x.scale * t.x,
    c = e.y.scale * t.y;
  return (l !== 1 || c !== 1) && (n += `scale(${l}, ${c})`), n || 'none';
}
const ZL = (e, t) => e.depth - t.depth;
class eM {
  constructor() {
    (this.children = []), (this.isDirty = !1);
  }
  add(t) {
    af(this.children, t), (this.isDirty = !0);
  }
  remove(t) {
    lf(this.children, t), (this.isDirty = !0);
  }
  forEach(t) {
    this.isDirty && this.children.sort(ZL),
      (this.isDirty = !1),
      this.children.forEach(t);
  }
}
function tM(e, t) {
  const r = Kr.now(),
    n = ({ timestamp: i }) => {
      const o = i - r;
      o >= t && (ti(n), e(o - t));
    };
  return ct.read(n, !0), () => ti(n);
}
function nM(e) {
  return e instanceof SVGElement && e.tagName !== 'svg';
}
function rM(e, t, r) {
  const n = ln(e) ? e : tl(e);
  return n.start(mg('', n, t, r)), n.animation;
}
const Qi = {
    type: 'projectionFrame',
    totalNodes: 0,
    resolvedTargetDeltas: 0,
    recalculatedProjection: 0,
  },
  ia = typeof window < 'u' && window.MotionDebug !== void 0,
  tp = ['', 'X', 'Y', 'Z'],
  iM = { visibility: 'hidden' },
  B0 = 1e3;
let oM = 0;
function np(e, t, r, n) {
  const { latestValues: i } = t;
  i[e] && ((r[e] = i[e]), t.setStaticValue(e, 0), n && (n[e] = 0));
}
function MS(e) {
  if (((e.hasCheckedOptimisedAppear = !0), e.root === e)) return;
  const { visualElement: t } = e.options;
  if (!t) return;
  const r = bS(t);
  if (window.MotionHasOptimisedAnimation(r, 'transform')) {
    const { layout: i, layoutId: o } = e.options;
    window.MotionCancelOptimisedAnimation(r, 'transform', ct, !(i || o));
  }
  const { parent: n } = e;
  n && !n.hasCheckedOptimisedAppear && MS(n);
}
function DS({
  attachResizeListener: e,
  defaultParent: t,
  measureScroll: r,
  checkIsScrollRoot: n,
  resetTransform: i,
}) {
  return class {
    constructor(s = {}, l = t == null ? void 0 : t()) {
      (this.id = oM++),
        (this.animationId = 0),
        (this.children = new Set()),
        (this.options = {}),
        (this.isTreeAnimating = !1),
        (this.isAnimationBlocked = !1),
        (this.isLayoutDirty = !1),
        (this.isProjectionDirty = !1),
        (this.isSharedProjectionDirty = !1),
        (this.isTransformDirty = !1),
        (this.updateManuallyBlocked = !1),
        (this.updateBlockedByResize = !1),
        (this.isUpdating = !1),
        (this.isSVG = !1),
        (this.needsReset = !1),
        (this.shouldResetTransform = !1),
        (this.hasCheckedOptimisedAppear = !1),
        (this.treeScale = { x: 1, y: 1 }),
        (this.eventHandlers = new Map()),
        (this.hasTreeAnimated = !1),
        (this.updateScheduled = !1),
        (this.scheduleUpdate = () => this.update()),
        (this.projectionUpdateScheduled = !1),
        (this.checkUpdateFailed = () => {
          this.isUpdating && ((this.isUpdating = !1), this.clearAllSnapshots());
        }),
        (this.updateProjection = () => {
          (this.projectionUpdateScheduled = !1),
            ia &&
              (Qi.totalNodes =
                Qi.resolvedTargetDeltas =
                Qi.recalculatedProjection =
                  0),
            this.nodes.forEach(lM),
            this.nodes.forEach(pM),
            this.nodes.forEach(hM),
            this.nodes.forEach(uM),
            ia && window.MotionDebug.record(Qi);
        }),
        (this.resolvedRelativeTargetAt = 0),
        (this.hasProjected = !1),
        (this.isVisible = !0),
        (this.animationProgress = 0),
        (this.sharedNodes = new Map()),
        (this.latestValues = s),
        (this.root = l ? l.root || l : this),
        (this.path = l ? [...l.path, l] : []),
        (this.parent = l),
        (this.depth = l ? l.depth + 1 : 0);
      for (let c = 0; c < this.path.length; c++)
        this.path[c].shouldResetTransform = !0;
      this.root === this && (this.nodes = new eM());
    }
    addEventListener(s, l) {
      return (
        this.eventHandlers.has(s) || this.eventHandlers.set(s, new gg()),
        this.eventHandlers.get(s).add(l)
      );
    }
    notifyListeners(s, ...l) {
      const c = this.eventHandlers.get(s);
      c && c.notify(...l);
    }
    hasListeners(s) {
      return this.eventHandlers.has(s);
    }
    mount(s, l = this.root.hasTreeAnimated) {
      if (this.instance) return;
      (this.isSVG = nM(s)), (this.instance = s);
      const { layoutId: c, layout: h, visualElement: y } = this.options;
      if (
        (y && !y.current && y.mount(s),
        this.root.nodes.add(this),
        this.parent && this.parent.children.add(this),
        l && (h || c) && (this.isLayoutDirty = !0),
        e)
      ) {
        let m;
        const x = () => (this.root.updateBlockedByResize = !1);
        e(s, () => {
          (this.root.updateBlockedByResize = !0),
            m && m(),
            (m = tM(x, 250)),
            Ou.hasAnimatedSinceResize &&
              ((Ou.hasAnimatedSinceResize = !1), this.nodes.forEach(W0));
        });
      }
      c && this.root.registerSharedNode(c, this),
        this.options.animate !== !1 &&
          y &&
          (c || h) &&
          this.addEventListener(
            'didUpdate',
            ({
              delta: m,
              hasLayoutChanged: x,
              hasRelativeTargetChanged: I,
              layout: $,
            }) => {
              if (this.isTreeAnimationBlocked()) {
                (this.target = void 0), (this.relativeTarget = void 0);
                return;
              }
              const j =
                  this.options.transition || y.getDefaultTransition() || vM,
                { onLayoutAnimationStart: G, onLayoutAnimationComplete: C } =
                  y.getProps(),
                T = !this.targetLayout || !LS(this.targetLayout, $) || I,
                q = !x && I;
              if (
                this.options.layoutRoot ||
                (this.resumeFrom && this.resumeFrom.instance) ||
                q ||
                (x && (T || !this.currentAnimation))
              ) {
                this.resumeFrom &&
                  ((this.resumingFrom = this.resumeFrom),
                  (this.resumingFrom.resumingFrom = void 0)),
                  this.setAnimationOrigin(m, q);
                const H = { ...sg(j, 'layout'), onPlay: G, onComplete: C };
                (y.shouldReduceMotion || this.options.layoutRoot) &&
                  ((H.delay = 0), (H.type = !1)),
                  this.startAnimation(H);
              } else
                x || W0(this),
                  this.isLead() &&
                    this.options.onExitComplete &&
                    this.options.onExitComplete();
              this.targetLayout = $;
            },
          );
    }
    unmount() {
      this.options.layoutId && this.willUpdate(), this.root.nodes.remove(this);
      const s = this.getStack();
      s && s.remove(this),
        this.parent && this.parent.children.delete(this),
        (this.instance = void 0),
        ti(this.updateProjection);
    }
    blockUpdate() {
      this.updateManuallyBlocked = !0;
    }
    unblockUpdate() {
      this.updateManuallyBlocked = !1;
    }
    isUpdateBlocked() {
      return this.updateManuallyBlocked || this.updateBlockedByResize;
    }
    isTreeAnimationBlocked() {
      return (
        this.isAnimationBlocked ||
        (this.parent && this.parent.isTreeAnimationBlocked()) ||
        !1
      );
    }
    startUpdate() {
      this.isUpdateBlocked() ||
        ((this.isUpdating = !0),
        this.nodes && this.nodes.forEach(mM),
        this.animationId++);
    }
    getTransformTemplate() {
      const { visualElement: s } = this.options;
      return s && s.getProps().transformTemplate;
    }
    willUpdate(s = !0) {
      if (((this.root.hasTreeAnimated = !0), this.root.isUpdateBlocked())) {
        this.options.onExitComplete && this.options.onExitComplete();
        return;
      }
      if (
        (window.MotionCancelOptimisedAnimation &&
          !this.hasCheckedOptimisedAppear &&
          MS(this),
        !this.root.isUpdating && this.root.startUpdate(),
        this.isLayoutDirty)
      )
        return;
      this.isLayoutDirty = !0;
      for (let y = 0; y < this.path.length; y++) {
        const m = this.path[y];
        (m.shouldResetTransform = !0),
          m.updateScroll('snapshot'),
          m.options.layoutRoot && m.willUpdate(!1);
      }
      const { layoutId: l, layout: c } = this.options;
      if (l === void 0 && !c) return;
      const h = this.getTransformTemplate();
      (this.prevTransformTemplateValue = h ? h(this.latestValues, '') : void 0),
        this.updateSnapshot(),
        s && this.notifyListeners('willUpdate');
    }
    update() {
      if (((this.updateScheduled = !1), this.isUpdateBlocked())) {
        this.unblockUpdate(), this.clearAllSnapshots(), this.nodes.forEach(V0);
        return;
      }
      this.isUpdating || this.nodes.forEach(fM),
        (this.isUpdating = !1),
        this.nodes.forEach(dM),
        this.nodes.forEach(sM),
        this.nodes.forEach(aM),
        this.clearAllSnapshots();
      const l = Kr.now();
      (Jt.delta = Ri(0, 1e3 / 60, l - Jt.timestamp)),
        (Jt.timestamp = l),
        (Jt.isProcessing = !0),
        Ud.update.process(Jt),
        Ud.preRender.process(Jt),
        Ud.render.process(Jt),
        (Jt.isProcessing = !1);
    }
    didUpdate() {
      this.updateScheduled ||
        ((this.updateScheduled = !0), Um.read(this.scheduleUpdate));
    }
    clearAllSnapshots() {
      this.nodes.forEach(cM), this.sharedNodes.forEach(gM);
    }
    scheduleUpdateProjection() {
      this.projectionUpdateScheduled ||
        ((this.projectionUpdateScheduled = !0),
        ct.preRender(this.updateProjection, !1, !0));
    }
    scheduleCheckAfterUnmount() {
      ct.postRender(() => {
        this.isLayoutDirty
          ? this.root.didUpdate()
          : this.root.checkUpdateFailed();
      });
    }
    updateSnapshot() {
      this.snapshot || !this.instance || (this.snapshot = this.measure());
    }
    updateLayout() {
      if (
        !this.instance ||
        (this.updateScroll(),
        !(this.options.alwaysMeasureLayout && this.isLead()) &&
          !this.isLayoutDirty)
      )
        return;
      if (this.resumeFrom && !this.resumeFrom.instance)
        for (let c = 0; c < this.path.length; c++) this.path[c].updateScroll();
      const s = this.layout;
      (this.layout = this.measure(!1)),
        (this.layoutCorrected = Ot()),
        (this.isLayoutDirty = !1),
        (this.projectionDelta = void 0),
        this.notifyListeners('measure', this.layout.layoutBox);
      const { visualElement: l } = this.options;
      l &&
        l.notify(
          'LayoutMeasure',
          this.layout.layoutBox,
          s ? s.layoutBox : void 0,
        );
    }
    updateScroll(s = 'measure') {
      let l = !!(this.options.layoutScroll && this.instance);
      if (
        (this.scroll &&
          this.scroll.animationId === this.root.animationId &&
          this.scroll.phase === s &&
          (l = !1),
        l)
      ) {
        const c = n(this.instance);
        this.scroll = {
          animationId: this.root.animationId,
          phase: s,
          isRoot: c,
          offset: r(this.instance),
          wasRoot: this.scroll ? this.scroll.isRoot : c,
        };
      }
    }
    resetTransform() {
      if (!i) return;
      const s =
          this.isLayoutDirty ||
          this.shouldResetTransform ||
          this.options.alwaysMeasureLayout,
        l = this.projectionDelta && !OS(this.projectionDelta),
        c = this.getTransformTemplate(),
        h = c ? c(this.latestValues, '') : void 0,
        y = h !== this.prevTransformTemplateValue;
      s &&
        (l || Hi(this.latestValues) || y) &&
        (i(this.instance, h),
        (this.shouldResetTransform = !1),
        this.scheduleRender());
    }
    measure(s = !0) {
      const l = this.measurePageBox();
      let c = this.removeElementScroll(l);
      return (
        s && (c = this.removeTransform(c)),
        bM(c),
        {
          animationId: this.root.animationId,
          measuredBox: l,
          layoutBox: c,
          latestValues: {},
          source: this.id,
        }
      );
    }
    measurePageBox() {
      var s;
      const { visualElement: l } = this.options;
      if (!l) return Ot();
      const c = l.measureViewportBox();
      if (
        !(
          ((s = this.scroll) === null || s === void 0 ? void 0 : s.wasRoot) ||
          this.path.some(wM)
        )
      ) {
        const { scroll: y } = this.root;
        y && (Ko(c.x, y.offset.x), Ko(c.y, y.offset.y));
      }
      return c;
    }
    removeElementScroll(s) {
      var l;
      const c = Ot();
      if (
        (Wn(c, s), !((l = this.scroll) === null || l === void 0) && l.wasRoot)
      )
        return c;
      for (let h = 0; h < this.path.length; h++) {
        const y = this.path[h],
          { scroll: m, options: x } = y;
        y !== this.root &&
          m &&
          x.layoutScroll &&
          (m.wasRoot && Wn(c, s), Ko(c.x, m.offset.x), Ko(c.y, m.offset.y));
      }
      return c;
    }
    applyTransform(s, l = !1) {
      const c = Ot();
      Wn(c, s);
      for (let h = 0; h < this.path.length; h++) {
        const y = this.path[h];
        !l &&
          y.options.layoutScroll &&
          y.scroll &&
          y !== y.root &&
          Xo(c, { x: -y.scroll.offset.x, y: -y.scroll.offset.y }),
          Hi(y.latestValues) && Xo(c, y.latestValues);
      }
      return Hi(this.latestValues) && Xo(c, this.latestValues), c;
    }
    removeTransform(s) {
      const l = Ot();
      Wn(l, s);
      for (let c = 0; c < this.path.length; c++) {
        const h = this.path[c];
        if (!h.instance || !Hi(h.latestValues)) continue;
        Sh(h.latestValues) && h.updateSnapshot();
        const y = Ot(),
          m = h.measurePageBox();
        Wn(y, m),
          M0(l, h.latestValues, h.snapshot ? h.snapshot.layoutBox : void 0, y);
      }
      return Hi(this.latestValues) && M0(l, this.latestValues), l;
    }
    setTargetDelta(s) {
      (this.targetDelta = s),
        this.root.scheduleUpdateProjection(),
        (this.isProjectionDirty = !0);
    }
    setOptions(s) {
      this.options = {
        ...this.options,
        ...s,
        crossfade: s.crossfade !== void 0 ? s.crossfade : !0,
      };
    }
    clearMeasurements() {
      (this.scroll = void 0),
        (this.layout = void 0),
        (this.snapshot = void 0),
        (this.prevTransformTemplateValue = void 0),
        (this.targetDelta = void 0),
        (this.target = void 0),
        (this.isLayoutDirty = !1);
    }
    forceRelativeParentToResolveTarget() {
      this.relativeParent &&
        this.relativeParent.resolvedRelativeTargetAt !== Jt.timestamp &&
        this.relativeParent.resolveTargetDelta(!0);
    }
    resolveTargetDelta(s = !1) {
      var l;
      const c = this.getLead();
      this.isProjectionDirty || (this.isProjectionDirty = c.isProjectionDirty),
        this.isTransformDirty || (this.isTransformDirty = c.isTransformDirty),
        this.isSharedProjectionDirty ||
          (this.isSharedProjectionDirty = c.isSharedProjectionDirty);
      const h = !!this.resumingFrom || this !== c;
      if (
        !(
          s ||
          (h && this.isSharedProjectionDirty) ||
          this.isProjectionDirty ||
          (!((l = this.parent) === null || l === void 0) &&
            l.isProjectionDirty) ||
          this.attemptToResolveRelativeTarget ||
          this.root.updateBlockedByResize
        )
      )
        return;
      const { layout: m, layoutId: x } = this.options;
      if (!(!this.layout || !(m || x))) {
        if (
          ((this.resolvedRelativeTargetAt = Jt.timestamp),
          !this.targetDelta && !this.relativeTarget)
        ) {
          const I = this.getClosestProjectingParent();
          I && I.layout && this.animationProgress !== 1
            ? ((this.relativeParent = I),
              this.forceRelativeParentToResolveTarget(),
              (this.relativeTarget = Ot()),
              (this.relativeTargetOrigin = Ot()),
              xa(
                this.relativeTargetOrigin,
                this.layout.layoutBox,
                I.layout.layoutBox,
              ),
              Wn(this.relativeTarget, this.relativeTargetOrigin))
            : (this.relativeParent = this.relativeTarget = void 0);
        }
        if (!(!this.relativeTarget && !this.targetDelta)) {
          if (
            (this.target ||
              ((this.target = Ot()), (this.targetWithTransforms = Ot())),
            this.relativeTarget &&
            this.relativeTargetOrigin &&
            this.relativeParent &&
            this.relativeParent.target
              ? (this.forceRelativeParentToResolveTarget(),
                wL(
                  this.target,
                  this.relativeTarget,
                  this.relativeParent.target,
                ))
              : this.targetDelta
                ? (this.resumingFrom
                    ? (this.target = this.applyTransform(this.layout.layoutBox))
                    : Wn(this.target, this.layout.layoutBox),
                  AS(this.target, this.targetDelta))
                : Wn(this.target, this.layout.layoutBox),
            this.attemptToResolveRelativeTarget)
          ) {
            this.attemptToResolveRelativeTarget = !1;
            const I = this.getClosestProjectingParent();
            I &&
            !!I.resumingFrom == !!this.resumingFrom &&
            !I.options.layoutScroll &&
            I.target &&
            this.animationProgress !== 1
              ? ((this.relativeParent = I),
                this.forceRelativeParentToResolveTarget(),
                (this.relativeTarget = Ot()),
                (this.relativeTargetOrigin = Ot()),
                xa(this.relativeTargetOrigin, this.target, I.target),
                Wn(this.relativeTarget, this.relativeTargetOrigin))
              : (this.relativeParent = this.relativeTarget = void 0);
          }
          ia && Qi.resolvedTargetDeltas++;
        }
      }
    }
    getClosestProjectingParent() {
      if (
        !(
          !this.parent ||
          Sh(this.parent.latestValues) ||
          CS(this.parent.latestValues)
        )
      )
        return this.parent.isProjecting()
          ? this.parent
          : this.parent.getClosestProjectingParent();
    }
    isProjecting() {
      return !!(
        (this.relativeTarget || this.targetDelta || this.options.layoutRoot) &&
        this.layout
      );
    }
    calcProjection() {
      var s;
      const l = this.getLead(),
        c = !!this.resumingFrom || this !== l;
      let h = !0;
      if (
        ((this.isProjectionDirty ||
          (!((s = this.parent) === null || s === void 0) &&
            s.isProjectionDirty)) &&
          (h = !1),
        c &&
          (this.isSharedProjectionDirty || this.isTransformDirty) &&
          (h = !1),
        this.resolvedRelativeTargetAt === Jt.timestamp && (h = !1),
        h)
      )
        return;
      const { layout: y, layoutId: m } = this.options;
      if (
        ((this.isTreeAnimating = !!(
          (this.parent && this.parent.isTreeAnimating) ||
          this.currentAnimation ||
          this.pendingAnimation
        )),
        this.isTreeAnimating ||
          (this.targetDelta = this.relativeTarget = void 0),
        !this.layout || !(y || m))
      )
        return;
      Wn(this.layoutCorrected, this.layout.layoutBox);
      const x = this.treeScale.x,
        I = this.treeScale.y;
      qL(this.layoutCorrected, this.treeScale, this.path, c),
        l.layout &&
          !l.target &&
          (this.treeScale.x !== 1 || this.treeScale.y !== 1) &&
          ((l.target = l.layout.layoutBox), (l.targetWithTransforms = Ot()));
      const { target: $ } = l;
      if (!$) {
        this.prevProjectionDelta &&
          (this.createProjectionDeltas(), this.scheduleRender());
        return;
      }
      !this.projectionDelta || !this.prevProjectionDelta
        ? this.createProjectionDeltas()
        : (R0(this.prevProjectionDelta.x, this.projectionDelta.x),
          R0(this.prevProjectionDelta.y, this.projectionDelta.y)),
        Sa(this.projectionDelta, this.layoutCorrected, $, this.latestValues),
        (this.treeScale.x !== x ||
          this.treeScale.y !== I ||
          !j0(this.projectionDelta.x, this.prevProjectionDelta.x) ||
          !j0(this.projectionDelta.y, this.prevProjectionDelta.y)) &&
          ((this.hasProjected = !0),
          this.scheduleRender(),
          this.notifyListeners('projectionUpdate', $)),
        ia && Qi.recalculatedProjection++;
    }
    hide() {
      this.isVisible = !1;
    }
    show() {
      this.isVisible = !0;
    }
    scheduleRender(s = !0) {
      var l;
      if (
        ((l = this.options.visualElement) === null ||
          l === void 0 ||
          l.scheduleRender(),
        s)
      ) {
        const c = this.getStack();
        c && c.scheduleRender();
      }
      this.resumingFrom &&
        !this.resumingFrom.instance &&
        (this.resumingFrom = void 0);
    }
    createProjectionDeltas() {
      (this.prevProjectionDelta = Go()),
        (this.projectionDelta = Go()),
        (this.projectionDeltaWithTransform = Go());
    }
    setAnimationOrigin(s, l = !1) {
      const c = this.snapshot,
        h = c ? c.latestValues : {},
        y = { ...this.latestValues },
        m = Go();
      (!this.relativeParent || !this.relativeParent.options.layoutRoot) &&
        (this.relativeTarget = this.relativeTargetOrigin = void 0),
        (this.attemptToResolveRelativeTarget = !l);
      const x = Ot(),
        I = c ? c.source : void 0,
        $ = this.layout ? this.layout.source : void 0,
        j = I !== $,
        G = this.getStack(),
        C = !G || G.members.length <= 1,
        T = !!(j && !C && this.options.crossfade === !0 && !this.path.some(yM));
      this.animationProgress = 0;
      let q;
      (this.mixTargetDelta = (H) => {
        const ie = H / 1e3;
        U0(m.x, s.x, ie),
          U0(m.y, s.y, ie),
          this.setTargetDelta(m),
          this.relativeTarget &&
            this.relativeTargetOrigin &&
            this.layout &&
            this.relativeParent &&
            this.relativeParent.layout &&
            (xa(x, this.layout.layoutBox, this.relativeParent.layout.layoutBox),
            _M(this.relativeTarget, this.relativeTargetOrigin, x, ie),
            q && XL(this.relativeTarget, q) && (this.isProjectionDirty = !1),
            q || (q = Ot()),
            Wn(q, this.relativeTarget)),
          j &&
            ((this.animationValues = y), WL(y, h, this.latestValues, ie, T, C)),
          this.root.scheduleUpdateProjection(),
          this.scheduleRender(),
          (this.animationProgress = ie);
      }),
        this.mixTargetDelta(this.options.layoutRoot ? 1e3 : 0);
    }
    startAnimation(s) {
      this.notifyListeners('animationStart'),
        this.currentAnimation && this.currentAnimation.stop(),
        this.resumingFrom &&
          this.resumingFrom.currentAnimation &&
          this.resumingFrom.currentAnimation.stop(),
        this.pendingAnimation &&
          (ti(this.pendingAnimation), (this.pendingAnimation = void 0)),
        (this.pendingAnimation = ct.update(() => {
          (Ou.hasAnimatedSinceResize = !0),
            (this.currentAnimation = rM(0, B0, {
              ...s,
              onUpdate: (l) => {
                this.mixTargetDelta(l), s.onUpdate && s.onUpdate(l);
              },
              onComplete: () => {
                s.onComplete && s.onComplete(), this.completeAnimation();
              },
            })),
            this.resumingFrom &&
              (this.resumingFrom.currentAnimation = this.currentAnimation),
            (this.pendingAnimation = void 0);
        }));
    }
    completeAnimation() {
      this.resumingFrom &&
        ((this.resumingFrom.currentAnimation = void 0),
        (this.resumingFrom.preserveOpacity = void 0));
      const s = this.getStack();
      s && s.exitAnimationComplete(),
        (this.resumingFrom =
          this.currentAnimation =
          this.animationValues =
            void 0),
        this.notifyListeners('animationComplete');
    }
    finishAnimation() {
      this.currentAnimation &&
        (this.mixTargetDelta && this.mixTargetDelta(B0),
        this.currentAnimation.stop()),
        this.completeAnimation();
    }
    applyTransformsToTarget() {
      const s = this.getLead();
      let {
        targetWithTransforms: l,
        target: c,
        layout: h,
        latestValues: y,
      } = s;
      if (!(!l || !c || !h)) {
        if (
          this !== s &&
          this.layout &&
          h &&
          zS(this.options.animationType, this.layout.layoutBox, h.layoutBox)
        ) {
          c = this.target || Ot();
          const m = Ln(this.layout.layoutBox.x);
          (c.x.min = s.target.x.min), (c.x.max = c.x.min + m);
          const x = Ln(this.layout.layoutBox.y);
          (c.y.min = s.target.y.min), (c.y.max = c.y.min + x);
        }
        Wn(l, c),
          Xo(l, y),
          Sa(this.projectionDeltaWithTransform, this.layoutCorrected, l, y);
      }
    }
    registerSharedNode(s, l) {
      this.sharedNodes.has(s) || this.sharedNodes.set(s, new YL()),
        this.sharedNodes.get(s).add(l);
      const h = l.options.initialPromotionConfig;
      l.promote({
        transition: h ? h.transition : void 0,
        preserveFollowOpacity:
          h && h.shouldPreserveFollowOpacity
            ? h.shouldPreserveFollowOpacity(l)
            : void 0,
      });
    }
    isLead() {
      const s = this.getStack();
      return s ? s.lead === this : !0;
    }
    getLead() {
      var s;
      const { layoutId: l } = this.options;
      return l
        ? ((s = this.getStack()) === null || s === void 0 ? void 0 : s.lead) ||
            this
        : this;
    }
    getPrevLead() {
      var s;
      const { layoutId: l } = this.options;
      return l
        ? (s = this.getStack()) === null || s === void 0
          ? void 0
          : s.prevLead
        : void 0;
    }
    getStack() {
      const { layoutId: s } = this.options;
      if (s) return this.root.sharedNodes.get(s);
    }
    promote({ needsReset: s, transition: l, preserveFollowOpacity: c } = {}) {
      const h = this.getStack();
      h && h.promote(this, c),
        s && ((this.projectionDelta = void 0), (this.needsReset = !0)),
        l && this.setOptions({ transition: l });
    }
    relegate() {
      const s = this.getStack();
      return s ? s.relegate(this) : !1;
    }
    resetSkewAndRotation() {
      const { visualElement: s } = this.options;
      if (!s) return;
      let l = !1;
      const { latestValues: c } = s;
      if (
        ((c.z ||
          c.rotate ||
          c.rotateX ||
          c.rotateY ||
          c.rotateZ ||
          c.skewX ||
          c.skewY) &&
          (l = !0),
        !l)
      )
        return;
      const h = {};
      c.z && np('z', s, h, this.animationValues);
      for (let y = 0; y < tp.length; y++)
        np(`rotate${tp[y]}`, s, h, this.animationValues),
          np(`skew${tp[y]}`, s, h, this.animationValues);
      s.render();
      for (const y in h)
        s.setStaticValue(y, h[y]),
          this.animationValues && (this.animationValues[y] = h[y]);
      s.scheduleRender();
    }
    getProjectionStyles(s) {
      var l, c;
      if (!this.instance || this.isSVG) return;
      if (!this.isVisible) return iM;
      const h = { visibility: '' },
        y = this.getTransformTemplate();
      if (this.needsReset)
        return (
          (this.needsReset = !1),
          (h.opacity = ''),
          (h.pointerEvents = Fu(s == null ? void 0 : s.pointerEvents) || ''),
          (h.transform = y ? y(this.latestValues, '') : 'none'),
          h
        );
      const m = this.getLead();
      if (!this.projectionDelta || !this.layout || !m.target) {
        const j = {};
        return (
          this.options.layoutId &&
            ((j.opacity =
              this.latestValues.opacity !== void 0
                ? this.latestValues.opacity
                : 1),
            (j.pointerEvents = Fu(s == null ? void 0 : s.pointerEvents) || '')),
          this.hasProjected &&
            !Hi(this.latestValues) &&
            ((j.transform = y ? y({}, '') : 'none'), (this.hasProjected = !1)),
          j
        );
      }
      const x = m.animationValues || m.latestValues;
      this.applyTransformsToTarget(),
        (h.transform = JL(
          this.projectionDeltaWithTransform,
          this.treeScale,
          x,
        )),
        y && (h.transform = y(x, h.transform));
      const { x: I, y: $ } = this.projectionDelta;
      (h.transformOrigin = `${I.origin * 100}% ${$.origin * 100}% 0`),
        m.animationValues
          ? (h.opacity =
              m === this
                ? (c =
                    (l = x.opacity) !== null && l !== void 0
                      ? l
                      : this.latestValues.opacity) !== null && c !== void 0
                  ? c
                  : 1
                : this.preserveOpacity
                  ? this.latestValues.opacity
                  : x.opacityExit)
          : (h.opacity =
              m === this
                ? x.opacity !== void 0
                  ? x.opacity
                  : ''
                : x.opacityExit !== void 0
                  ? x.opacityExit
                  : 0);
      for (const j in hc) {
        if (x[j] === void 0) continue;
        const { correct: G, applyTo: C } = hc[j],
          T = h.transform === 'none' ? x[j] : G(x[j], m);
        if (C) {
          const q = C.length;
          for (let H = 0; H < q; H++) h[C[H]] = T;
        } else h[j] = T;
      }
      return (
        this.options.layoutId &&
          (h.pointerEvents =
            m === this
              ? Fu(s == null ? void 0 : s.pointerEvents) || ''
              : 'none'),
        h
      );
    }
    clearSnapshot() {
      this.resumeFrom = this.snapshot = void 0;
    }
    resetTree() {
      this.root.nodes.forEach((s) => {
        var l;
        return (l = s.currentAnimation) === null || l === void 0
          ? void 0
          : l.stop();
      }),
        this.root.nodes.forEach(V0),
        this.root.sharedNodes.clear();
    }
  };
}
function sM(e) {
  e.updateLayout();
}
function aM(e) {
  var t;
  const r =
    ((t = e.resumeFrom) === null || t === void 0 ? void 0 : t.snapshot) ||
    e.snapshot;
  if (e.isLead() && e.layout && r && e.hasListeners('didUpdate')) {
    const { layoutBox: n, measuredBox: i } = e.layout,
      { animationType: o } = e.options,
      s = r.source !== e.layout.source;
    o === 'size'
      ? Hn((m) => {
          const x = s ? r.measuredBox[m] : r.layoutBox[m],
            I = Ln(x);
          (x.min = n[m].min), (x.max = x.min + I);
        })
      : zS(o, r.layoutBox, n) &&
        Hn((m) => {
          const x = s ? r.measuredBox[m] : r.layoutBox[m],
            I = Ln(n[m]);
          (x.max = x.min + I),
            e.relativeTarget &&
              !e.currentAnimation &&
              ((e.isProjectionDirty = !0),
              (e.relativeTarget[m].max = e.relativeTarget[m].min + I));
        });
    const l = Go();
    Sa(l, n, r.layoutBox);
    const c = Go();
    s ? Sa(c, e.applyTransform(i, !0), r.measuredBox) : Sa(c, n, r.layoutBox);
    const h = !OS(l);
    let y = !1;
    if (!e.resumeFrom) {
      const m = e.getClosestProjectingParent();
      if (m && !m.resumeFrom) {
        const { snapshot: x, layout: I } = m;
        if (x && I) {
          const $ = Ot();
          xa($, r.layoutBox, x.layoutBox);
          const j = Ot();
          xa(j, n, I.layoutBox),
            LS($, j) || (y = !0),
            m.options.layoutRoot &&
              ((e.relativeTarget = j),
              (e.relativeTargetOrigin = $),
              (e.relativeParent = m));
        }
      }
    }
    e.notifyListeners('didUpdate', {
      layout: n,
      snapshot: r,
      delta: c,
      layoutDelta: l,
      hasLayoutChanged: h,
      hasRelativeTargetChanged: y,
    });
  } else if (e.isLead()) {
    const { onExitComplete: n } = e.options;
    n && n();
  }
  e.options.transition = void 0;
}
function lM(e) {
  ia && Qi.totalNodes++,
    e.parent &&
      (e.isProjecting() || (e.isProjectionDirty = e.parent.isProjectionDirty),
      e.isSharedProjectionDirty ||
        (e.isSharedProjectionDirty = !!(
          e.isProjectionDirty ||
          e.parent.isProjectionDirty ||
          e.parent.isSharedProjectionDirty
        )),
      e.isTransformDirty || (e.isTransformDirty = e.parent.isTransformDirty));
}
function uM(e) {
  e.isProjectionDirty = e.isSharedProjectionDirty = e.isTransformDirty = !1;
}
function cM(e) {
  e.clearSnapshot();
}
function V0(e) {
  e.clearMeasurements();
}
function fM(e) {
  e.isLayoutDirty = !1;
}
function dM(e) {
  const { visualElement: t } = e.options;
  t && t.getProps().onBeforeLayoutMeasure && t.notify('BeforeLayoutMeasure'),
    e.resetTransform();
}
function W0(e) {
  e.finishAnimation(),
    (e.targetDelta = e.relativeTarget = e.target = void 0),
    (e.isProjectionDirty = !0);
}
function pM(e) {
  e.resolveTargetDelta();
}
function hM(e) {
  e.calcProjection();
}
function mM(e) {
  e.resetSkewAndRotation();
}
function gM(e) {
  e.removeLeadSnapshot();
}
function U0(e, t, r) {
  (e.translate = qt(t.translate, 0, r)),
    (e.scale = qt(t.scale, 1, r)),
    (e.origin = t.origin),
    (e.originPoint = t.originPoint);
}
function H0(e, t, r, n) {
  (e.min = qt(t.min, r.min, n)), (e.max = qt(t.max, r.max, n));
}
function _M(e, t, r, n) {
  H0(e.x, t.x, r.x, n), H0(e.y, t.y, r.y, n);
}
function yM(e) {
  return e.animationValues && e.animationValues.opacityExit !== void 0;
}
const vM = { duration: 0.45, ease: [0.4, 0, 0.1, 1] },
  Q0 = (e) =>
    typeof navigator < 'u' &&
    navigator.userAgent &&
    navigator.userAgent.toLowerCase().includes(e),
  G0 = Q0('applewebkit/') && !Q0('chrome/') ? Math.round : un;
function K0(e) {
  (e.min = G0(e.min)), (e.max = G0(e.max));
}
function bM(e) {
  K0(e.x), K0(e.y);
}
function zS(e, t, r) {
  return (
    e === 'position' || (e === 'preserve-aspect' && !bL(N0(t), N0(r), 0.2))
  );
}
function wM(e) {
  var t;
  return (
    e !== e.root &&
    ((t = e.scroll) === null || t === void 0 ? void 0 : t.wasRoot)
  );
}
const SM = DS({
    attachResizeListener: (e, t) => Br(e, 'resize', t),
    measureScroll: () => ({
      x: document.documentElement.scrollLeft || document.body.scrollLeft,
      y: document.documentElement.scrollTop || document.body.scrollTop,
    }),
    checkIsScrollRoot: () => !0,
  }),
  rp = { current: void 0 },
  $S = DS({
    measureScroll: (e) => ({ x: e.scrollLeft, y: e.scrollTop }),
    defaultParent: () => {
      if (!rp.current) {
        const e = new SM({});
        e.mount(window), e.setOptions({ layoutScroll: !0 }), (rp.current = e);
      }
      return rp.current;
    },
    resetTransform: (e, t) => {
      e.style.transform = t !== void 0 ? t : 'none';
    },
    checkIsScrollRoot: (e) => window.getComputedStyle(e).position === 'fixed',
  }),
  xM = {
    pan: { Feature: ML },
    drag: { Feature: LL, ProjectionNode: $S, MeasureLayout: IS },
  },
  kh = { current: null },
  NS = { current: !1 };
function kM() {
  if (((NS.current = !0), !!Wm))
    if (window.matchMedia) {
      const e = window.matchMedia('(prefers-reduced-motion)'),
        t = () => (kh.current = e.matches);
      e.addListener(t), t();
    } else kh.current = !1;
}
function EM(e, t, r) {
  for (const n in t) {
    const i = t[n],
      o = r[n];
    if (ln(i)) e.addValue(n, i);
    else if (ln(o)) e.addValue(n, tl(i, { owner: e }));
    else if (o !== i)
      if (e.hasValue(n)) {
        const s = e.getValue(n);
        s.liveStyle === !0 ? s.jump(i) : s.hasAnimated || s.set(i);
      } else {
        const s = e.getStaticValue(n);
        e.addValue(n, tl(s !== void 0 ? s : i, { owner: e }));
      }
  }
  for (const n in r) t[n] === void 0 && e.removeValue(n);
  return t;
}
const X0 = new WeakMap(),
  TM = [...Qw, sn, Oi],
  CM = (e) => TM.find(Hw(e)),
  Y0 = [
    'AnimationStart',
    'AnimationComplete',
    'Update',
    'BeforeLayoutMeasure',
    'LayoutMeasure',
    'LayoutAnimationStart',
    'LayoutAnimationComplete',
  ],
  AM = Qm.length;
class PM {
  scrapeMotionValuesFromProps(t, r, n) {
    return {};
  }
  constructor(
    {
      parent: t,
      props: r,
      presenceContext: n,
      reducedMotionConfig: i,
      blockInitialAnimation: o,
      visualState: s,
    },
    l = {},
  ) {
    (this.applyWillChange = !1),
      (this.current = null),
      (this.children = new Set()),
      (this.isVariantNode = !1),
      (this.isControllingVariants = !1),
      (this.shouldReduceMotion = null),
      (this.values = new Map()),
      (this.KeyframeResolver = ag),
      (this.features = {}),
      (this.valueSubscriptions = new Map()),
      (this.prevMotionValues = {}),
      (this.events = {}),
      (this.propEventSubscriptions = {}),
      (this.notifyUpdate = () => this.notify('Update', this.latestValues)),
      (this.render = () => {
        (this.isRenderScheduled = !1),
          this.current &&
            (this.triggerBuild(),
            this.renderInstance(
              this.current,
              this.renderState,
              this.props.style,
              this.projection,
            ));
      }),
      (this.isRenderScheduled = !1),
      (this.scheduleRender = () => {
        this.isRenderScheduled ||
          ((this.isRenderScheduled = !0), ct.render(this.render, !1, !0));
      });
    const { latestValues: c, renderState: h } = s;
    (this.latestValues = c),
      (this.baseTarget = { ...c }),
      (this.initialValues = r.initial ? { ...c } : {}),
      (this.renderState = h),
      (this.parent = t),
      (this.props = r),
      (this.presenceContext = n),
      (this.depth = t ? t.depth + 1 : 0),
      (this.reducedMotionConfig = i),
      (this.options = l),
      (this.blockInitialAnimation = !!o),
      (this.isControllingVariants = sf(r)),
      (this.isVariantNode = Sw(r)),
      this.isVariantNode && (this.variantChildren = new Set()),
      (this.manuallyAnimateOnMount = !!(t && t.current));
    const { willChange: y, ...m } = this.scrapeMotionValuesFromProps(
      r,
      {},
      this,
    );
    for (const x in m) {
      const I = m[x];
      c[x] !== void 0 && ln(I) && I.set(c[x], !1);
    }
  }
  mount(t) {
    (this.current = t),
      X0.set(t, this),
      this.projection && !this.projection.instance && this.projection.mount(t),
      this.parent &&
        this.isVariantNode &&
        !this.isControllingVariants &&
        (this.removeFromVariantTree = this.parent.addVariantChild(this)),
      this.values.forEach((r, n) => this.bindToMotionValue(n, r)),
      NS.current || kM(),
      (this.shouldReduceMotion =
        this.reducedMotionConfig === 'never'
          ? !1
          : this.reducedMotionConfig === 'always'
            ? !0
            : kh.current),
      this.parent && this.parent.children.add(this),
      this.update(this.props, this.presenceContext);
  }
  unmount() {
    X0.delete(this.current),
      this.projection && this.projection.unmount(),
      ti(this.notifyUpdate),
      ti(this.render),
      this.valueSubscriptions.forEach((t) => t()),
      this.valueSubscriptions.clear(),
      this.removeFromVariantTree && this.removeFromVariantTree(),
      this.parent && this.parent.children.delete(this);
    for (const t in this.events) this.events[t].clear();
    for (const t in this.features) {
      const r = this.features[t];
      r && (r.unmount(), (r.isMounted = !1));
    }
    this.current = null;
  }
  bindToMotionValue(t, r) {
    this.valueSubscriptions.has(t) && this.valueSubscriptions.get(t)();
    const n = zi.has(t),
      i = r.on('change', (l) => {
        (this.latestValues[t] = l),
          this.props.onUpdate && ct.preRender(this.notifyUpdate),
          n && this.projection && (this.projection.isTransformDirty = !0);
      }),
      o = r.on('renderRequest', this.scheduleRender);
    let s;
    window.MotionCheckAppearSync &&
      (s = window.MotionCheckAppearSync(this, t, r)),
      this.valueSubscriptions.set(t, () => {
        i(), o(), s && s(), r.owner && r.stop();
      });
  }
  sortNodePosition(t) {
    return !this.current ||
      !this.sortInstanceNodePosition ||
      this.type !== t.type
      ? 0
      : this.sortInstanceNodePosition(this.current, t.current);
  }
  updateFeatures() {
    let t = 'animation';
    for (t in vs) {
      const r = vs[t];
      if (!r) continue;
      const { isEnabled: n, Feature: i } = r;
      if (
        (!this.features[t] &&
          i &&
          n(this.props) &&
          (this.features[t] = new i(this)),
        this.features[t])
      ) {
        const o = this.features[t];
        o.isMounted ? o.update() : (o.mount(), (o.isMounted = !0));
      }
    }
  }
  triggerBuild() {
    this.build(this.renderState, this.latestValues, this.props);
  }
  measureViewportBox() {
    return this.current
      ? this.measureInstanceViewportBox(this.current, this.props)
      : Ot();
  }
  getStaticValue(t) {
    return this.latestValues[t];
  }
  setStaticValue(t, r) {
    this.latestValues[t] = r;
  }
  update(t, r) {
    (t.transformTemplate || this.props.transformTemplate) &&
      this.scheduleRender(),
      (this.prevProps = this.props),
      (this.props = t),
      (this.prevPresenceContext = this.presenceContext),
      (this.presenceContext = r);
    for (let n = 0; n < Y0.length; n++) {
      const i = Y0[n];
      this.propEventSubscriptions[i] &&
        (this.propEventSubscriptions[i](),
        delete this.propEventSubscriptions[i]);
      const o = 'on' + i,
        s = t[o];
      s && (this.propEventSubscriptions[i] = this.on(i, s));
    }
    (this.prevMotionValues = EM(
      this,
      this.scrapeMotionValuesFromProps(t, this.prevProps, this),
      this.prevMotionValues,
    )),
      this.handleChildMotionValue && this.handleChildMotionValue();
  }
  getProps() {
    return this.props;
  }
  getVariant(t) {
    return this.props.variants ? this.props.variants[t] : void 0;
  }
  getDefaultTransition() {
    return this.props.transition;
  }
  getTransformPagePoint() {
    return this.props.transformPagePoint;
  }
  getClosestVariantNode() {
    return this.isVariantNode
      ? this
      : this.parent
        ? this.parent.getClosestVariantNode()
        : void 0;
  }
  getVariantContext(t = !1) {
    if (t) return this.parent ? this.parent.getVariantContext() : void 0;
    if (!this.isControllingVariants) {
      const n = this.parent ? this.parent.getVariantContext() || {} : {};
      return (
        this.props.initial !== void 0 && (n.initial = this.props.initial), n
      );
    }
    const r = {};
    for (let n = 0; n < AM; n++) {
      const i = Qm[n],
        o = this.props[i];
      (Ya(o) || o === !1) && (r[i] = o);
    }
    return r;
  }
  addVariantChild(t) {
    const r = this.getClosestVariantNode();
    if (r)
      return (
        r.variantChildren && r.variantChildren.add(t),
        () => r.variantChildren.delete(t)
      );
  }
  addValue(t, r) {
    const n = this.values.get(t);
    r !== n &&
      (n && this.removeValue(t),
      this.bindToMotionValue(t, r),
      this.values.set(t, r),
      (this.latestValues[t] = r.get()));
  }
  removeValue(t) {
    this.values.delete(t);
    const r = this.valueSubscriptions.get(t);
    r && (r(), this.valueSubscriptions.delete(t)),
      delete this.latestValues[t],
      this.removeValueFromRenderState(t, this.renderState);
  }
  hasValue(t) {
    return this.values.has(t);
  }
  getValue(t, r) {
    if (this.props.values && this.props.values[t]) return this.props.values[t];
    let n = this.values.get(t);
    return (
      n === void 0 &&
        r !== void 0 &&
        ((n = tl(r === null ? void 0 : r, { owner: this })),
        this.addValue(t, n)),
      n
    );
  }
  readValue(t, r) {
    var n;
    let i =
      this.latestValues[t] !== void 0 || !this.current
        ? this.latestValues[t]
        : (n = this.getBaseTargetFromProps(this.props, t)) !== null &&
            n !== void 0
          ? n
          : this.readValueFromInstance(this.current, t, this.options);
    return (
      i != null &&
        (typeof i == 'string' && (Ww(i) || Vw(i))
          ? (i = parseFloat(i))
          : !CM(i) && Oi.test(r) && (i = tS(t, r)),
        this.setBaseTarget(t, ln(i) ? i.get() : i)),
      ln(i) ? i.get() : i
    );
  }
  setBaseTarget(t, r) {
    this.baseTarget[t] = r;
  }
  getBaseTarget(t) {
    var r;
    const { initial: n } = this.props;
    let i;
    if (typeof n == 'string' || typeof n == 'object') {
      const s = ig(
        this.props,
        n,
        (r = this.presenceContext) === null || r === void 0 ? void 0 : r.custom,
      );
      s && (i = s[t]);
    }
    if (n && i !== void 0) return i;
    const o = this.getBaseTargetFromProps(this.props, t);
    return o !== void 0 && !ln(o)
      ? o
      : this.initialValues[t] !== void 0 && i === void 0
        ? void 0
        : this.baseTarget[t];
  }
  on(t, r) {
    return this.events[t] || (this.events[t] = new gg()), this.events[t].add(r);
  }
  notify(t, ...r) {
    this.events[t] && this.events[t].notify(...r);
  }
}
class jS extends PM {
  constructor() {
    super(...arguments), (this.KeyframeResolver = nS);
  }
  sortInstanceNodePosition(t, r) {
    return t.compareDocumentPosition(r) & 2 ? 1 : -1;
  }
  getBaseTargetFromProps(t, r) {
    return t.style ? t.style[r] : void 0;
  }
  removeValueFromRenderState(t, { vars: r, style: n }) {
    delete r[t], delete n[t];
  }
}
function qM(e) {
  return window.getComputedStyle(e);
}
class IM extends jS {
  constructor() {
    super(...arguments),
      (this.type = 'html'),
      (this.applyWillChange = !0),
      (this.renderInstance = qw);
  }
  readValueFromInstance(t, r) {
    if (zi.has(r)) {
      const n = ug(r);
      return (n && n.default) || 0;
    } else {
      const n = qM(t),
        i = (Tw(r) ? n.getPropertyValue(r) : n[r]) || 0;
      return typeof i == 'string' ? i.trim() : i;
    }
  }
  measureInstanceViewportBox(t, { transformPagePoint: r }) {
    return PS(t, r);
  }
  build(t, r, n) {
    Zm(t, r, n.transformTemplate);
  }
  scrapeMotionValuesFromProps(t, r, n) {
    return rg(t, r, n);
  }
  handleChildMotionValue() {
    this.childSubscription &&
      (this.childSubscription(), delete this.childSubscription);
    const { children: t } = this.props;
    ln(t) &&
      (this.childSubscription = t.on('change', (r) => {
        this.current && (this.current.textContent = `${r}`);
      }));
  }
}
class FM extends jS {
  constructor() {
    super(...arguments),
      (this.type = 'svg'),
      (this.isSVGTag = !1),
      (this.measureInstanceViewportBox = Ot);
  }
  getBaseTargetFromProps(t, r) {
    return t[r];
  }
  readValueFromInstance(t, r) {
    if (zi.has(r)) {
      const n = ug(r);
      return (n && n.default) || 0;
    }
    return (r = Iw.has(r) ? r : of(r)), t.getAttribute(r);
  }
  scrapeMotionValuesFromProps(t, r, n) {
    return Rw(t, r, n);
  }
  build(t, r, n) {
    tg(t, r, this.isSVGTag, n.transformTemplate);
  }
  renderInstance(t, r, n, i) {
    Fw(t, r, n, i);
  }
  mount(t) {
    (this.isSVGTag = ng(t.tagName)), super.mount(t);
  }
}
const RM = (e, t) =>
    Km(e) ? new FM(t) : new IM(t, { allowProjection: e !== K.Fragment }),
  OM = { layout: { ProjectionNode: $S, MeasureLayout: IS } },
  LM = { ...dL, ...w4, ...xM, ...OM },
  MM = qR((e, t) => l4(e, t, LM, RM));
class DM extends K.Component {
  getSnapshotBeforeUpdate(t) {
    const r = this.props.childRef.current;
    if (r && t.isPresent && !this.props.isPresent) {
      const n = this.props.sizeRef.current;
      (n.height = r.offsetHeight || 0),
        (n.width = r.offsetWidth || 0),
        (n.top = r.offsetTop),
        (n.left = r.offsetLeft);
    }
    return null;
  }
  componentDidUpdate() {}
  render() {
    return this.props.children;
  }
}
function zM({ children: e, isPresent: t }) {
  const r = K.useId(),
    n = K.useRef(null),
    i = K.useRef({ width: 0, height: 0, top: 0, left: 0 }),
    { nonce: o } = K.useContext(Vm);
  return (
    K.useInsertionEffect(() => {
      const { width: s, height: l, top: c, left: h } = i.current;
      if (t || !n.current || !s || !l) return;
      n.current.dataset.motionPopId = r;
      const y = document.createElement('style');
      return (
        o && (y.nonce = o),
        document.head.appendChild(y),
        y.sheet &&
          y.sheet.insertRule(`
          [data-motion-pop-id="${r}"] {
            position: absolute !important;
            width: ${s}px !important;
            height: ${l}px !important;
            top: ${c}px !important;
            left: ${h}px !important;
          }
        `),
        () => {
          document.head.removeChild(y);
        }
      );
    }, [t]),
    te.jsx(DM, {
      isPresent: t,
      childRef: n,
      sizeRef: i,
      children: K.cloneElement(e, { ref: n }),
    })
  );
}
const $M = ({
  children: e,
  initial: t,
  isPresent: r,
  onExitComplete: n,
  custom: i,
  presenceAffectsLayout: o,
  mode: s,
}) => {
  const l = og(NM),
    c = K.useId(),
    h = K.useMemo(
      () => ({
        id: c,
        initial: t,
        isPresent: r,
        custom: i,
        onExitComplete: (y) => {
          l.set(y, !0);
          for (const m of l.values()) if (!m) return;
          n && n();
        },
        register: (y) => (l.set(y, !1), () => l.delete(y)),
      }),
      o ? [Math.random()] : [r],
    );
  return (
    K.useMemo(() => {
      l.forEach((y, m) => l.set(m, !1));
    }, [r]),
    K.useEffect(() => {
      !r && !l.size && n && n();
    }, [r]),
    s === 'popLayout' && (e = te.jsx(zM, { isPresent: r, children: e })),
    te.jsx(cl.Provider, { value: h, children: e })
  );
};
function NM() {
  return new Map();
}
const ou = (e) => e.key || '';
function J0(e) {
  const t = [];
  return (
    K.Children.forEach(e, (r) => {
      K.isValidElement(r) && t.push(r);
    }),
    t
  );
}
const jM = ({
  children: e,
  exitBeforeEnter: t,
  custom: r,
  initial: n = !0,
  onExitComplete: i,
  presenceAffectsLayout: o = !0,
  mode: s = 'sync',
}) => {
  const l = K.useMemo(() => J0(e), [e]),
    c = l.map(ou),
    h = K.useRef(!0),
    y = K.useRef(l),
    m = og(() => new Map()),
    [x, I] = K.useState(l),
    [$, j] = K.useState(l);
  gw(() => {
    (h.current = !1), (y.current = l);
    for (let T = 0; T < $.length; T++) {
      const q = ou($[T]);
      c.includes(q) ? m.delete(q) : m.get(q) !== !0 && m.set(q, !1);
    }
  }, [$, c.length, c.join('-')]);
  const G = [];
  if (l !== x) {
    let T = [...l];
    for (let q = 0; q < $.length; q++) {
      const H = $[q],
        ie = ou(H);
      c.includes(ie) || (T.splice(q, 0, H), G.push(H));
    }
    s === 'wait' && G.length && (T = G), j(J0(T)), I(l);
    return;
  }
  const { forceRender: C } = K.useContext(Gm);
  return te.jsx(te.Fragment, {
    children: $.map((T) => {
      const q = ou(T),
        H = l === $ || c.includes(q),
        ie = () => {
          if (m.has(q)) m.set(q, !0);
          else return;
          let he = !0;
          m.forEach((le) => {
            le || (he = !1);
          }),
            he && (C == null || C(), j(y.current), i && i());
        };
      return te.jsx(
        $M,
        {
          isPresent: H,
          initial: !h.current || n ? void 0 : !1,
          custom: H ? void 0 : r,
          presenceAffectsLayout: o,
          mode: s,
          onExitComplete: H ? void 0 : ie,
          children: T,
        },
        q,
      );
    }),
  });
};
var BM = {
    initial: (e) => {
      const { position: t } = e,
        r = ['top', 'bottom'].includes(t) ? 'y' : 'x';
      let n = ['top-right', 'bottom-right'].includes(t) ? 1 : -1;
      return t === 'bottom' && (n = 1), { opacity: 0, [r]: n * 24 };
    },
    animate: {
      opacity: 1,
      y: 0,
      x: 0,
      scale: 1,
      transition: { duration: 0.4, ease: [0.4, 0, 0.2, 1] },
    },
    exit: {
      opacity: 0,
      scale: 0.85,
      transition: { duration: 0.2, ease: [0.4, 0, 1, 1] },
    },
  },
  BS = K.memo((e) => {
    const {
        id: t,
        message: r,
        onCloseComplete: n,
        onRequestRemove: i,
        requestClose: o = !1,
        position: s = 'bottom',
        duration: l = 5e3,
        containerStyle: c,
        motionVariants: h = BM,
        toastSpacing: y = '0.5rem',
      } = e,
      [m, x] = K.useState(l),
      I = zL();
    uh(() => {
      I || n == null || n();
    }, [I]),
      uh(() => {
        x(l);
      }, [l]);
    const $ = () => x(null),
      j = () => x(l),
      G = () => {
        I && i();
      };
    K.useEffect(() => {
      I && o && i();
    }, [I, o, i]),
      pR(G, m);
    const C = K.useMemo(
        () => ({
          pointerEvents: 'auto',
          maxWidth: 560,
          minWidth: 300,
          margin: y,
          ...c,
        }),
        [c, y],
      ),
      T = K.useMemo(() => fR(s), [s]);
    return te.jsx(MM.div, {
      layout: !0,
      className: 'chakra-toast',
      variants: h,
      initial: 'initial',
      animate: 'animate',
      exit: 'exit',
      onHoverStart: $,
      onHoverEnd: j,
      custom: { position: s },
      style: T,
      children: te.jsx(dt.div, {
        role: 'status',
        'aria-atomic': 'true',
        className: 'chakra-toast__inner',
        __css: C,
        children: Si(r, { id: t, onClose: G }),
      }),
    });
  });
BS.displayName = 'ToastComponent';
var Z0 = {
    path: te.jsxs('g', {
      stroke: 'currentColor',
      strokeWidth: '1.5',
      children: [
        te.jsx('path', {
          strokeLinecap: 'round',
          fill: 'none',
          d: 'M9,9a3,3,0,1,1,4,2.829,1.5,1.5,0,0,0-1,1.415V14.25',
        }),
        te.jsx('path', {
          fill: 'currentColor',
          strokeLinecap: 'round',
          d: 'M12,17.25a.375.375,0,1,0,.375.375A.375.375,0,0,0,12,17.25h0',
        }),
        te.jsx('circle', {
          fill: 'none',
          strokeMiterlimit: '10',
          cx: '12',
          cy: '12',
          r: '11.25',
        }),
      ],
    }),
    viewBox: '0 0 24 24',
  },
  ml = Qt((e, t) => {
    const {
        as: r,
        viewBox: n,
        color: i = 'currentColor',
        focusable: o = !1,
        children: s,
        className: l,
        __css: c,
        ...h
      } = e,
      y = fn('chakra-icon', l),
      m = Es('Icon', e),
      x = {
        w: '1em',
        h: '1em',
        display: 'inline-block',
        lineHeight: '1em',
        flexShrink: 0,
        color: i,
        ...c,
        ...m,
      },
      I = { ref: t, focusable: o, className: y, __css: x },
      $ = n ?? Z0.viewBox;
    if (r && typeof r != 'string') return te.jsx(dt.svg, { as: r, ...I, ...h });
    const j = s ?? Z0.path;
    return te.jsx(dt.svg, {
      verticalAlign: 'middle',
      viewBox: $,
      ...I,
      ...h,
      children: j,
    });
  });
ml.displayName = 'Icon';
function VM(e) {
  return te.jsx(ml, {
    viewBox: '0 0 24 24',
    ...e,
    children: te.jsx('path', {
      fill: 'currentColor',
      d: 'M12,0A12,12,0,1,0,24,12,12.014,12.014,0,0,0,12,0Zm6.927,8.2-6.845,9.289a1.011,1.011,0,0,1-1.43.188L5.764,13.769a1,1,0,1,1,1.25-1.562l4.076,3.261,6.227-8.451A1,1,0,1,1,18.927,8.2Z',
    }),
  });
}
function WM(e) {
  return te.jsx(ml, {
    viewBox: '0 0 24 24',
    ...e,
    children: te.jsx('path', {
      fill: 'currentColor',
      d: 'M12,0A12,12,0,1,0,24,12,12.013,12.013,0,0,0,12,0Zm.25,5a1.5,1.5,0,1,1-1.5,1.5A1.5,1.5,0,0,1,12.25,5ZM14.5,18.5h-4a1,1,0,0,1,0-2h.75a.25.25,0,0,0,.25-.25v-4.5a.25.25,0,0,0-.25-.25H10.5a1,1,0,0,1,0-2h1a2,2,0,0,1,2,2v4.75a.25.25,0,0,0,.25.25h.75a1,1,0,1,1,0,2Z',
    }),
  });
}
function ev(e) {
  return te.jsx(ml, {
    viewBox: '0 0 24 24',
    ...e,
    children: te.jsx('path', {
      fill: 'currentColor',
      d: 'M11.983,0a12.206,12.206,0,0,0-8.51,3.653A11.8,11.8,0,0,0,0,12.207,11.779,11.779,0,0,0,11.8,24h.214A12.111,12.111,0,0,0,24,11.791h0A11.766,11.766,0,0,0,11.983,0ZM10.5,16.542a1.476,1.476,0,0,1,1.449-1.53h.027a1.527,1.527,0,0,1,1.523,1.47,1.475,1.475,0,0,1-1.449,1.53h-.027A1.529,1.529,0,0,1,10.5,16.542ZM11,12.5v-6a1,1,0,0,1,2,0v6a1,1,0,1,1-2,0Z',
    }),
  });
}
var UM = Xc({
    '0%': { transform: 'rotate(0deg)' },
    '100%': { transform: 'rotate(360deg)' },
  }),
  df = Qt((e, t) => {
    const r = Es('Spinner', e),
      {
        label: n = 'Loading...',
        thickness: i = '2px',
        speed: o = '0.45s',
        emptyColor: s = 'transparent',
        className: l,
        ...c
      } = ii(e),
      h = fn('chakra-spinner', l),
      y = {
        display: 'inline-block',
        borderColor: 'currentColor',
        borderStyle: 'solid',
        borderRadius: '99999px',
        borderWidth: i,
        borderBottomColor: s,
        borderLeftColor: s,
        animation: `${UM} ${o} linear infinite`,
        ...r,
      };
    return te.jsx(dt.div, {
      ref: t,
      __css: y,
      className: h,
      ...c,
      children: n && te.jsx(dt.span, { srOnly: !0, children: n }),
    });
  });
df.displayName = 'Spinner';
var [HM, _g] = ri({
    name: 'AlertContext',
    hookName: 'useAlertContext',
    providerName: '<Alert />',
  }),
  [QM, yg] = ri({
    name: 'AlertStylesContext',
    hookName: 'useAlertStyles',
    providerName: '<Alert />',
  }),
  VS = {
    info: { icon: WM, colorScheme: 'blue' },
    warning: { icon: ev, colorScheme: 'orange' },
    success: { icon: VM, colorScheme: 'green' },
    error: { icon: ev, colorScheme: 'red' },
    loading: { icon: df, colorScheme: 'blue' },
  };
function GM(e) {
  return VS[e].colorScheme;
}
function KM(e) {
  return VS[e].icon;
}
var WS = Qt(function (t, r) {
  const n = yg(),
    { status: i } = _g(),
    o = { display: 'inline', ...n.description };
  return te.jsx(dt.div, {
    ref: r,
    'data-status': i,
    ...t,
    className: fn('chakra-alert__desc', t.className),
    __css: o,
  });
});
WS.displayName = 'AlertDescription';
function US(e) {
  const { status: t } = _g(),
    r = KM(t),
    n = yg(),
    i = t === 'loading' ? n.spinner : n.icon;
  return te.jsx(dt.span, {
    display: 'inherit',
    'data-status': t,
    ...e,
    className: fn('chakra-alert__icon', e.className),
    __css: i,
    children: e.children || te.jsx(r, { h: '100%', w: '100%' }),
  });
}
US.displayName = 'AlertIcon';
var HS = Qt(function (t, r) {
  const n = yg(),
    { status: i } = _g();
  return te.jsx(dt.div, {
    ref: r,
    'data-status': i,
    ...t,
    className: fn('chakra-alert__title', t.className),
    __css: n.title,
  });
});
HS.displayName = 'AlertTitle';
var QS = Qt(function (t, r) {
  var n;
  const { status: i = 'info', addRole: o = !0, ...s } = ii(t),
    l = (n = t.colorScheme) != null ? n : GM(i),
    c = nf('Alert', { ...t, colorScheme: l }),
    h = {
      width: '100%',
      display: 'flex',
      alignItems: 'center',
      position: 'relative',
      overflow: 'hidden',
      ...c.container,
    };
  return te.jsx(HM, {
    value: { status: i },
    children: te.jsx(QM, {
      value: c,
      children: te.jsx(dt.div, {
        'data-status': i,
        role: o ? 'alert' : void 0,
        ref: r,
        ...s,
        className: fn('chakra-alert', t.className),
        __css: h,
      }),
    }),
  });
});
QS.displayName = 'Alert';
function XM(e) {
  return te.jsx(ml, {
    focusable: 'false',
    'aria-hidden': !0,
    ...e,
    children: te.jsx('path', {
      fill: 'currentColor',
      d: 'M.439,21.44a1.5,1.5,0,0,0,2.122,2.121L11.823,14.3a.25.25,0,0,1,.354,0l9.262,9.263a1.5,1.5,0,1,0,2.122-2.121L14.3,12.177a.25.25,0,0,1,0-.354l9.263-9.262A1.5,1.5,0,0,0,21.439.44L12.177,9.7a.25.25,0,0,1-.354,0L2.561.44A1.5,1.5,0,0,0,.439,2.561L9.7,11.823a.25.25,0,0,1,0,.354Z',
    }),
  });
}
var GS = Qt(function (t, r) {
  const n = Es('CloseButton', t),
    { children: i, isDisabled: o, __css: s, ...l } = ii(t),
    c = {
      outline: 0,
      display: 'flex',
      alignItems: 'center',
      justifyContent: 'center',
      flexShrink: 0,
    };
  return te.jsx(dt.button, {
    type: 'button',
    'aria-label': 'Close',
    ref: r,
    disabled: o,
    __css: { ...c, ...n, ...s },
    ...l,
    children: i || te.jsx(XM, { width: '1em', height: '1em' }),
  });
});
GS.displayName = 'CloseButton';
var YM = {
    top: [],
    'top-left': [],
    'top-right': [],
    'bottom-left': [],
    bottom: [],
    'bottom-right': [],
  },
  ka = JM(YM);
function JM(e) {
  let t = e;
  const r = new Set(),
    n = (i) => {
      (t = i(t)), r.forEach((o) => o());
    };
  return {
    getState: () => t,
    subscribe: (i) => (
      r.add(i),
      () => {
        n(() => e), r.delete(i);
      }
    ),
    removeToast: (i, o) => {
      n((s) => ({ ...s, [o]: s[o].filter((l) => l.id != i) }));
    },
    notify: (i, o) => {
      const s = ZM(i, o),
        { position: l, id: c } = s;
      return (
        n((h) => {
          var y, m;
          const I = l.includes('top')
            ? [s, ...((y = h[l]) != null ? y : [])]
            : [...((m = h[l]) != null ? m : []), s];
          return { ...h, [l]: I };
        }),
        c
      );
    },
    update: (i, o) => {
      i &&
        n((s) => {
          const l = { ...s },
            { position: c, index: h } = Dy(l, i);
          return (
            c && h !== -1 && (l[c][h] = { ...l[c][h], ...o, message: tD(o) }), l
          );
        });
    },
    closeAll: ({ positions: i } = {}) => {
      n((o) =>
        (
          i ?? [
            'bottom',
            'bottom-right',
            'bottom-left',
            'top',
            'top-left',
            'top-right',
          ]
        ).reduce(
          (c, h) => ((c[h] = o[h].map((y) => ({ ...y, requestClose: !0 }))), c),
          { ...o },
        ),
      );
    },
    close: (i) => {
      n((o) => {
        const s = mw(o, i);
        return s
          ? {
              ...o,
              [s]: o[s].map((l) =>
                l.id == i ? { ...l, requestClose: !0 } : l,
              ),
            }
          : o;
      });
    },
    isActive: (i) => !!Dy(ka.getState(), i).position,
  };
}
var tv = 0;
function ZM(e, t = {}) {
  var r, n;
  tv += 1;
  const i = (r = t.id) != null ? r : tv,
    o = (n = t.position) != null ? n : 'bottom';
  return {
    id: i,
    message: e,
    position: o,
    duration: t.duration,
    onCloseComplete: t.onCloseComplete,
    onRequestRemove: () => ka.removeToast(String(i), o),
    status: t.status,
    requestClose: !1,
    containerStyle: t.containerStyle,
  };
}
var eD = (e) => {
  const {
      status: t,
      variant: r = 'solid',
      id: n,
      title: i,
      isClosable: o,
      onClose: s,
      description: l,
      colorScheme: c,
      icon: h,
    } = e,
    y = n
      ? {
          root: `toast-${n}`,
          title: `toast-${n}-title`,
          description: `toast-${n}-description`,
        }
      : void 0;
  return te.jsxs(QS, {
    addRole: !1,
    status: t,
    variant: r,
    id: y == null ? void 0 : y.root,
    alignItems: 'start',
    borderRadius: 'md',
    boxShadow: 'lg',
    paddingEnd: 8,
    textAlign: 'start',
    width: 'auto',
    colorScheme: c,
    children: [
      te.jsx(US, { children: h }),
      te.jsxs(dt.div, {
        flex: '1',
        maxWidth: '100%',
        children: [
          i && te.jsx(HS, { id: y == null ? void 0 : y.title, children: i }),
          l &&
            te.jsx(WS, {
              id: y == null ? void 0 : y.description,
              display: 'block',
              children: l,
            }),
        ],
      }),
      o &&
        te.jsx(GS, {
          size: 'sm',
          onClick: s,
          position: 'absolute',
          insetEnd: 1,
          top: 1,
        }),
    ],
  });
};
function tD(e = {}) {
  const { render: t, toastComponent: r = eD } = e;
  return (i) =>
    typeof t == 'function' ? t({ ...i, ...e }) : te.jsx(r, { ...i, ...e });
}
var [nD, u5] = ri({ name: 'ToastOptionsContext', strict: !1 }),
  rD = (e) => {
    const t = K.useSyncExternalStore(ka.subscribe, ka.getState, ka.getState),
      { motionVariants: r, component: n = BS, portalProps: i } = e,
      s = Object.keys(t).map((l) => {
        const c = t[l];
        return te.jsx(
          'div',
          {
            role: 'region',
            'aria-live': 'polite',
            'aria-label': `Notifications-${l}`,
            id: `chakra-toast-manager-${l}`,
            style: dR(l),
            children: te.jsx(jM, {
              initial: !1,
              children: c.map((h) =>
                te.jsx(n, { motionVariants: r, ...h }, h.id),
              ),
            }),
          },
          l,
        );
      });
    return te.jsx(Yc, { ...i, children: s });
  },
  iD = (e) =>
    function ({ children: r, theme: n = e, toastOptions: i, ...o }) {
      return te.jsxs(uR, {
        theme: n,
        ...o,
        children: [
          te.jsx(nD, {
            value: i == null ? void 0 : i.defaultOptions,
            children: r,
          }),
          te.jsx(rD, { ...i }),
        ],
      });
    },
  oD = iD(FF);
function sD(e, t) {
  if (e != null) {
    if (typeof e == 'function') {
      e(t);
      return;
    }
    try {
      e.current = t;
    } catch {
      throw new Error(`Cannot assign value '${t}' to ref '${e}'`);
    }
  }
}
function nl(...e) {
  return (t) => {
    e.forEach((r) => {
      sD(r, t);
    });
  };
}
function aD(...e) {
  return K.useMemo(() => nl(...e), e);
}
function lD(e) {
  return K.Children.toArray(e).filter((t) => K.isValidElement(t));
}
var [c5, uD] = ri({ strict: !1, name: 'ButtonGroupContext' });
function cD(e) {
  const [t, r] = K.useState(!e);
  return {
    ref: K.useCallback((o) => {
      o && r(o.tagName === 'BUTTON');
    }, []),
    type: t ? 'button' : void 0,
  };
}
function Eh(e) {
  const { children: t, className: r, ...n } = e,
    i = K.isValidElement(t)
      ? K.cloneElement(t, { 'aria-hidden': !0, focusable: !1 })
      : t,
    o = fn('chakra-button__icon', r);
  return te.jsx(dt.span, {
    display: 'inline-flex',
    alignSelf: 'center',
    flexShrink: 0,
    ...n,
    className: o,
    children: i,
  });
}
Eh.displayName = 'ButtonIcon';
function Th(e) {
  const {
      label: t,
      placement: r,
      spacing: n = '0.5rem',
      children: i = te.jsx(df, {
        color: 'currentColor',
        width: '1em',
        height: '1em',
      }),
      className: o,
      __css: s,
      ...l
    } = e,
    c = fn('chakra-button__spinner', o),
    h = r === 'start' ? 'marginEnd' : 'marginStart',
    y = K.useMemo(
      () => ({
        display: 'flex',
        alignItems: 'center',
        position: t ? 'relative' : 'absolute',
        [h]: t ? n : 0,
        fontSize: '1em',
        lineHeight: 'normal',
        ...s,
      }),
      [s, t, h, n],
    );
  return te.jsx(dt.div, { className: c, ...l, __css: y, children: i });
}
Th.displayName = 'ButtonSpinner';
var Yo = Qt((e, t) => {
  const r = uD(),
    n = Es('Button', { ...r, ...e }),
    {
      isDisabled: i = r == null ? void 0 : r.isDisabled,
      isLoading: o,
      isActive: s,
      children: l,
      leftIcon: c,
      rightIcon: h,
      loadingText: y,
      iconSpacing: m = '0.5rem',
      type: x,
      spinner: I,
      spinnerPlacement: $ = 'start',
      className: j,
      as: G,
      ...C
    } = ii(e),
    T = K.useMemo(() => {
      const he = { ...(n == null ? void 0 : n._focus), zIndex: 1 };
      return {
        display: 'inline-flex',
        appearance: 'none',
        alignItems: 'center',
        justifyContent: 'center',
        userSelect: 'none',
        position: 'relative',
        whiteSpace: 'nowrap',
        verticalAlign: 'middle',
        outline: 'none',
        ...n,
        ...(!!r && { _focus: he }),
      };
    }, [n, r]),
    { ref: q, type: H } = cD(G),
    ie = { rightIcon: h, leftIcon: c, iconSpacing: m, children: l };
  return te.jsxs(dt.button, {
    ref: aD(t, q),
    as: G,
    type: x ?? H,
    'data-active': et(s),
    'data-loading': et(o),
    __css: T,
    className: fn('chakra-button', j),
    ...C,
    disabled: i || o,
    children: [
      o &&
        $ === 'start' &&
        te.jsx(Th, {
          className: 'chakra-button__spinner--start',
          label: y,
          placement: 'start',
          spacing: m,
          children: I,
        }),
      o
        ? y || te.jsx(dt.span, { opacity: 0, children: te.jsx(nv, { ...ie }) })
        : te.jsx(nv, { ...ie }),
      o &&
        $ === 'end' &&
        te.jsx(Th, {
          className: 'chakra-button__spinner--end',
          label: y,
          placement: 'end',
          spacing: m,
          children: I,
        }),
    ],
  });
});
Yo.displayName = 'Button';
function nv(e) {
  const { leftIcon: t, rightIcon: r, children: n, iconSpacing: i } = e;
  return te.jsxs(te.Fragment, {
    children: [
      t && te.jsx(Eh, { marginEnd: i, children: t }),
      n,
      r && te.jsx(Eh, { marginStart: i, children: r }),
    ],
  });
}
var [f5, fD] = ri({ name: 'CheckboxGroupContext', strict: !1 });
function dD(e) {
  const [t, r] = K.useState(e),
    [n, i] = K.useState(!1);
  return e !== t && (i(!0), r(e)), n;
}
function pD(e) {
  return te.jsx(dt.svg, {
    width: '1.2em',
    viewBox: '0 0 12 10',
    style: {
      fill: 'none',
      strokeWidth: 2,
      stroke: 'currentColor',
      strokeDasharray: 16,
    },
    ...e,
    children: te.jsx('polyline', { points: '1.5 6 4.5 9 10.5 1' }),
  });
}
function hD(e) {
  return te.jsx(dt.svg, {
    width: '1.2em',
    viewBox: '0 0 24 24',
    style: { stroke: 'currentColor', strokeWidth: 4 },
    ...e,
    children: te.jsx('line', { x1: '21', x2: '3', y1: '12', y2: '12' }),
  });
}
function mD(e) {
  const { isIndeterminate: t, isChecked: r, ...n } = e,
    i = t ? hD : pD;
  return r || t
    ? te.jsx(dt.div, {
        style: {
          display: 'flex',
          alignItems: 'center',
          justifyContent: 'center',
          height: '100%',
        },
        children: te.jsx(i, { ...n }),
      })
    : null;
}
var [gD, _D] = ri({
    name: 'FormControlStylesContext',
    errorMessage: `useFormControlStyles returned is 'undefined'. Seems you forgot to wrap the components in "<FormControl />" `,
  }),
  [yD, KS] = ri({ strict: !1, name: 'FormControlContext' });
function vD(e) {
  const {
      id: t,
      isRequired: r,
      isInvalid: n,
      isDisabled: i,
      isReadOnly: o,
      ...s
    } = e,
    l = K.useId(),
    c = t || `field-${l}`,
    h = `${c}-label`,
    y = `${c}-feedback`,
    m = `${c}-helptext`,
    [x, I] = K.useState(!1),
    [$, j] = K.useState(!1),
    [G, C] = K.useState(!1),
    T = K.useCallback(
      (le = {}, de = null) => ({
        id: m,
        ...le,
        ref: nl(de, (Fe) => {
          Fe && j(!0);
        }),
      }),
      [m],
    ),
    q = K.useCallback(
      (le = {}, de = null) => ({
        ...le,
        ref: de,
        'data-focus': et(G),
        'data-disabled': et(i),
        'data-invalid': et(n),
        'data-readonly': et(o),
        id: le.id !== void 0 ? le.id : h,
        htmlFor: le.htmlFor !== void 0 ? le.htmlFor : c,
      }),
      [c, i, G, n, o, h],
    ),
    H = K.useCallback(
      (le = {}, de = null) => ({
        id: y,
        ...le,
        ref: nl(de, (Fe) => {
          Fe && I(!0);
        }),
        'aria-live': 'polite',
      }),
      [y],
    ),
    ie = K.useCallback(
      (le = {}, de = null) => ({
        ...le,
        ...s,
        ref: de,
        role: 'group',
        'data-focus': et(G),
        'data-disabled': et(i),
        'data-invalid': et(n),
        'data-readonly': et(o),
      }),
      [s, i, G, n, o],
    ),
    he = K.useCallback(
      (le = {}, de = null) => ({
        ...le,
        ref: de,
        role: 'presentation',
        'aria-hidden': !0,
        children: le.children || '*',
      }),
      [],
    );
  return {
    isRequired: !!r,
    isInvalid: !!n,
    isReadOnly: !!o,
    isDisabled: !!i,
    isFocused: !!G,
    onFocus: () => C(!0),
    onBlur: () => C(!1),
    hasFeedbackText: x,
    setHasFeedbackText: I,
    hasHelpText: $,
    setHasHelpText: j,
    id: c,
    labelId: h,
    feedbackId: y,
    helpTextId: m,
    htmlProps: s,
    getHelpTextProps: T,
    getErrorMessageProps: H,
    getRootProps: ie,
    getLabelProps: q,
    getRequiredIndicatorProps: he,
  };
}
var bD = Qt(function (t, r) {
  const n = nf('Form', t),
    i = ii(t),
    { getRootProps: o, htmlProps: s, ...l } = vD(i),
    c = fn('chakra-form-control', t.className);
  return te.jsx(yD, {
    value: l,
    children: te.jsx(gD, {
      value: n,
      children: te.jsx(dt.div, {
        ...o({}, r),
        className: c,
        __css: n.container,
      }),
    }),
  });
});
bD.displayName = 'FormControl';
var wD = Qt(function (t, r) {
  const n = KS(),
    i = _D(),
    o = fn('chakra-form__helper-text', t.className);
  return te.jsx(dt.div, {
    ...(n == null ? void 0 : n.getHelpTextProps(t, r)),
    __css: i.helperText,
    className: o,
  });
});
wD.displayName = 'FormHelperText';
function SD(e) {
  const {
    isDisabled: t,
    isInvalid: r,
    isReadOnly: n,
    isRequired: i,
    ...o
  } = XS(e);
  return {
    ...o,
    disabled: t,
    readOnly: n,
    required: i,
    'aria-invalid': Td(r),
    'aria-required': Td(i),
    'aria-readonly': Td(n),
  };
}
function XS(e) {
  var t, r, n;
  const i = KS(),
    {
      id: o,
      disabled: s,
      readOnly: l,
      required: c,
      isRequired: h,
      isInvalid: y,
      isReadOnly: m,
      isDisabled: x,
      onFocus: I,
      onBlur: $,
      ...j
    } = e,
    G = e['aria-describedby'] ? [e['aria-describedby']] : [];
  return (
    i != null &&
      i.hasFeedbackText &&
      i != null &&
      i.isInvalid &&
      G.push(i.feedbackId),
    i != null && i.hasHelpText && G.push(i.helpTextId),
    {
      ...j,
      'aria-describedby': G.join(' ') || void 0,
      id: o ?? (i == null ? void 0 : i.id),
      isDisabled: (t = s ?? x) != null ? t : i == null ? void 0 : i.isDisabled,
      isReadOnly: (r = l ?? m) != null ? r : i == null ? void 0 : i.isReadOnly,
      isRequired: (n = c ?? h) != null ? n : i == null ? void 0 : i.isRequired,
      isInvalid: y ?? (i == null ? void 0 : i.isInvalid),
      onFocus: An(i == null ? void 0 : i.onFocus, I),
      onBlur: An(i == null ? void 0 : i.onBlur, $),
    }
  );
}
var xD = {
    border: '0',
    clip: 'rect(0, 0, 0, 0)',
    height: '1px',
    width: '1px',
    margin: '-1px',
    padding: '0',
    overflow: 'hidden',
    whiteSpace: 'nowrap',
    position: 'absolute',
  },
  kD = () => typeof document < 'u',
  rv = !1,
  gl = null,
  ho = !1,
  Ch = !1,
  Ah = new Set();
function vg(e, t) {
  Ah.forEach((r) => r(e, t));
}
var ED =
  typeof window < 'u' && window.navigator != null
    ? /^Mac/.test(window.navigator.platform)
    : !1;
function TD(e) {
  return !(
    e.metaKey ||
    (!ED && e.altKey) ||
    e.ctrlKey ||
    e.key === 'Control' ||
    e.key === 'Shift' ||
    e.key === 'Meta'
  );
}
function iv(e) {
  (ho = !0), TD(e) && ((gl = 'keyboard'), vg('keyboard', e));
}
function Co(e) {
  if (((gl = 'pointer'), e.type === 'mousedown' || e.type === 'pointerdown')) {
    ho = !0;
    const t = e.composedPath ? e.composedPath()[0] : e.target;
    let r = !1;
    try {
      r = t.matches(':focus-visible');
    } catch {}
    if (r) return;
    vg('pointer', e);
  }
}
function CD(e) {
  return e.mozInputSource === 0 && e.isTrusted
    ? !0
    : e.detail === 0 && !e.pointerType;
}
function AD(e) {
  CD(e) && ((ho = !0), (gl = 'virtual'));
}
function PD(e) {
  e.target === window ||
    e.target === document ||
    (!ho && !Ch && ((gl = 'virtual'), vg('virtual', e)), (ho = !1), (Ch = !1));
}
function qD() {
  (ho = !1), (Ch = !0);
}
function ov() {
  return gl !== 'pointer';
}
function ID() {
  if (!kD() || rv) return;
  const { focus: e } = HTMLElement.prototype;
  (HTMLElement.prototype.focus = function (...r) {
    (ho = !0), e.apply(this, r);
  }),
    document.addEventListener('keydown', iv, !0),
    document.addEventListener('keyup', iv, !0),
    document.addEventListener('click', AD, !0),
    window.addEventListener('focus', PD, !0),
    window.addEventListener('blur', qD, !1),
    typeof PointerEvent < 'u'
      ? (document.addEventListener('pointerdown', Co, !0),
        document.addEventListener('pointermove', Co, !0),
        document.addEventListener('pointerup', Co, !0))
      : (document.addEventListener('mousedown', Co, !0),
        document.addEventListener('mousemove', Co, !0),
        document.addEventListener('mouseup', Co, !0)),
    (rv = !0);
}
function FD(e) {
  ID(), e(ov());
  const t = () => e(ov());
  return (
    Ah.add(t),
    () => {
      Ah.delete(t);
    }
  );
}
function RD(e, t = []) {
  const r = Object.assign({}, e);
  for (const n of t) n in r && delete r[n];
  return r;
}
function OD(e = {}) {
  const t = XS(e),
    {
      isDisabled: r,
      isReadOnly: n,
      isRequired: i,
      isInvalid: o,
      id: s,
      onBlur: l,
      onFocus: c,
      'aria-describedby': h,
    } = t,
    {
      defaultChecked: y,
      isChecked: m,
      isFocusable: x,
      onChange: I,
      isIndeterminate: $,
      name: j,
      value: G,
      tabIndex: C = void 0,
      'aria-label': T,
      'aria-labelledby': q,
      'aria-invalid': H,
      ...ie
    } = e,
    he = RD(ie, [
      'isDisabled',
      'isReadOnly',
      'isRequired',
      'isInvalid',
      'id',
      'onBlur',
      'onFocus',
      'aria-describedby',
    ]),
    le = Iu(I),
    de = Iu(l),
    Fe = Iu(c),
    [Ae, ut] = K.useState(!1),
    [bt, ht] = K.useState(!1),
    [Dt, wt] = K.useState(!1),
    [qe, Qe] = K.useState(!1);
  K.useEffect(() => FD(ut), []);
  const Se = K.useRef(null),
    [Ne, je] = K.useState(!0),
    [mt, gt] = K.useState(!!y),
    Xe = m !== void 0,
    _t = Xe ? m : mt,
    pr = K.useCallback(
      (He) => {
        if (n || r) {
          He.preventDefault();
          return;
        }
        Xe || gt(_t ? He.target.checked : $ ? !0 : He.target.checked),
          le == null || le(He);
      },
      [n, r, _t, Xe, $, le],
    );
  ro(() => {
    Se.current && (Se.current.indeterminate = !!$);
  }, [$]),
    uh(() => {
      r && ht(!1);
    }, [r, ht]),
    ro(() => {
      const He = Se.current;
      if (!(He != null && He.form)) return;
      const Gt = () => {
        gt(!!y);
      };
      return (
        He.form.addEventListener('reset', Gt),
        () => {
          var St;
          return (St = He.form) == null
            ? void 0
            : St.removeEventListener('reset', Gt);
        }
      );
    }, []);
  const Vt = r && !x,
    $n = K.useCallback(
      (He) => {
        He.key === ' ' && Qe(!0);
      },
      [Qe],
    ),
    hr = K.useCallback(
      (He) => {
        He.key === ' ' && Qe(!1);
      },
      [Qe],
    );
  ro(() => {
    if (!Se.current) return;
    Se.current.checked !== _t && gt(Se.current.checked);
  }, [Se.current]);
  const Nn = K.useCallback(
      (He = {}, Gt = null) => {
        const St = (Ir) => {
          bt && Ir.preventDefault(), Qe(!0);
        };
        return {
          ...He,
          ref: Gt,
          'data-active': et(qe),
          'data-hover': et(Dt),
          'data-checked': et(_t),
          'data-focus': et(bt),
          'data-focus-visible': et(bt && Ae),
          'data-indeterminate': et($),
          'data-disabled': et(r),
          'data-invalid': et(o),
          'data-readonly': et(n),
          'aria-hidden': !0,
          onMouseDown: An(He.onMouseDown, St),
          onMouseUp: An(He.onMouseUp, () => Qe(!1)),
          onMouseEnter: An(He.onMouseEnter, () => wt(!0)),
          onMouseLeave: An(He.onMouseLeave, () => wt(!1)),
        };
      },
      [qe, _t, r, bt, Ae, Dt, $, o, n],
    ),
    Zn = K.useCallback(
      (He = {}, Gt = null) => ({
        ...He,
        ref: Gt,
        'data-active': et(qe),
        'data-hover': et(Dt),
        'data-checked': et(_t),
        'data-focus': et(bt),
        'data-focus-visible': et(bt && Ae),
        'data-indeterminate': et($),
        'data-disabled': et(r),
        'data-invalid': et(o),
        'data-readonly': et(n),
      }),
      [qe, _t, r, bt, Ae, Dt, $, o, n],
    ),
    Cs = K.useCallback(
      (He = {}, Gt = null) => ({
        ...he,
        ...He,
        ref: nl(Gt, (St) => {
          St && je(St.tagName === 'LABEL');
        }),
        onClick: An(He.onClick, () => {
          var St;
          Ne ||
            ((St = Se.current) == null || St.click(),
            requestAnimationFrame(() => {
              var Ir;
              (Ir = Se.current) == null || Ir.focus({ preventScroll: !0 });
            }));
        }),
        'data-disabled': et(r),
        'data-checked': et(_t),
        'data-invalid': et(o),
      }),
      [he, r, _t, o, Ne],
    ),
    oi = K.useCallback(
      (He = {}, Gt = null) => ({
        ...He,
        ref: nl(Se, Gt),
        type: 'checkbox',
        name: j,
        value: G,
        id: s,
        tabIndex: C,
        onChange: An(He.onChange, pr),
        onBlur: An(He.onBlur, de, () => ht(!1)),
        onFocus: An(He.onFocus, Fe, () => ht(!0)),
        onKeyDown: An(He.onKeyDown, $n),
        onKeyUp: An(He.onKeyUp, hr),
        required: i,
        checked: _t,
        disabled: Vt,
        readOnly: n,
        'aria-label': T,
        'aria-labelledby': q,
        'aria-invalid': H ? !!H : o,
        'aria-describedby': h,
        'aria-disabled': r,
        style: xD,
      }),
      [j, G, s, pr, de, Fe, $n, hr, i, _t, Vt, n, T, q, H, o, h, r, C],
    ),
    si = K.useCallback(
      (He = {}, Gt = null) => ({
        ...He,
        ref: Gt,
        onMouseDown: An(He.onMouseDown, LD),
        'data-disabled': et(r),
        'data-checked': et(_t),
        'data-invalid': et(o),
      }),
      [_t, r, o],
    );
  return {
    state: {
      isInvalid: o,
      isFocused: bt,
      isChecked: _t,
      isActive: qe,
      isHovered: Dt,
      isIndeterminate: $,
      isDisabled: r,
      isReadOnly: n,
      isRequired: i,
    },
    getRootProps: Cs,
    getCheckboxProps: Nn,
    getIndicatorProps: Zn,
    getInputProps: oi,
    getLabelProps: si,
    htmlProps: he,
  };
}
function LD(e) {
  e.preventDefault(), e.stopPropagation();
}
var MD = {
    display: 'inline-flex',
    alignItems: 'center',
    justifyContent: 'center',
    verticalAlign: 'top',
    userSelect: 'none',
    flexShrink: 0,
  },
  DD = {
    cursor: 'pointer',
    display: 'inline-flex',
    alignItems: 'center',
    verticalAlign: 'top',
    position: 'relative',
  },
  zD = Xc({
    from: { opacity: 0, strokeDashoffset: 16, transform: 'scale(0.95)' },
    to: { opacity: 1, strokeDashoffset: 0, transform: 'scale(1)' },
  }),
  $D = Xc({ from: { opacity: 0 }, to: { opacity: 1 } }),
  ND = Xc({
    from: { transform: 'scaleX(0.65)' },
    to: { transform: 'scaleX(1)' },
  }),
  YS = Qt(function (t, r) {
    const n = fD(),
      i = { ...n, ...t },
      o = nf('Checkbox', i),
      s = ii(t),
      {
        spacing: l = '0.5rem',
        className: c,
        children: h,
        iconColor: y,
        iconSize: m,
        icon: x = te.jsx(mD, {}),
        isChecked: I,
        isDisabled: $ = n == null ? void 0 : n.isDisabled,
        onChange: j,
        inputProps: G,
        ...C
      } = s;
    let T = I;
    n != null && n.value && s.value && (T = n.value.includes(s.value));
    let q = j;
    n != null && n.onChange && s.value && (q = XE(n.onChange, j));
    const {
        state: H,
        getInputProps: ie,
        getCheckboxProps: he,
        getLabelProps: le,
        getRootProps: de,
      } = OD({ ...C, isDisabled: $, isChecked: T, onChange: q }),
      Fe = dD(H.isChecked),
      Ae = K.useMemo(
        () => ({
          animation: Fe
            ? H.isIndeterminate
              ? `${$D} 20ms linear, ${ND} 200ms linear`
              : `${zD} 200ms linear`
            : void 0,
          fontSize: m,
          color: y,
          ...o.icon,
        }),
        [y, m, Fe, H.isIndeterminate, o.icon],
      ),
      ut = K.cloneElement(x, {
        __css: Ae,
        isIndeterminate: H.isIndeterminate,
        isChecked: H.isChecked,
      });
    return te.jsxs(dt.label, {
      __css: { ...DD, ...o.container },
      className: fn('chakra-checkbox', c),
      ...de(),
      children: [
        te.jsx('input', { className: 'chakra-checkbox__input', ...ie(G, r) }),
        te.jsx(dt.span, {
          __css: { ...MD, ...o.control },
          className: 'chakra-checkbox__control',
          ...he(),
          children: ut,
        }),
        h &&
          te.jsx(dt.span, {
            className: 'chakra-checkbox__label',
            ...le(),
            __css: { marginStart: l, ...o.label },
            children: h,
          }),
      ],
    });
  });
YS.displayName = 'Checkbox';
var pf = Qt(function (t, r) {
  const { htmlSize: n, ...i } = t,
    o = nf('Input', i),
    s = ii(i),
    l = SD(s),
    c = fn('chakra-input', t.className);
  return te.jsx(dt.input, {
    size: n,
    ...l,
    __css: o.field,
    ref: r,
    className: c,
  });
});
pf.displayName = 'Input';
pf.id = 'Input';
function jD(e, t) {
  return Array.isArray(e)
    ? e.map((r) => (r === null ? null : t(r)))
    : fr(e)
      ? Object.keys(e).reduce((r, n) => ((r[n] = t(e[n])), r), {})
      : e != null
        ? t(e)
        : null;
}
var JS = Qt(function (t, r) {
  const n = Es('Text', t),
    { className: i, align: o, decoration: s, casing: l, ...c } = ii(t),
    h = QF({
      textAlign: t.align,
      textDecoration: t.decoration,
      textTransform: t.casing,
    });
  return te.jsx(dt.p, {
    ref: r,
    className: fn('chakra-text', t.className),
    ...h,
    ...c,
    __css: n,
  });
});
JS.displayName = 'Text';
var ZS = (e) =>
  te.jsx(dt.div, {
    className: 'chakra-stack__item',
    ...e,
    __css: {
      display: 'inline-block',
      flex: '0 0 auto',
      minWidth: 0,
      ...e.__css,
    },
  });
ZS.displayName = 'StackItem';
function BD(e) {
  const { spacing: t, direction: r } = e,
    n = {
      column: { my: t, mx: 0, borderLeftWidth: 0, borderBottomWidth: '1px' },
      'column-reverse': {
        my: t,
        mx: 0,
        borderLeftWidth: 0,
        borderBottomWidth: '1px',
      },
      row: { mx: t, my: 0, borderLeftWidth: '1px', borderBottomWidth: 0 },
      'row-reverse': {
        mx: t,
        my: 0,
        borderLeftWidth: '1px',
        borderBottomWidth: 0,
      },
    };
  return { '&': jD(r, (i) => n[i]) };
}
var bg = Qt((e, t) => {
  const {
      isInline: r,
      direction: n,
      align: i,
      justify: o,
      spacing: s = '0.5rem',
      wrap: l,
      children: c,
      divider: h,
      className: y,
      shouldWrapChildren: m,
      ...x
    } = e,
    I = r ? 'row' : (n ?? 'column'),
    $ = K.useMemo(() => BD({ spacing: s, direction: I }), [s, I]),
    j = !!h,
    G = !m && !j,
    C = K.useMemo(() => {
      const q = lD(c);
      return G
        ? q
        : q.map((H, ie) => {
            const he = typeof H.key < 'u' ? H.key : ie,
              le = ie + 1 === q.length,
              Fe = m ? te.jsx(ZS, { children: H }, he) : H;
            if (!j) return Fe;
            const Ae = K.cloneElement(h, { __css: $ }),
              ut = le ? null : Ae;
            return te.jsxs(K.Fragment, { children: [Fe, ut] }, he);
          });
    }, [h, $, j, G, m, c]),
    T = fn('chakra-stack', y);
  return te.jsx(dt.div, {
    ref: t,
    display: 'flex',
    alignItems: i,
    justifyContent: o,
    flexDirection: I,
    flexWrap: l,
    gap: j ? void 0 : s,
    className: T,
    ...x,
    children: C,
  });
});
bg.displayName = 'Stack';
var wg = Qt((e, t) =>
  te.jsx(bg, { align: 'center', ...e, direction: 'column', ref: t }),
);
wg.displayName = 'VStack';
var Sg = Qt((e, t) =>
  te.jsx(bg, { align: 'center', ...e, direction: 'row', ref: t }),
);
Sg.displayName = 'HStack';
var ex = Qt(function (t, r) {
  const n = Es('Heading', t),
    { className: i, ...o } = ii(t);
  return te.jsx(dt.h2, {
    ref: r,
    className: fn('chakra-heading', t.className),
    ...o,
    __css: n,
  });
});
ex.displayName = 'Heading';
var Ea = dt('div');
Ea.displayName = 'Box';
var tx = Qt(function (t, r) {
  const { size: n, centerContent: i = !0, ...o } = t,
    s = i
      ? { display: 'flex', alignItems: 'center', justifyContent: 'center' }
      : {};
  return te.jsx(Ea, {
    ref: r,
    boxSize: n,
    __css: { ...s, flexShrink: 0, flexGrow: 0 },
    ...o,
  });
});
tx.displayName = 'Square';
var VD = Qt(function (t, r) {
  const { size: n, ...i } = t;
  return te.jsx(tx, { size: n, ref: r, borderRadius: '9999px', ...i });
});
VD.displayName = 'Circle';
var nx = (() => {
  var e = import.meta.url;
  return function (t) {
    var r = t || {},
      n = typeof r < 'u' ? r : {},
      i,
      o;
    n.ready = new Promise(function (u, a) {
      (i = u), (o = a);
    });
    const s =
      globalThis.sqlite3InitModuleState ||
      Object.assign(Object.create(null), { debugModule: () => {} });
    delete globalThis.sqlite3InitModuleState,
      s.debugModule('globalThis.location =', globalThis.location);
    const l = 'emscripten-bug-17951';
    (n[l] = function u(a, d) {
      a.env.foo = function () {};
      const f = n.locateFile(u.uri, typeof x > 'u' ? '' : x);
      s.debugModule('instantiateWasm() uri =', f);
      const p = () => fetch(f, { credentials: 'same-origin' });
      return (
        (WebAssembly.instantiateStreaming
          ? async () =>
              WebAssembly.instantiateStreaming(p(), a).then((O) =>
                d(O.instance, O.module),
              )
          : async () =>
              p()
                .then((O) => O.arrayBuffer())
                .then((O) => WebAssembly.instantiate(O, a))
                .then((O) => d(O.instance, O.module)))(),
        {}
      );
    }),
      (n[l].uri = 'sqlite3.wasm');
    var c = Object.assign({}, n),
      h = './this.program',
      y = typeof window == 'object',
      m = typeof importScripts == 'function';
    typeof process == 'object' &&
      typeof process.versions == 'object' &&
      process.versions.node;
    var x = '';
    function I(u) {
      return n.locateFile ? n.locateFile(u, x) : x + u;
    }
    var $, j, G;
    (y || m) &&
      (m
        ? (x = self.location.href)
        : typeof document < 'u' &&
          document.currentScript &&
          (x = document.currentScript.src),
      e && (x = e),
      x.indexOf('blob:') !== 0
        ? (x = x.substr(0, x.replace(/[?#].*/, '').lastIndexOf('/') + 1))
        : (x = ''),
      ($ = (u) => {
        var a = new XMLHttpRequest();
        return a.open('GET', u, !1), a.send(null), a.responseText;
      }),
      m &&
        (G = (u) => {
          var a = new XMLHttpRequest();
          return (
            a.open('GET', u, !1),
            (a.responseType = 'arraybuffer'),
            a.send(null),
            new Uint8Array(a.response)
          );
        }),
      (j = (u, a, d) => {
        var f = new XMLHttpRequest();
        f.open('GET', u, !0),
          (f.responseType = 'arraybuffer'),
          (f.onload = () => {
            if (f.status == 200 || (f.status == 0 && f.response)) {
              a(f.response);
              return;
            }
            d();
          }),
          (f.onerror = d),
          f.send(null);
      }));
    var C = n.print || console.log.bind(console),
      T = n.printErr || console.warn.bind(console);
    Object.assign(n, c),
      (c = null),
      n.arguments && n.arguments,
      n.thisProgram && (h = n.thisProgram),
      n.quit && n.quit;
    var q;
    n.wasmBinary && (q = n.wasmBinary),
      n.noExitRuntime,
      typeof WebAssembly != 'object' && qr('no native wasm support detected');
    var H,
      ie = !1;
    function he(u, a) {
      u || qr(a);
    }
    var le = typeof TextDecoder < 'u' ? new TextDecoder('utf8') : void 0;
    function de(u, a, d) {
      for (var f = a + d, p = a; u[p] && !(p >= f); ) ++p;
      if (p - a > 16 && u.buffer && le) return le.decode(u.subarray(a, p));
      for (var w = ''; a < p; ) {
        var O = u[a++];
        if (!(O & 128)) {
          w += String.fromCharCode(O);
          continue;
        }
        var M = u[a++] & 63;
        if ((O & 224) == 192) {
          w += String.fromCharCode(((O & 31) << 6) | M);
          continue;
        }
        var ne = u[a++] & 63;
        if (
          ((O & 240) == 224
            ? (O = ((O & 15) << 12) | (M << 6) | ne)
            : (O = ((O & 7) << 18) | (M << 12) | (ne << 6) | (u[a++] & 63)),
          O < 65536)
        )
          w += String.fromCharCode(O);
        else {
          var re = O - 65536;
          w += String.fromCharCode(55296 | (re >> 10), 56320 | (re & 1023));
        }
      }
      return w;
    }
    function Fe(u, a) {
      return u ? de(Dt, u, a) : '';
    }
    function Ae(u, a, d, f) {
      if (!(f > 0)) return 0;
      for (var p = d, w = d + f - 1, O = 0; O < u.length; ++O) {
        var M = u.charCodeAt(O);
        if (M >= 55296 && M <= 57343) {
          var ne = u.charCodeAt(++O);
          M = (65536 + ((M & 1023) << 10)) | (ne & 1023);
        }
        if (M <= 127) {
          if (d >= w) break;
          a[d++] = M;
        } else if (M <= 2047) {
          if (d + 1 >= w) break;
          (a[d++] = 192 | (M >> 6)), (a[d++] = 128 | (M & 63));
        } else if (M <= 65535) {
          if (d + 2 >= w) break;
          (a[d++] = 224 | (M >> 12)),
            (a[d++] = 128 | ((M >> 6) & 63)),
            (a[d++] = 128 | (M & 63));
        } else {
          if (d + 3 >= w) break;
          (a[d++] = 240 | (M >> 18)),
            (a[d++] = 128 | ((M >> 12) & 63)),
            (a[d++] = 128 | ((M >> 6) & 63)),
            (a[d++] = 128 | (M & 63));
        }
      }
      return (a[d] = 0), d - p;
    }
    function ut(u, a, d) {
      return Ae(u, Dt, a, d);
    }
    function bt(u) {
      for (var a = 0, d = 0; d < u.length; ++d) {
        var f = u.charCodeAt(d);
        f <= 127
          ? a++
          : f <= 2047
            ? (a += 2)
            : f >= 55296 && f <= 57343
              ? ((a += 4), ++d)
              : (a += 3);
      }
      return a;
    }
    var ht, Dt, wt, qe, Qe;
    function Se() {
      var u = H.buffer;
      (n.HEAP8 = ht = new Int8Array(u)),
        (n.HEAP16 = wt = new Int16Array(u)),
        (n.HEAP32 = qe = new Int32Array(u)),
        (n.HEAPU8 = Dt = new Uint8Array(u)),
        (n.HEAPU16 = new Uint16Array(u)),
        (n.HEAPU32 = Qe = new Uint32Array(u)),
        (n.HEAPF32 = new Float32Array(u)),
        (n.HEAPF64 = new Float64Array(u)),
        (n.HEAP64 = new BigInt64Array(u)),
        (n.HEAPU64 = new BigUint64Array(u));
    }
    var Ne = n.INITIAL_MEMORY || 16777216;
    n.wasmMemory
      ? (H = n.wasmMemory)
      : (H = new WebAssembly.Memory({
          initial: Ne / 65536,
          maximum: 2147483648 / 65536,
        })),
      Se(),
      (Ne = H.buffer.byteLength);
    var je = [],
      mt = [],
      gt = [];
    function Xe() {
      if (n.preRun)
        for (
          typeof n.preRun == 'function' && (n.preRun = [n.preRun]);
          n.preRun.length;
        )
          Vt(n.preRun.shift());
      jn(je);
    }
    function _t() {
      !n.noFSInit && !_.init.initialized && _.init(),
        (_.ignorePermissions = !1),
        jn(mt);
    }
    function pr() {
      if (n.postRun)
        for (
          typeof n.postRun == 'function' && (n.postRun = [n.postRun]);
          n.postRun.length;
        )
          hr(n.postRun.shift());
      jn(gt);
    }
    function Vt(u) {
      je.unshift(u);
    }
    function $n(u) {
      mt.unshift(u);
    }
    function hr(u) {
      gt.unshift(u);
    }
    var Nn = 0,
      Zn = null;
    function Cs(u) {
      return u;
    }
    function oi(u) {
      Nn++, n.monitorRunDependencies && n.monitorRunDependencies(Nn);
    }
    function si(u) {
      if (
        (Nn--,
        n.monitorRunDependencies && n.monitorRunDependencies(Nn),
        Nn == 0 && Zn)
      ) {
        var a = Zn;
        (Zn = null), a();
      }
    }
    function qr(u) {
      n.onAbort && n.onAbort(u),
        (u = 'Aborted(' + u + ')'),
        T(u),
        (ie = !0),
        (u += '. Build with -sASSERTIONS for more info.');
      var a = new WebAssembly.RuntimeError(u);
      throw (o(a), a);
    }
    var He = 'data:application/octet-stream;base64,';
    function Gt(u) {
      return u.startsWith(He);
    }
    var St;
    n.locateFile
      ? ((St = 'sqlite3.wasm'), Gt(St) || (St = I(St)))
      : (St = new URL('/assets/sqlite3-BqX9F35q.wasm', import.meta.url).href);
    function Ir(u) {
      try {
        if (u == St && q) return new Uint8Array(q);
        if (G) return G(u);
        throw 'both async and sync fetching of the wasm failed';
      } catch (a) {
        qr(a);
      }
    }
    function hf() {
      return !q && (y || m) && typeof fetch == 'function'
        ? fetch(St, { credentials: 'same-origin' })
            .then(function (u) {
              if (!u.ok)
                throw "failed to load wasm binary file at '" + St + "'";
              return u.arrayBuffer();
            })
            .catch(function () {
              return Ir(St);
            })
        : Promise.resolve().then(function () {
            return Ir(St);
          });
    }
    function _o() {
      var u = { env: El, wasi_snapshot_preview1: El };
      function a(O, M) {
        var ne = O.exports;
        (n.asm = ne),
          n.asm.__indirect_function_table,
          $n(n.asm.__wasm_call_ctors),
          si();
      }
      oi();
      function d(O) {
        a(O.instance);
      }
      function f(O) {
        return hf()
          .then(function (M) {
            return WebAssembly.instantiate(M, u);
          })
          .then(function (M) {
            return M;
          })
          .then(O, function (M) {
            T('failed to asynchronously prepare wasm: ' + M), qr(M);
          });
      }
      function p() {
        return !q &&
          typeof WebAssembly.instantiateStreaming == 'function' &&
          !Gt(St) &&
          typeof fetch == 'function'
          ? fetch(St, { credentials: 'same-origin' }).then(function (O) {
              var M = WebAssembly.instantiateStreaming(O, u);
              return M.then(d, function (ne) {
                return (
                  T('wasm streaming compile failed: ' + ne),
                  T('falling back to ArrayBuffer instantiation'),
                  f(d)
                );
              });
            })
          : f(d);
      }
      if (n.instantiateWasm)
        try {
          var w = n.instantiateWasm(u, a);
          return w;
        } catch (O) {
          T('Module.instantiateWasm callback failed with error: ' + O), o(O);
        }
      return p().catch(o), {};
    }
    var Ue, At;
    function jn(u) {
      for (; u.length > 0; ) u.shift()(n);
    }
    var Ye = {
      isAbs: (u) => u.charAt(0) === '/',
      splitPath: (u) => {
        var a = /^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/;
        return a.exec(u).slice(1);
      },
      normalizeArray: (u, a) => {
        for (var d = 0, f = u.length - 1; f >= 0; f--) {
          var p = u[f];
          p === '.'
            ? u.splice(f, 1)
            : p === '..'
              ? (u.splice(f, 1), d++)
              : d && (u.splice(f, 1), d--);
        }
        if (a) for (; d; d--) u.unshift('..');
        return u;
      },
      normalize: (u) => {
        var a = Ye.isAbs(u),
          d = u.substr(-1) === '/';
        return (
          (u = Ye.normalizeArray(
            u.split('/').filter((f) => !!f),
            !a,
          ).join('/')),
          !u && !a && (u = '.'),
          u && d && (u += '/'),
          (a ? '/' : '') + u
        );
      },
      dirname: (u) => {
        var a = Ye.splitPath(u),
          d = a[0],
          f = a[1];
        return !d && !f ? '.' : (f && (f = f.substr(0, f.length - 1)), d + f);
      },
      basename: (u) => {
        if (u === '/') return '/';
        (u = Ye.normalize(u)), (u = u.replace(/\/$/, ''));
        var a = u.lastIndexOf('/');
        return a === -1 ? u : u.substr(a + 1);
      },
      join: function () {
        var u = Array.prototype.slice.call(arguments);
        return Ye.normalize(u.join('/'));
      },
      join2: (u, a) => Ye.normalize(u + '/' + a),
    };
    function _l() {
      if (
        typeof crypto == 'object' &&
        typeof crypto.getRandomValues == 'function'
      ) {
        var u = new Uint8Array(1);
        return () => (crypto.getRandomValues(u), u[0]);
      } else return () => qr('randomDevice');
    }
    var er = {
      resolve: function () {
        for (var u = '', a = !1, d = arguments.length - 1; d >= -1 && !a; d--) {
          var f = d >= 0 ? arguments[d] : _.cwd();
          if (typeof f != 'string')
            throw new TypeError('Arguments to path.resolve must be strings');
          if (!f) return '';
          (u = f + '/' + u), (a = Ye.isAbs(f));
        }
        return (
          (u = Ye.normalizeArray(
            u.split('/').filter((p) => !!p),
            !a,
          ).join('/')),
          (a ? '/' : '') + u || '.'
        );
      },
      relative: (u, a) => {
        (u = er.resolve(u).substr(1)), (a = er.resolve(a).substr(1));
        function d(re) {
          for (var pe = 0; pe < re.length && re[pe] === ''; pe++);
          for (var ye = re.length - 1; ye >= 0 && re[ye] === ''; ye--);
          return pe > ye ? [] : re.slice(pe, ye - pe + 1);
        }
        for (
          var f = d(u.split('/')),
            p = d(a.split('/')),
            w = Math.min(f.length, p.length),
            O = w,
            M = 0;
          M < w;
          M++
        )
          if (f[M] !== p[M]) {
            O = M;
            break;
          }
        for (var ne = [], M = O; M < f.length; M++) ne.push('..');
        return (ne = ne.concat(p.slice(O))), ne.join('/');
      },
    };
    function As(u, a, d) {
      var f = bt(u) + 1,
        p = new Array(f),
        w = Ae(u, p, 0, p.length);
      return (p.length = w), p;
    }
    var Bn = {
      ttys: [],
      init: function () {},
      shutdown: function () {},
      register: function (u, a) {
        (Bn.ttys[u] = { input: [], output: [], ops: a }),
          _.registerDevice(u, Bn.stream_ops);
      },
      stream_ops: {
        open: function (u) {
          var a = Bn.ttys[u.node.rdev];
          if (!a) throw new _.ErrnoError(43);
          (u.tty = a), (u.seekable = !1);
        },
        close: function (u) {
          u.tty.ops.fsync(u.tty);
        },
        fsync: function (u) {
          u.tty.ops.fsync(u.tty);
        },
        read: function (u, a, d, f, p) {
          if (!u.tty || !u.tty.ops.get_char) throw new _.ErrnoError(60);
          for (var w = 0, O = 0; O < f; O++) {
            var M;
            try {
              M = u.tty.ops.get_char(u.tty);
            } catch {
              throw new _.ErrnoError(29);
            }
            if (M === void 0 && w === 0) throw new _.ErrnoError(6);
            if (M == null) break;
            w++, (a[d + O] = M);
          }
          return w && (u.node.timestamp = Date.now()), w;
        },
        write: function (u, a, d, f, p) {
          if (!u.tty || !u.tty.ops.put_char) throw new _.ErrnoError(60);
          try {
            for (var w = 0; w < f; w++) u.tty.ops.put_char(u.tty, a[d + w]);
          } catch {
            throw new _.ErrnoError(29);
          }
          return f && (u.node.timestamp = Date.now()), w;
        },
      },
      default_tty_ops: {
        get_char: function (u) {
          if (!u.input.length) {
            var a = null;
            if (
              (typeof window < 'u' && typeof window.prompt == 'function'
                ? ((a = window.prompt('Input: ')),
                  a !== null &&
                    (a += `
`))
                : typeof readline == 'function' &&
                  ((a = readline()),
                  a !== null &&
                    (a += `
`)),
              !a)
            )
              return null;
            u.input = As(a);
          }
          return u.input.shift();
        },
        put_char: function (u, a) {
          a === null || a === 10
            ? (C(de(u.output, 0)), (u.output = []))
            : a != 0 && u.output.push(a);
        },
        fsync: function (u) {
          u.output &&
            u.output.length > 0 &&
            (C(de(u.output, 0)), (u.output = []));
        },
      },
      default_tty1_ops: {
        put_char: function (u, a) {
          a === null || a === 10
            ? (T(de(u.output, 0)), (u.output = []))
            : a != 0 && u.output.push(a);
        },
        fsync: function (u) {
          u.output &&
            u.output.length > 0 &&
            (T(de(u.output, 0)), (u.output = []));
        },
      },
    };
    function yl(u, a) {
      return Dt.fill(0, u, u + a), u;
    }
    function vl(u, a) {
      return Math.ceil(u / a) * a;
    }
    function Ps(u) {
      u = vl(u, 65536);
      var a = Cl(65536, u);
      return a ? yl(a, u) : 0;
    }
    var Be = {
      ops_table: null,
      mount: function (u) {
        return Be.createNode(null, '/', 16895, 0);
      },
      createNode: function (u, a, d, f) {
        if (_.isBlkdev(d) || _.isFIFO(d)) throw new _.ErrnoError(63);
        Be.ops_table ||
          (Be.ops_table = {
            dir: {
              node: {
                getattr: Be.node_ops.getattr,
                setattr: Be.node_ops.setattr,
                lookup: Be.node_ops.lookup,
                mknod: Be.node_ops.mknod,
                rename: Be.node_ops.rename,
                unlink: Be.node_ops.unlink,
                rmdir: Be.node_ops.rmdir,
                readdir: Be.node_ops.readdir,
                symlink: Be.node_ops.symlink,
              },
              stream: { llseek: Be.stream_ops.llseek },
            },
            file: {
              node: {
                getattr: Be.node_ops.getattr,
                setattr: Be.node_ops.setattr,
              },
              stream: {
                llseek: Be.stream_ops.llseek,
                read: Be.stream_ops.read,
                write: Be.stream_ops.write,
                allocate: Be.stream_ops.allocate,
                mmap: Be.stream_ops.mmap,
                msync: Be.stream_ops.msync,
              },
            },
            link: {
              node: {
                getattr: Be.node_ops.getattr,
                setattr: Be.node_ops.setattr,
                readlink: Be.node_ops.readlink,
              },
              stream: {},
            },
            chrdev: {
              node: {
                getattr: Be.node_ops.getattr,
                setattr: Be.node_ops.setattr,
              },
              stream: _.chrdev_stream_ops,
            },
          });
        var p = _.createNode(u, a, d, f);
        return (
          _.isDir(p.mode)
            ? ((p.node_ops = Be.ops_table.dir.node),
              (p.stream_ops = Be.ops_table.dir.stream),
              (p.contents = {}))
            : _.isFile(p.mode)
              ? ((p.node_ops = Be.ops_table.file.node),
                (p.stream_ops = Be.ops_table.file.stream),
                (p.usedBytes = 0),
                (p.contents = null))
              : _.isLink(p.mode)
                ? ((p.node_ops = Be.ops_table.link.node),
                  (p.stream_ops = Be.ops_table.link.stream))
                : _.isChrdev(p.mode) &&
                  ((p.node_ops = Be.ops_table.chrdev.node),
                  (p.stream_ops = Be.ops_table.chrdev.stream)),
          (p.timestamp = Date.now()),
          u && ((u.contents[a] = p), (u.timestamp = p.timestamp)),
          p
        );
      },
      getFileDataAsTypedArray: function (u) {
        return u.contents
          ? u.contents.subarray
            ? u.contents.subarray(0, u.usedBytes)
            : new Uint8Array(u.contents)
          : new Uint8Array(0);
      },
      expandFileStorage: function (u, a) {
        var d = u.contents ? u.contents.length : 0;
        if (!(d >= a)) {
          var f = 1024 * 1024;
          (a = Math.max(a, (d * (d < f ? 2 : 1.125)) >>> 0)),
            d != 0 && (a = Math.max(a, 256));
          var p = u.contents;
          (u.contents = new Uint8Array(a)),
            u.usedBytes > 0 && u.contents.set(p.subarray(0, u.usedBytes), 0);
        }
      },
      resizeFileStorage: function (u, a) {
        if (u.usedBytes != a)
          if (a == 0) (u.contents = null), (u.usedBytes = 0);
          else {
            var d = u.contents;
            (u.contents = new Uint8Array(a)),
              d && u.contents.set(d.subarray(0, Math.min(a, u.usedBytes))),
              (u.usedBytes = a);
          }
      },
      node_ops: {
        getattr: function (u) {
          var a = {};
          return (
            (a.dev = _.isChrdev(u.mode) ? u.id : 1),
            (a.ino = u.id),
            (a.mode = u.mode),
            (a.nlink = 1),
            (a.uid = 0),
            (a.gid = 0),
            (a.rdev = u.rdev),
            _.isDir(u.mode)
              ? (a.size = 4096)
              : _.isFile(u.mode)
                ? (a.size = u.usedBytes)
                : _.isLink(u.mode)
                  ? (a.size = u.link.length)
                  : (a.size = 0),
            (a.atime = new Date(u.timestamp)),
            (a.mtime = new Date(u.timestamp)),
            (a.ctime = new Date(u.timestamp)),
            (a.blksize = 4096),
            (a.blocks = Math.ceil(a.size / a.blksize)),
            a
          );
        },
        setattr: function (u, a) {
          a.mode !== void 0 && (u.mode = a.mode),
            a.timestamp !== void 0 && (u.timestamp = a.timestamp),
            a.size !== void 0 && Be.resizeFileStorage(u, a.size);
        },
        lookup: function (u, a) {
          throw _.genericErrors[44];
        },
        mknod: function (u, a, d, f) {
          return Be.createNode(u, a, d, f);
        },
        rename: function (u, a, d) {
          if (_.isDir(u.mode)) {
            var f;
            try {
              f = _.lookupNode(a, d);
            } catch {}
            if (f) for (var p in f.contents) throw new _.ErrnoError(55);
          }
          delete u.parent.contents[u.name],
            (u.parent.timestamp = Date.now()),
            (u.name = d),
            (a.contents[d] = u),
            (a.timestamp = u.parent.timestamp),
            (u.parent = a);
        },
        unlink: function (u, a) {
          delete u.contents[a], (u.timestamp = Date.now());
        },
        rmdir: function (u, a) {
          var d = _.lookupNode(u, a);
          for (var f in d.contents) throw new _.ErrnoError(55);
          delete u.contents[a], (u.timestamp = Date.now());
        },
        readdir: function (u) {
          var a = ['.', '..'];
          for (var d in u.contents) u.contents.hasOwnProperty(d) && a.push(d);
          return a;
        },
        symlink: function (u, a, d) {
          var f = Be.createNode(u, a, 41471, 0);
          return (f.link = d), f;
        },
        readlink: function (u) {
          if (!_.isLink(u.mode)) throw new _.ErrnoError(28);
          return u.link;
        },
      },
      stream_ops: {
        read: function (u, a, d, f, p) {
          var w = u.node.contents;
          if (p >= u.node.usedBytes) return 0;
          var O = Math.min(u.node.usedBytes - p, f);
          if (O > 8 && w.subarray) a.set(w.subarray(p, p + O), d);
          else for (var M = 0; M < O; M++) a[d + M] = w[p + M];
          return O;
        },
        write: function (u, a, d, f, p, w) {
          if ((a.buffer === ht.buffer && (w = !1), !f)) return 0;
          var O = u.node;
          if (
            ((O.timestamp = Date.now()),
            a.subarray && (!O.contents || O.contents.subarray))
          ) {
            if (w)
              return (O.contents = a.subarray(d, d + f)), (O.usedBytes = f), f;
            if (O.usedBytes === 0 && p === 0)
              return (O.contents = a.slice(d, d + f)), (O.usedBytes = f), f;
            if (p + f <= O.usedBytes)
              return O.contents.set(a.subarray(d, d + f), p), f;
          }
          if (
            (Be.expandFileStorage(O, p + f), O.contents.subarray && a.subarray)
          )
            O.contents.set(a.subarray(d, d + f), p);
          else for (var M = 0; M < f; M++) O.contents[p + M] = a[d + M];
          return (O.usedBytes = Math.max(O.usedBytes, p + f)), f;
        },
        llseek: function (u, a, d) {
          var f = a;
          if (
            (d === 1
              ? (f += u.position)
              : d === 2 && _.isFile(u.node.mode) && (f += u.node.usedBytes),
            f < 0)
          )
            throw new _.ErrnoError(28);
          return f;
        },
        allocate: function (u, a, d) {
          Be.expandFileStorage(u.node, a + d),
            (u.node.usedBytes = Math.max(u.node.usedBytes, a + d));
        },
        mmap: function (u, a, d, f, p) {
          if (!_.isFile(u.node.mode)) throw new _.ErrnoError(43);
          var w,
            O,
            M = u.node.contents;
          if (!(p & 2) && M.buffer === ht.buffer) (O = !1), (w = M.byteOffset);
          else {
            if (
              ((d > 0 || d + a < M.length) &&
                (M.subarray
                  ? (M = M.subarray(d, d + a))
                  : (M = Array.prototype.slice.call(M, d, d + a))),
              (O = !0),
              (w = Ps(a)),
              !w)
            )
              throw new _.ErrnoError(48);
            ht.set(M, w);
          }
          return { ptr: w, allocated: O };
        },
        msync: function (u, a, d, f, p) {
          return Be.stream_ops.write(u, a, 0, f, d, !1), 0;
        },
      },
    };
    function mf(u, a, d, f) {
      var p = 'al ' + u;
      j(
        u,
        (w) => {
          he(w, 'Loading data file "' + u + '" failed (no arrayBuffer).'),
            a(new Uint8Array(w)),
            p && si();
        },
        (w) => {
          if (d) d();
          else throw 'Loading data file "' + u + '" failed.';
        },
      ),
        p && oi();
    }
    var _ = {
        root: null,
        mounts: [],
        devices: {},
        streams: [],
        nextInode: 1,
        nameTable: null,
        currentPath: '/',
        initialized: !1,
        ignorePermissions: !0,
        ErrnoError: null,
        genericErrors: {},
        filesystems: null,
        syncFSRequests: 0,
        lookupPath: (u, a = {}) => {
          if (((u = er.resolve(u)), !u)) return { path: '', node: null };
          var d = { follow_mount: !0, recurse_count: 0 };
          if (((a = Object.assign(d, a)), a.recurse_count > 8))
            throw new _.ErrnoError(32);
          for (
            var f = u.split('/').filter((ye) => !!ye),
              p = _.root,
              w = '/',
              O = 0;
            O < f.length;
            O++
          ) {
            var M = O === f.length - 1;
            if (M && a.parent) break;
            if (
              ((p = _.lookupNode(p, f[O])),
              (w = Ye.join2(w, f[O])),
              _.isMountpoint(p) &&
                (!M || (M && a.follow_mount)) &&
                (p = p.mounted.root),
              !M || a.follow)
            )
              for (var ne = 0; _.isLink(p.mode); ) {
                var re = _.readlink(w);
                w = er.resolve(Ye.dirname(w), re);
                var pe = _.lookupPath(w, {
                  recurse_count: a.recurse_count + 1,
                });
                if (((p = pe.node), ne++ > 40)) throw new _.ErrnoError(32);
              }
          }
          return { path: w, node: p };
        },
        getPath: (u) => {
          for (var a; ; ) {
            if (_.isRoot(u)) {
              var d = u.mount.mountpoint;
              return a ? (d[d.length - 1] !== '/' ? d + '/' + a : d + a) : d;
            }
            (a = a ? u.name + '/' + a : u.name), (u = u.parent);
          }
        },
        hashName: (u, a) => {
          for (var d = 0, f = 0; f < a.length; f++)
            d = ((d << 5) - d + a.charCodeAt(f)) | 0;
          return ((u + d) >>> 0) % _.nameTable.length;
        },
        hashAddNode: (u) => {
          var a = _.hashName(u.parent.id, u.name);
          (u.name_next = _.nameTable[a]), (_.nameTable[a] = u);
        },
        hashRemoveNode: (u) => {
          var a = _.hashName(u.parent.id, u.name);
          if (_.nameTable[a] === u) _.nameTable[a] = u.name_next;
          else
            for (var d = _.nameTable[a]; d; ) {
              if (d.name_next === u) {
                d.name_next = u.name_next;
                break;
              }
              d = d.name_next;
            }
        },
        lookupNode: (u, a) => {
          var d = _.mayLookup(u);
          if (d) throw new _.ErrnoError(d, u);
          for (
            var f = _.hashName(u.id, a), p = _.nameTable[f];
            p;
            p = p.name_next
          ) {
            var w = p.name;
            if (p.parent.id === u.id && w === a) return p;
          }
          return _.lookup(u, a);
        },
        createNode: (u, a, d, f) => {
          var p = new _.FSNode(u, a, d, f);
          return _.hashAddNode(p), p;
        },
        destroyNode: (u) => {
          _.hashRemoveNode(u);
        },
        isRoot: (u) => u === u.parent,
        isMountpoint: (u) => !!u.mounted,
        isFile: (u) => (u & 61440) === 32768,
        isDir: (u) => (u & 61440) === 16384,
        isLink: (u) => (u & 61440) === 40960,
        isChrdev: (u) => (u & 61440) === 8192,
        isBlkdev: (u) => (u & 61440) === 24576,
        isFIFO: (u) => (u & 61440) === 4096,
        isSocket: (u) => (u & 49152) === 49152,
        flagModes: { r: 0, 'r+': 2, w: 577, 'w+': 578, a: 1089, 'a+': 1090 },
        modeStringToFlags: (u) => {
          var a = _.flagModes[u];
          if (typeof a > 'u') throw new Error('Unknown file open mode: ' + u);
          return a;
        },
        flagsToPermissionString: (u) => {
          var a = ['r', 'w', 'rw'][u & 3];
          return u & 512 && (a += 'w'), a;
        },
        nodePermissions: (u, a) =>
          _.ignorePermissions
            ? 0
            : (a.includes('r') && !(u.mode & 292)) ||
                (a.includes('w') && !(u.mode & 146)) ||
                (a.includes('x') && !(u.mode & 73))
              ? 2
              : 0,
        mayLookup: (u) => {
          var a = _.nodePermissions(u, 'x');
          return a || (u.node_ops.lookup ? 0 : 2);
        },
        mayCreate: (u, a) => {
          try {
            var d = _.lookupNode(u, a);
            return 20;
          } catch {}
          return _.nodePermissions(u, 'wx');
        },
        mayDelete: (u, a, d) => {
          var f;
          try {
            f = _.lookupNode(u, a);
          } catch (w) {
            return w.errno;
          }
          var p = _.nodePermissions(u, 'wx');
          if (p) return p;
          if (d) {
            if (!_.isDir(f.mode)) return 54;
            if (_.isRoot(f) || _.getPath(f) === _.cwd()) return 10;
          } else if (_.isDir(f.mode)) return 31;
          return 0;
        },
        mayOpen: (u, a) =>
          u
            ? _.isLink(u.mode)
              ? 32
              : _.isDir(u.mode) &&
                  (_.flagsToPermissionString(a) !== 'r' || a & 512)
                ? 31
                : _.nodePermissions(u, _.flagsToPermissionString(a))
            : 44,
        MAX_OPEN_FDS: 4096,
        nextfd: (u = 0, a = _.MAX_OPEN_FDS) => {
          for (var d = u; d <= a; d++) if (!_.streams[d]) return d;
          throw new _.ErrnoError(33);
        },
        getStream: (u) => _.streams[u],
        createStream: (u, a, d) => {
          _.FSStream ||
            ((_.FSStream = function () {
              this.shared = {};
            }),
            (_.FSStream.prototype = {}),
            Object.defineProperties(_.FSStream.prototype, {
              object: {
                get: function () {
                  return this.node;
                },
                set: function (p) {
                  this.node = p;
                },
              },
              isRead: {
                get: function () {
                  return (this.flags & 2097155) !== 1;
                },
              },
              isWrite: {
                get: function () {
                  return (this.flags & 2097155) !== 0;
                },
              },
              isAppend: {
                get: function () {
                  return this.flags & 1024;
                },
              },
              flags: {
                get: function () {
                  return this.shared.flags;
                },
                set: function (p) {
                  this.shared.flags = p;
                },
              },
              position: {
                get: function () {
                  return this.shared.position;
                },
                set: function (p) {
                  this.shared.position = p;
                },
              },
            })),
            (u = Object.assign(new _.FSStream(), u));
          var f = _.nextfd(a, d);
          return (u.fd = f), (_.streams[f] = u), u;
        },
        closeStream: (u) => {
          _.streams[u] = null;
        },
        chrdev_stream_ops: {
          open: (u) => {
            var a = _.getDevice(u.node.rdev);
            (u.stream_ops = a.stream_ops),
              u.stream_ops.open && u.stream_ops.open(u);
          },
          llseek: () => {
            throw new _.ErrnoError(70);
          },
        },
        major: (u) => u >> 8,
        minor: (u) => u & 255,
        makedev: (u, a) => (u << 8) | a,
        registerDevice: (u, a) => {
          _.devices[u] = { stream_ops: a };
        },
        getDevice: (u) => _.devices[u],
        getMounts: (u) => {
          for (var a = [], d = [u]; d.length; ) {
            var f = d.pop();
            a.push(f), d.push.apply(d, f.mounts);
          }
          return a;
        },
        syncfs: (u, a) => {
          typeof u == 'function' && ((a = u), (u = !1)),
            _.syncFSRequests++,
            _.syncFSRequests > 1 &&
              T(
                'warning: ' +
                  _.syncFSRequests +
                  ' FS.syncfs operations in flight at once, probably just doing extra work',
              );
          var d = _.getMounts(_.root.mount),
            f = 0;
          function p(O) {
            return _.syncFSRequests--, a(O);
          }
          function w(O) {
            if (O) return w.errored ? void 0 : ((w.errored = !0), p(O));
            ++f >= d.length && p(null);
          }
          d.forEach((O) => {
            if (!O.type.syncfs) return w(null);
            O.type.syncfs(O, u, w);
          });
        },
        mount: (u, a, d) => {
          var f = d === '/',
            p = !d,
            w;
          if (f && _.root) throw new _.ErrnoError(10);
          if (!f && !p) {
            var O = _.lookupPath(d, { follow_mount: !1 });
            if (((d = O.path), (w = O.node), _.isMountpoint(w)))
              throw new _.ErrnoError(10);
            if (!_.isDir(w.mode)) throw new _.ErrnoError(54);
          }
          var M = { type: u, opts: a, mountpoint: d, mounts: [] },
            ne = u.mount(M);
          return (
            (ne.mount = M),
            (M.root = ne),
            f
              ? (_.root = ne)
              : w && ((w.mounted = M), w.mount && w.mount.mounts.push(M)),
            ne
          );
        },
        unmount: (u) => {
          var a = _.lookupPath(u, { follow_mount: !1 });
          if (!_.isMountpoint(a.node)) throw new _.ErrnoError(28);
          var d = a.node,
            f = d.mounted,
            p = _.getMounts(f);
          Object.keys(_.nameTable).forEach((O) => {
            for (var M = _.nameTable[O]; M; ) {
              var ne = M.name_next;
              p.includes(M.mount) && _.destroyNode(M), (M = ne);
            }
          }),
            (d.mounted = null);
          var w = d.mount.mounts.indexOf(f);
          d.mount.mounts.splice(w, 1);
        },
        lookup: (u, a) => u.node_ops.lookup(u, a),
        mknod: (u, a, d) => {
          var f = _.lookupPath(u, { parent: !0 }),
            p = f.node,
            w = Ye.basename(u);
          if (!w || w === '.' || w === '..') throw new _.ErrnoError(28);
          var O = _.mayCreate(p, w);
          if (O) throw new _.ErrnoError(O);
          if (!p.node_ops.mknod) throw new _.ErrnoError(63);
          return p.node_ops.mknod(p, w, a, d);
        },
        create: (u, a) => (
          (a = a !== void 0 ? a : 438),
          (a &= 4095),
          (a |= 32768),
          _.mknod(u, a, 0)
        ),
        mkdir: (u, a) => (
          (a = a !== void 0 ? a : 511),
          (a &= 1023),
          (a |= 16384),
          _.mknod(u, a, 0)
        ),
        mkdirTree: (u, a) => {
          for (var d = u.split('/'), f = '', p = 0; p < d.length; ++p)
            if (d[p]) {
              f += '/' + d[p];
              try {
                _.mkdir(f, a);
              } catch (w) {
                if (w.errno != 20) throw w;
              }
            }
        },
        mkdev: (u, a, d) => (
          typeof d > 'u' && ((d = a), (a = 438)), (a |= 8192), _.mknod(u, a, d)
        ),
        symlink: (u, a) => {
          if (!er.resolve(u)) throw new _.ErrnoError(44);
          var d = _.lookupPath(a, { parent: !0 }),
            f = d.node;
          if (!f) throw new _.ErrnoError(44);
          var p = Ye.basename(a),
            w = _.mayCreate(f, p);
          if (w) throw new _.ErrnoError(w);
          if (!f.node_ops.symlink) throw new _.ErrnoError(63);
          return f.node_ops.symlink(f, p, u);
        },
        rename: (u, a) => {
          var d = Ye.dirname(u),
            f = Ye.dirname(a),
            p = Ye.basename(u),
            w = Ye.basename(a),
            O,
            M,
            ne;
          if (
            ((O = _.lookupPath(u, { parent: !0 })),
            (M = O.node),
            (O = _.lookupPath(a, { parent: !0 })),
            (ne = O.node),
            !M || !ne)
          )
            throw new _.ErrnoError(44);
          if (M.mount !== ne.mount) throw new _.ErrnoError(75);
          var re = _.lookupNode(M, p),
            pe = er.relative(u, f);
          if (pe.charAt(0) !== '.') throw new _.ErrnoError(28);
          if (((pe = er.relative(a, d)), pe.charAt(0) !== '.'))
            throw new _.ErrnoError(55);
          var ye;
          try {
            ye = _.lookupNode(ne, w);
          } catch {}
          if (re !== ye) {
            var X = _.isDir(re.mode),
              Q = _.mayDelete(M, p, X);
            if (Q) throw new _.ErrnoError(Q);
            if (((Q = ye ? _.mayDelete(ne, w, X) : _.mayCreate(ne, w)), Q))
              throw new _.ErrnoError(Q);
            if (!M.node_ops.rename) throw new _.ErrnoError(63);
            if (_.isMountpoint(re) || (ye && _.isMountpoint(ye)))
              throw new _.ErrnoError(10);
            if (ne !== M && ((Q = _.nodePermissions(M, 'w')), Q))
              throw new _.ErrnoError(Q);
            _.hashRemoveNode(re);
            try {
              M.node_ops.rename(re, ne, w);
            } catch (ue) {
              throw ue;
            } finally {
              _.hashAddNode(re);
            }
          }
        },
        rmdir: (u) => {
          var a = _.lookupPath(u, { parent: !0 }),
            d = a.node,
            f = Ye.basename(u),
            p = _.lookupNode(d, f),
            w = _.mayDelete(d, f, !0);
          if (w) throw new _.ErrnoError(w);
          if (!d.node_ops.rmdir) throw new _.ErrnoError(63);
          if (_.isMountpoint(p)) throw new _.ErrnoError(10);
          d.node_ops.rmdir(d, f), _.destroyNode(p);
        },
        readdir: (u) => {
          var a = _.lookupPath(u, { follow: !0 }),
            d = a.node;
          if (!d.node_ops.readdir) throw new _.ErrnoError(54);
          return d.node_ops.readdir(d);
        },
        unlink: (u) => {
          var a = _.lookupPath(u, { parent: !0 }),
            d = a.node;
          if (!d) throw new _.ErrnoError(44);
          var f = Ye.basename(u),
            p = _.lookupNode(d, f),
            w = _.mayDelete(d, f, !1);
          if (w) throw new _.ErrnoError(w);
          if (!d.node_ops.unlink) throw new _.ErrnoError(63);
          if (_.isMountpoint(p)) throw new _.ErrnoError(10);
          d.node_ops.unlink(d, f), _.destroyNode(p);
        },
        readlink: (u) => {
          var a = _.lookupPath(u),
            d = a.node;
          if (!d) throw new _.ErrnoError(44);
          if (!d.node_ops.readlink) throw new _.ErrnoError(28);
          return er.resolve(_.getPath(d.parent), d.node_ops.readlink(d));
        },
        stat: (u, a) => {
          var d = _.lookupPath(u, { follow: !a }),
            f = d.node;
          if (!f) throw new _.ErrnoError(44);
          if (!f.node_ops.getattr) throw new _.ErrnoError(63);
          return f.node_ops.getattr(f);
        },
        lstat: (u) => _.stat(u, !0),
        chmod: (u, a, d) => {
          var f;
          if (typeof u == 'string') {
            var p = _.lookupPath(u, { follow: !d });
            f = p.node;
          } else f = u;
          if (!f.node_ops.setattr) throw new _.ErrnoError(63);
          f.node_ops.setattr(f, {
            mode: (a & 4095) | (f.mode & -4096),
            timestamp: Date.now(),
          });
        },
        lchmod: (u, a) => {
          _.chmod(u, a, !0);
        },
        fchmod: (u, a) => {
          var d = _.getStream(u);
          if (!d) throw new _.ErrnoError(8);
          _.chmod(d.node, a);
        },
        chown: (u, a, d, f) => {
          var p;
          if (typeof u == 'string') {
            var w = _.lookupPath(u, { follow: !f });
            p = w.node;
          } else p = u;
          if (!p.node_ops.setattr) throw new _.ErrnoError(63);
          p.node_ops.setattr(p, { timestamp: Date.now() });
        },
        lchown: (u, a, d) => {
          _.chown(u, a, d, !0);
        },
        fchown: (u, a, d) => {
          var f = _.getStream(u);
          if (!f) throw new _.ErrnoError(8);
          _.chown(f.node, a, d);
        },
        truncate: (u, a) => {
          if (a < 0) throw new _.ErrnoError(28);
          var d;
          if (typeof u == 'string') {
            var f = _.lookupPath(u, { follow: !0 });
            d = f.node;
          } else d = u;
          if (!d.node_ops.setattr) throw new _.ErrnoError(63);
          if (_.isDir(d.mode)) throw new _.ErrnoError(31);
          if (!_.isFile(d.mode)) throw new _.ErrnoError(28);
          var p = _.nodePermissions(d, 'w');
          if (p) throw new _.ErrnoError(p);
          d.node_ops.setattr(d, { size: a, timestamp: Date.now() });
        },
        ftruncate: (u, a) => {
          var d = _.getStream(u);
          if (!d) throw new _.ErrnoError(8);
          if (!(d.flags & 2097155)) throw new _.ErrnoError(28);
          _.truncate(d.node, a);
        },
        utime: (u, a, d) => {
          var f = _.lookupPath(u, { follow: !0 }),
            p = f.node;
          p.node_ops.setattr(p, { timestamp: Math.max(a, d) });
        },
        open: (u, a, d) => {
          if (u === '') throw new _.ErrnoError(44);
          (a = typeof a == 'string' ? _.modeStringToFlags(a) : a),
            (d = typeof d > 'u' ? 438 : d),
            a & 64 ? (d = (d & 4095) | 32768) : (d = 0);
          var f;
          if (typeof u == 'object') f = u;
          else {
            u = Ye.normalize(u);
            try {
              var p = _.lookupPath(u, { follow: !(a & 131072) });
              f = p.node;
            } catch {}
          }
          var w = !1;
          if (a & 64)
            if (f) {
              if (a & 128) throw new _.ErrnoError(20);
            } else (f = _.mknod(u, d, 0)), (w = !0);
          if (!f) throw new _.ErrnoError(44);
          if (
            (_.isChrdev(f.mode) && (a &= -513), a & 65536 && !_.isDir(f.mode))
          )
            throw new _.ErrnoError(54);
          if (!w) {
            var O = _.mayOpen(f, a);
            if (O) throw new _.ErrnoError(O);
          }
          a & 512 && !w && _.truncate(f, 0), (a &= -131713);
          var M = _.createStream({
            node: f,
            path: _.getPath(f),
            flags: a,
            seekable: !0,
            position: 0,
            stream_ops: f.stream_ops,
            ungotten: [],
            error: !1,
          });
          return (
            M.stream_ops.open && M.stream_ops.open(M),
            n.logReadFiles &&
              !(a & 1) &&
              (_.readFiles || (_.readFiles = {}),
              u in _.readFiles || (_.readFiles[u] = 1)),
            M
          );
        },
        close: (u) => {
          if (_.isClosed(u)) throw new _.ErrnoError(8);
          u.getdents && (u.getdents = null);
          try {
            u.stream_ops.close && u.stream_ops.close(u);
          } catch (a) {
            throw a;
          } finally {
            _.closeStream(u.fd);
          }
          u.fd = null;
        },
        isClosed: (u) => u.fd === null,
        llseek: (u, a, d) => {
          if (_.isClosed(u)) throw new _.ErrnoError(8);
          if (!u.seekable || !u.stream_ops.llseek) throw new _.ErrnoError(70);
          if (d != 0 && d != 1 && d != 2) throw new _.ErrnoError(28);
          return (
            (u.position = u.stream_ops.llseek(u, a, d)),
            (u.ungotten = []),
            u.position
          );
        },
        read: (u, a, d, f, p) => {
          if (f < 0 || p < 0) throw new _.ErrnoError(28);
          if (_.isClosed(u)) throw new _.ErrnoError(8);
          if ((u.flags & 2097155) === 1) throw new _.ErrnoError(8);
          if (_.isDir(u.node.mode)) throw new _.ErrnoError(31);
          if (!u.stream_ops.read) throw new _.ErrnoError(28);
          var w = typeof p < 'u';
          if (!w) p = u.position;
          else if (!u.seekable) throw new _.ErrnoError(70);
          var O = u.stream_ops.read(u, a, d, f, p);
          return w || (u.position += O), O;
        },
        write: (u, a, d, f, p, w) => {
          if (f < 0 || p < 0) throw new _.ErrnoError(28);
          if (_.isClosed(u)) throw new _.ErrnoError(8);
          if (!(u.flags & 2097155)) throw new _.ErrnoError(8);
          if (_.isDir(u.node.mode)) throw new _.ErrnoError(31);
          if (!u.stream_ops.write) throw new _.ErrnoError(28);
          u.seekable && u.flags & 1024 && _.llseek(u, 0, 2);
          var O = typeof p < 'u';
          if (!O) p = u.position;
          else if (!u.seekable) throw new _.ErrnoError(70);
          var M = u.stream_ops.write(u, a, d, f, p, w);
          return O || (u.position += M), M;
        },
        allocate: (u, a, d) => {
          if (_.isClosed(u)) throw new _.ErrnoError(8);
          if (a < 0 || d <= 0) throw new _.ErrnoError(28);
          if (!(u.flags & 2097155)) throw new _.ErrnoError(8);
          if (!_.isFile(u.node.mode) && !_.isDir(u.node.mode))
            throw new _.ErrnoError(43);
          if (!u.stream_ops.allocate) throw new _.ErrnoError(138);
          u.stream_ops.allocate(u, a, d);
        },
        mmap: (u, a, d, f, p) => {
          if (f & 2 && !(p & 2) && (u.flags & 2097155) !== 2)
            throw new _.ErrnoError(2);
          if ((u.flags & 2097155) === 1) throw new _.ErrnoError(2);
          if (!u.stream_ops.mmap) throw new _.ErrnoError(43);
          return u.stream_ops.mmap(u, a, d, f, p);
        },
        msync: (u, a, d, f, p) =>
          u.stream_ops.msync ? u.stream_ops.msync(u, a, d, f, p) : 0,
        munmap: (u) => 0,
        ioctl: (u, a, d) => {
          if (!u.stream_ops.ioctl) throw new _.ErrnoError(59);
          return u.stream_ops.ioctl(u, a, d);
        },
        readFile: (u, a = {}) => {
          if (
            ((a.flags = a.flags || 0),
            (a.encoding = a.encoding || 'binary'),
            a.encoding !== 'utf8' && a.encoding !== 'binary')
          )
            throw new Error('Invalid encoding type "' + a.encoding + '"');
          var d,
            f = _.open(u, a.flags),
            p = _.stat(u),
            w = p.size,
            O = new Uint8Array(w);
          return (
            _.read(f, O, 0, w, 0),
            a.encoding === 'utf8'
              ? (d = de(O, 0))
              : a.encoding === 'binary' && (d = O),
            _.close(f),
            d
          );
        },
        writeFile: (u, a, d = {}) => {
          d.flags = d.flags || 577;
          var f = _.open(u, d.flags, d.mode);
          if (typeof a == 'string') {
            var p = new Uint8Array(bt(a) + 1),
              w = Ae(a, p, 0, p.length);
            _.write(f, p, 0, w, void 0, d.canOwn);
          } else if (ArrayBuffer.isView(a))
            _.write(f, a, 0, a.byteLength, void 0, d.canOwn);
          else throw new Error('Unsupported data type');
          _.close(f);
        },
        cwd: () => _.currentPath,
        chdir: (u) => {
          var a = _.lookupPath(u, { follow: !0 });
          if (a.node === null) throw new _.ErrnoError(44);
          if (!_.isDir(a.node.mode)) throw new _.ErrnoError(54);
          var d = _.nodePermissions(a.node, 'x');
          if (d) throw new _.ErrnoError(d);
          _.currentPath = a.path;
        },
        createDefaultDirectories: () => {
          _.mkdir('/tmp'), _.mkdir('/home'), _.mkdir('/home/web_user');
        },
        createDefaultDevices: () => {
          _.mkdir('/dev'),
            _.registerDevice(_.makedev(1, 3), {
              read: () => 0,
              write: (a, d, f, p, w) => p,
            }),
            _.mkdev('/dev/null', _.makedev(1, 3)),
            Bn.register(_.makedev(5, 0), Bn.default_tty_ops),
            Bn.register(_.makedev(6, 0), Bn.default_tty1_ops),
            _.mkdev('/dev/tty', _.makedev(5, 0)),
            _.mkdev('/dev/tty1', _.makedev(6, 0));
          var u = _l();
          _.createDevice('/dev', 'random', u),
            _.createDevice('/dev', 'urandom', u),
            _.mkdir('/dev/shm'),
            _.mkdir('/dev/shm/tmp');
        },
        createSpecialDirectories: () => {
          _.mkdir('/proc');
          var u = _.mkdir('/proc/self');
          _.mkdir('/proc/self/fd'),
            _.mount(
              {
                mount: () => {
                  var a = _.createNode(u, 'fd', 16895, 73);
                  return (
                    (a.node_ops = {
                      lookup: (d, f) => {
                        var p = +f,
                          w = _.getStream(p);
                        if (!w) throw new _.ErrnoError(8);
                        var O = {
                          parent: null,
                          mount: { mountpoint: 'fake' },
                          node_ops: { readlink: () => w.path },
                        };
                        return (O.parent = O), O;
                      },
                    }),
                    a
                  );
                },
              },
              {},
              '/proc/self/fd',
            );
        },
        createStandardStreams: () => {
          n.stdin
            ? _.createDevice('/dev', 'stdin', n.stdin)
            : _.symlink('/dev/tty', '/dev/stdin'),
            n.stdout
              ? _.createDevice('/dev', 'stdout', null, n.stdout)
              : _.symlink('/dev/tty', '/dev/stdout'),
            n.stderr
              ? _.createDevice('/dev', 'stderr', null, n.stderr)
              : _.symlink('/dev/tty1', '/dev/stderr'),
            _.open('/dev/stdin', 0),
            _.open('/dev/stdout', 1),
            _.open('/dev/stderr', 1);
        },
        ensureErrnoError: () => {
          _.ErrnoError ||
            ((_.ErrnoError = function (a, d) {
              (this.node = d),
                (this.setErrno = function (f) {
                  this.errno = f;
                }),
                this.setErrno(a),
                (this.message = 'FS error');
            }),
            (_.ErrnoError.prototype = new Error()),
            (_.ErrnoError.prototype.constructor = _.ErrnoError),
            [44].forEach((u) => {
              (_.genericErrors[u] = new _.ErrnoError(u)),
                (_.genericErrors[u].stack = '<generic error, no stack>');
            }));
        },
        staticInit: () => {
          _.ensureErrnoError(),
            (_.nameTable = new Array(4096)),
            _.mount(Be, {}, '/'),
            _.createDefaultDirectories(),
            _.createDefaultDevices(),
            _.createSpecialDirectories(),
            (_.filesystems = { MEMFS: Be });
        },
        init: (u, a, d) => {
          (_.init.initialized = !0),
            _.ensureErrnoError(),
            (n.stdin = u || n.stdin),
            (n.stdout = a || n.stdout),
            (n.stderr = d || n.stderr),
            _.createStandardStreams();
        },
        quit: () => {
          _.init.initialized = !1;
          for (var u = 0; u < _.streams.length; u++) {
            var a = _.streams[u];
            a && _.close(a);
          }
        },
        getMode: (u, a) => {
          var d = 0;
          return u && (d |= 365), a && (d |= 146), d;
        },
        findObject: (u, a) => {
          var d = _.analyzePath(u, a);
          return d.exists ? d.object : null;
        },
        analyzePath: (u, a) => {
          try {
            var d = _.lookupPath(u, { follow: !a });
            u = d.path;
          } catch {}
          var f = {
            isRoot: !1,
            exists: !1,
            error: 0,
            name: null,
            path: null,
            object: null,
            parentExists: !1,
            parentPath: null,
            parentObject: null,
          };
          try {
            var d = _.lookupPath(u, { parent: !0 });
            (f.parentExists = !0),
              (f.parentPath = d.path),
              (f.parentObject = d.node),
              (f.name = Ye.basename(u)),
              (d = _.lookupPath(u, { follow: !a })),
              (f.exists = !0),
              (f.path = d.path),
              (f.object = d.node),
              (f.name = d.node.name),
              (f.isRoot = d.path === '/');
          } catch (p) {
            f.error = p.errno;
          }
          return f;
        },
        createPath: (u, a, d, f) => {
          u = typeof u == 'string' ? u : _.getPath(u);
          for (var p = a.split('/').reverse(); p.length; ) {
            var w = p.pop();
            if (w) {
              var O = Ye.join2(u, w);
              try {
                _.mkdir(O);
              } catch {}
              u = O;
            }
          }
          return O;
        },
        createFile: (u, a, d, f, p) => {
          var w = Ye.join2(typeof u == 'string' ? u : _.getPath(u), a),
            O = _.getMode(f, p);
          return _.create(w, O);
        },
        createDataFile: (u, a, d, f, p, w) => {
          var O = a;
          u &&
            ((u = typeof u == 'string' ? u : _.getPath(u)),
            (O = a ? Ye.join2(u, a) : u));
          var M = _.getMode(f, p),
            ne = _.create(O, M);
          if (d) {
            if (typeof d == 'string') {
              for (
                var re = new Array(d.length), pe = 0, ye = d.length;
                pe < ye;
                ++pe
              )
                re[pe] = d.charCodeAt(pe);
              d = re;
            }
            _.chmod(ne, M | 146);
            var X = _.open(ne, 577);
            _.write(X, d, 0, d.length, 0, w), _.close(X), _.chmod(ne, M);
          }
          return ne;
        },
        createDevice: (u, a, d, f) => {
          var p = Ye.join2(typeof u == 'string' ? u : _.getPath(u), a),
            w = _.getMode(!!d, !!f);
          _.createDevice.major || (_.createDevice.major = 64);
          var O = _.makedev(_.createDevice.major++, 0);
          return (
            _.registerDevice(O, {
              open: (M) => {
                M.seekable = !1;
              },
              close: (M) => {
                f && f.buffer && f.buffer.length && f(10);
              },
              read: (M, ne, re, pe, ye) => {
                for (var X = 0, Q = 0; Q < pe; Q++) {
                  var ue;
                  try {
                    ue = d();
                  } catch {
                    throw new _.ErrnoError(29);
                  }
                  if (ue === void 0 && X === 0) throw new _.ErrnoError(6);
                  if (ue == null) break;
                  X++, (ne[re + Q] = ue);
                }
                return X && (M.node.timestamp = Date.now()), X;
              },
              write: (M, ne, re, pe, ye) => {
                for (var X = 0; X < pe; X++)
                  try {
                    f(ne[re + X]);
                  } catch {
                    throw new _.ErrnoError(29);
                  }
                return pe && (M.node.timestamp = Date.now()), X;
              },
            }),
            _.mkdev(p, w, O)
          );
        },
        forceLoadFile: (u) => {
          if (u.isDevice || u.isFolder || u.link || u.contents) return !0;
          if (typeof XMLHttpRequest < 'u')
            throw new Error(
              'Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.',
            );
          if ($)
            try {
              (u.contents = As($(u.url), !0)),
                (u.usedBytes = u.contents.length);
            } catch {
              throw new _.ErrnoError(29);
            }
          else throw new Error('Cannot load without read() or XMLHttpRequest.');
        },
        createLazyFile: (u, a, d, f, p) => {
          function w() {
            (this.lengthKnown = !1), (this.chunks = []);
          }
          if (
            ((w.prototype.get = function (Q) {
              if (!(Q > this.length - 1 || Q < 0)) {
                var ue = Q % this.chunkSize,
                  N = (Q / this.chunkSize) | 0;
                return this.getter(N)[ue];
              }
            }),
            (w.prototype.setDataGetter = function (Q) {
              this.getter = Q;
            }),
            (w.prototype.cacheLength = function () {
              var Q = new XMLHttpRequest();
              if (
                (Q.open('HEAD', d, !1),
                Q.send(null),
                !((Q.status >= 200 && Q.status < 300) || Q.status === 304))
              )
                throw new Error("Couldn't load " + d + '. Status: ' + Q.status);
              var ue = Number(Q.getResponseHeader('Content-length')),
                N,
                B = (N = Q.getResponseHeader('Accept-Ranges')) && N === 'bytes',
                J =
                  (N = Q.getResponseHeader('Content-Encoding')) && N === 'gzip',
                Z = 1024 * 1024;
              B || (Z = ue);
              var se = (ce, _e) => {
                  if (ce > _e)
                    throw new Error(
                      'invalid range (' +
                        ce +
                        ', ' +
                        _e +
                        ') or no bytes requested!',
                    );
                  if (_e > ue - 1)
                    throw new Error(
                      'only ' + ue + ' bytes available! programmer error!',
                    );
                  var E = new XMLHttpRequest();
                  if (
                    (E.open('GET', d, !1),
                    ue !== Z &&
                      E.setRequestHeader('Range', 'bytes=' + ce + '-' + _e),
                    (E.responseType = 'arraybuffer'),
                    E.overrideMimeType &&
                      E.overrideMimeType('text/plain; charset=x-user-defined'),
                    E.send(null),
                    !((E.status >= 200 && E.status < 300) || E.status === 304))
                  )
                    throw new Error(
                      "Couldn't load " + d + '. Status: ' + E.status,
                    );
                  return E.response !== void 0
                    ? new Uint8Array(E.response || [])
                    : As(E.responseText || '');
                },
                W = this;
              W.setDataGetter((ce) => {
                var _e = ce * Z,
                  E = (ce + 1) * Z - 1;
                if (
                  ((E = Math.min(E, ue - 1)),
                  typeof W.chunks[ce] > 'u' && (W.chunks[ce] = se(_e, E)),
                  typeof W.chunks[ce] > 'u')
                )
                  throw new Error('doXHR failed!');
                return W.chunks[ce];
              }),
                (J || !ue) &&
                  ((Z = ue = 1),
                  (ue = this.getter(0).length),
                  (Z = ue),
                  C(
                    'LazyFiles on gzip forces download of the whole file when length is accessed',
                  )),
                (this._length = ue),
                (this._chunkSize = Z),
                (this.lengthKnown = !0);
            }),
            typeof XMLHttpRequest < 'u')
          ) {
            if (!m)
              throw 'Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc';
            var O = new w();
            Object.defineProperties(O, {
              length: {
                get: function () {
                  return this.lengthKnown || this.cacheLength(), this._length;
                },
              },
              chunkSize: {
                get: function () {
                  return (
                    this.lengthKnown || this.cacheLength(), this._chunkSize
                  );
                },
              },
            });
            var M = { isDevice: !1, contents: O };
          } else var M = { isDevice: !1, url: d };
          var ne = _.createFile(u, a, M, f, p);
          M.contents
            ? (ne.contents = M.contents)
            : M.url && ((ne.contents = null), (ne.url = M.url)),
            Object.defineProperties(ne, {
              usedBytes: {
                get: function () {
                  return this.contents.length;
                },
              },
            });
          var re = {},
            pe = Object.keys(ne.stream_ops);
          pe.forEach((X) => {
            var Q = ne.stream_ops[X];
            re[X] = function () {
              return _.forceLoadFile(ne), Q.apply(null, arguments);
            };
          });
          function ye(X, Q, ue, N, B) {
            var J = X.node.contents;
            if (B >= J.length) return 0;
            var Z = Math.min(J.length - B, N);
            if (J.slice) for (var se = 0; se < Z; se++) Q[ue + se] = J[B + se];
            else for (var se = 0; se < Z; se++) Q[ue + se] = J.get(B + se);
            return Z;
          }
          return (
            (re.read = (X, Q, ue, N, B) => (
              _.forceLoadFile(ne), ye(X, Q, ue, N, B)
            )),
            (re.mmap = (X, Q, ue, N, B) => {
              _.forceLoadFile(ne);
              var J = Ps(Q);
              if (!J) throw new _.ErrnoError(48);
              return ye(X, ht, J, Q, ue), { ptr: J, allocated: !0 };
            }),
            (ne.stream_ops = re),
            ne
          );
        },
        createPreloadedFile: (u, a, d, f, p, w, O, M, ne, re) => {
          var pe = a ? er.resolve(Ye.join2(u, a)) : u;
          function ye(X) {
            function Q(ue) {
              re && re(),
                M || _.createDataFile(u, a, ue, f, p, ne),
                w && w(),
                si();
            }
            Browser.handledByPreloadPlugin(X, pe, Q, () => {
              O && O(), si();
            }) || Q(X);
          }
          oi(), typeof d == 'string' ? mf(d, (X) => ye(X), O) : ye(d);
        },
        indexedDB: () =>
          window.indexedDB ||
          window.mozIndexedDB ||
          window.webkitIndexedDB ||
          window.msIndexedDB,
        DB_NAME: () => 'EM_FS_' + window.location.pathname,
        DB_VERSION: 20,
        DB_STORE_NAME: 'FILE_DATA',
        saveFilesToDB: (u, a, d) => {
          (a = a || (() => {})), (d = d || (() => {}));
          var f = _.indexedDB();
          try {
            var p = f.open(_.DB_NAME(), _.DB_VERSION);
          } catch (w) {
            return d(w);
          }
          (p.onupgradeneeded = () => {
            C('creating db');
            var w = p.result;
            w.createObjectStore(_.DB_STORE_NAME);
          }),
            (p.onsuccess = () => {
              var w = p.result,
                O = w.transaction([_.DB_STORE_NAME], 'readwrite'),
                M = O.objectStore(_.DB_STORE_NAME),
                ne = 0,
                re = 0,
                pe = u.length;
              function ye() {
                re == 0 ? a() : d();
              }
              u.forEach((X) => {
                var Q = M.put(_.analyzePath(X).object.contents, X);
                (Q.onsuccess = () => {
                  ne++, ne + re == pe && ye();
                }),
                  (Q.onerror = () => {
                    re++, ne + re == pe && ye();
                  });
              }),
                (O.onerror = d);
            }),
            (p.onerror = d);
        },
        loadFilesFromDB: (u, a, d) => {
          (a = a || (() => {})), (d = d || (() => {}));
          var f = _.indexedDB();
          try {
            var p = f.open(_.DB_NAME(), _.DB_VERSION);
          } catch (w) {
            return d(w);
          }
          (p.onupgradeneeded = d),
            (p.onsuccess = () => {
              var w = p.result;
              try {
                var O = w.transaction([_.DB_STORE_NAME], 'readonly');
              } catch (X) {
                d(X);
                return;
              }
              var M = O.objectStore(_.DB_STORE_NAME),
                ne = 0,
                re = 0,
                pe = u.length;
              function ye() {
                re == 0 ? a() : d();
              }
              u.forEach((X) => {
                var Q = M.get(X);
                (Q.onsuccess = () => {
                  _.analyzePath(X).exists && _.unlink(X),
                    _.createDataFile(
                      Ye.dirname(X),
                      Ye.basename(X),
                      Q.result,
                      !0,
                      !0,
                      !0,
                    ),
                    ne++,
                    ne + re == pe && ye();
                }),
                  (Q.onerror = () => {
                    re++, ne + re == pe && ye();
                  });
              }),
                (O.onerror = d);
            }),
            (p.onerror = d);
        },
      },
      Oe = {
        DEFAULT_POLLMASK: 5,
        calculateAt: function (u, a, d) {
          if (Ye.isAbs(a)) return a;
          var f;
          if (u === -100) f = _.cwd();
          else {
            var p = Oe.getStreamFromFD(u);
            f = p.path;
          }
          if (a.length == 0) {
            if (!d) throw new _.ErrnoError(44);
            return f;
          }
          return Ye.join2(f, a);
        },
        doStat: function (u, a, d) {
          try {
            var f = u(a);
          } catch (M) {
            if (
              M &&
              M.node &&
              Ye.normalize(a) !== Ye.normalize(_.getPath(M.node))
            )
              return -54;
            throw M;
          }
          (qe[d >> 2] = f.dev),
            (qe[(d + 8) >> 2] = f.ino),
            (qe[(d + 12) >> 2] = f.mode),
            (Qe[(d + 16) >> 2] = f.nlink),
            (qe[(d + 20) >> 2] = f.uid),
            (qe[(d + 24) >> 2] = f.gid),
            (qe[(d + 28) >> 2] = f.rdev),
            (At = [
              f.size >>> 0,
              ((Ue = f.size),
              +Math.abs(Ue) >= 1
                ? Ue > 0
                  ? (Math.min(+Math.floor(Ue / 4294967296), 4294967295) | 0) >>>
                    0
                  : ~~+Math.ceil((Ue - +(~~Ue >>> 0)) / 4294967296) >>> 0
                : 0),
            ]),
            (qe[(d + 40) >> 2] = At[0]),
            (qe[(d + 44) >> 2] = At[1]),
            (qe[(d + 48) >> 2] = 4096),
            (qe[(d + 52) >> 2] = f.blocks);
          var p = f.atime.getTime(),
            w = f.mtime.getTime(),
            O = f.ctime.getTime();
          return (
            (At = [
              Math.floor(p / 1e3) >>> 0,
              ((Ue = Math.floor(p / 1e3)),
              +Math.abs(Ue) >= 1
                ? Ue > 0
                  ? (Math.min(+Math.floor(Ue / 4294967296), 4294967295) | 0) >>>
                    0
                  : ~~+Math.ceil((Ue - +(~~Ue >>> 0)) / 4294967296) >>> 0
                : 0),
            ]),
            (qe[(d + 56) >> 2] = At[0]),
            (qe[(d + 60) >> 2] = At[1]),
            (Qe[(d + 64) >> 2] = (p % 1e3) * 1e3),
            (At = [
              Math.floor(w / 1e3) >>> 0,
              ((Ue = Math.floor(w / 1e3)),
              +Math.abs(Ue) >= 1
                ? Ue > 0
                  ? (Math.min(+Math.floor(Ue / 4294967296), 4294967295) | 0) >>>
                    0
                  : ~~+Math.ceil((Ue - +(~~Ue >>> 0)) / 4294967296) >>> 0
                : 0),
            ]),
            (qe[(d + 72) >> 2] = At[0]),
            (qe[(d + 76) >> 2] = At[1]),
            (Qe[(d + 80) >> 2] = (w % 1e3) * 1e3),
            (At = [
              Math.floor(O / 1e3) >>> 0,
              ((Ue = Math.floor(O / 1e3)),
              +Math.abs(Ue) >= 1
                ? Ue > 0
                  ? (Math.min(+Math.floor(Ue / 4294967296), 4294967295) | 0) >>>
                    0
                  : ~~+Math.ceil((Ue - +(~~Ue >>> 0)) / 4294967296) >>> 0
                : 0),
            ]),
            (qe[(d + 88) >> 2] = At[0]),
            (qe[(d + 92) >> 2] = At[1]),
            (Qe[(d + 96) >> 2] = (O % 1e3) * 1e3),
            (At = [
              f.ino >>> 0,
              ((Ue = f.ino),
              +Math.abs(Ue) >= 1
                ? Ue > 0
                  ? (Math.min(+Math.floor(Ue / 4294967296), 4294967295) | 0) >>>
                    0
                  : ~~+Math.ceil((Ue - +(~~Ue >>> 0)) / 4294967296) >>> 0
                : 0),
            ]),
            (qe[(d + 104) >> 2] = At[0]),
            (qe[(d + 108) >> 2] = At[1]),
            0
          );
        },
        doMsync: function (u, a, d, f, p) {
          if (!_.isFile(a.node.mode)) throw new _.ErrnoError(43);
          if (f & 2) return 0;
          var w = Dt.slice(u, u + d);
          _.msync(a, w, p, d, f);
        },
        varargs: void 0,
        get: function () {
          Oe.varargs += 4;
          var u = qe[(Oe.varargs - 4) >> 2];
          return u;
        },
        getStr: function (u) {
          var a = Fe(u);
          return a;
        },
        getStreamFromFD: function (u) {
          var a = _.getStream(u);
          if (!a) throw new _.ErrnoError(8);
          return a;
        },
      };
    function yo(u, a) {
      try {
        return (u = Oe.getStr(u)), _.chmod(u, a), 0;
      } catch (d) {
        if (typeof _ > 'u' || !(d instanceof _.ErrnoError)) throw d;
        return -d.errno;
      }
    }
    function gf(u, a, d, f) {
      try {
        if (((a = Oe.getStr(a)), (a = Oe.calculateAt(u, a)), d & -8))
          return -28;
        var p = _.lookupPath(a, { follow: !0 }),
          w = p.node;
        if (!w) return -44;
        var O = '';
        return (
          d & 4 && (O += 'r'),
          d & 2 && (O += 'w'),
          d & 1 && (O += 'x'),
          O && _.nodePermissions(w, O) ? -2 : 0
        );
      } catch (M) {
        if (typeof _ > 'u' || !(M instanceof _.ErrnoError)) throw M;
        return -M.errno;
      }
    }
    function bl(u, a) {
      try {
        return _.fchmod(u, a), 0;
      } catch (d) {
        if (typeof _ > 'u' || !(d instanceof _.ErrnoError)) throw d;
        return -d.errno;
      }
    }
    function _f(u, a, d) {
      try {
        return _.fchown(u, a, d), 0;
      } catch (f) {
        if (typeof _ > 'u' || !(f instanceof _.ErrnoError)) throw f;
        return -f.errno;
      }
    }
    function wl(u) {
      return (qe[Fs() >> 2] = u), u;
    }
    function Ni(u, a, d) {
      Oe.varargs = d;
      try {
        var f = Oe.getStreamFromFD(u);
        switch (a) {
          case 0: {
            var p = Oe.get();
            if (p < 0) return -28;
            var w;
            return (w = _.createStream(f, p)), w.fd;
          }
          case 1:
          case 2:
            return 0;
          case 3:
            return f.flags;
          case 4: {
            var p = Oe.get();
            return (f.flags |= p), 0;
          }
          case 5: {
            var p = Oe.get(),
              O = 0;
            return (wt[(p + O) >> 1] = 2), 0;
          }
          case 6:
          case 7:
            return 0;
          case 16:
          case 8:
            return -28;
          case 9:
            return wl(28), -1;
          default:
            return -28;
        }
      } catch (M) {
        if (typeof _ > 'u' || !(M instanceof _.ErrnoError)) throw M;
        return -M.errno;
      }
    }
    function yf(u, a) {
      try {
        var d = Oe.getStreamFromFD(u);
        return Oe.doStat(_.stat, d.path, a);
      } catch (f) {
        if (typeof _ > 'u' || !(f instanceof _.ErrnoError)) throw f;
        return -f.errno;
      }
    }
    var Fr = 9007199254740992,
      vf = -9007199254740992;
    function Sl(u) {
      return u < vf || u > Fr ? NaN : Number(u);
    }
    function bf(u, a) {
      try {
        return (a = Sl(a)), isNaN(a) ? -61 : (_.ftruncate(u, a), 0);
      } catch (d) {
        if (typeof _ > 'u' || !(d instanceof _.ErrnoError)) throw d;
        return -d.errno;
      }
    }
    function wf(u, a) {
      try {
        if (a === 0) return -28;
        var d = _.cwd(),
          f = bt(d) + 1;
        return a < f ? -68 : (ut(d, u, a), f);
      } catch (p) {
        if (typeof _ > 'u' || !(p instanceof _.ErrnoError)) throw p;
        return -p.errno;
      }
    }
    function Sf(u, a, d) {
      Oe.varargs = d;
      try {
        var f = Oe.getStreamFromFD(u);
        switch (a) {
          case 21509:
          case 21505:
            return f.tty ? 0 : -59;
          case 21510:
          case 21511:
          case 21512:
          case 21506:
          case 21507:
          case 21508:
            return f.tty ? 0 : -59;
          case 21519: {
            if (!f.tty) return -59;
            var p = Oe.get();
            return (qe[p >> 2] = 0), 0;
          }
          case 21520:
            return f.tty ? -28 : -59;
          case 21531: {
            var p = Oe.get();
            return _.ioctl(f, a, p);
          }
          case 21523:
            return f.tty ? 0 : -59;
          case 21524:
            return f.tty ? 0 : -59;
          default:
            return -28;
        }
      } catch (w) {
        if (typeof _ > 'u' || !(w instanceof _.ErrnoError)) throw w;
        return -w.errno;
      }
    }
    function tr(u, a) {
      try {
        return (u = Oe.getStr(u)), Oe.doStat(_.lstat, u, a);
      } catch (d) {
        if (typeof _ > 'u' || !(d instanceof _.ErrnoError)) throw d;
        return -d.errno;
      }
    }
    function xf(u, a, d) {
      try {
        return (
          (a = Oe.getStr(a)),
          (a = Oe.calculateAt(u, a)),
          (a = Ye.normalize(a)),
          a[a.length - 1] === '/' && (a = a.substr(0, a.length - 1)),
          _.mkdir(a, d, 0),
          0
        );
      } catch (f) {
        if (typeof _ > 'u' || !(f instanceof _.ErrnoError)) throw f;
        return -f.errno;
      }
    }
    function kf(u, a, d, f) {
      try {
        a = Oe.getStr(a);
        var p = f & 256,
          w = f & 4096;
        return (
          (f = f & -6401),
          (a = Oe.calculateAt(u, a, w)),
          Oe.doStat(p ? _.lstat : _.stat, a, d)
        );
      } catch (O) {
        if (typeof _ > 'u' || !(O instanceof _.ErrnoError)) throw O;
        return -O.errno;
      }
    }
    function Ef(u, a, d, f) {
      Oe.varargs = f;
      try {
        (a = Oe.getStr(a)), (a = Oe.calculateAt(u, a));
        var p = f ? Oe.get() : 0;
        return _.open(a, d, p).fd;
      } catch (w) {
        if (typeof _ > 'u' || !(w instanceof _.ErrnoError)) throw w;
        return -w.errno;
      }
    }
    function Tf(u, a, d, f) {
      try {
        if (((a = Oe.getStr(a)), (a = Oe.calculateAt(u, a)), f <= 0))
          return -28;
        var p = _.readlink(a),
          w = Math.min(f, bt(p)),
          O = ht[d + w];
        return ut(p, d, f + 1), (ht[d + w] = O), w;
      } catch (M) {
        if (typeof _ > 'u' || !(M instanceof _.ErrnoError)) throw M;
        return -M.errno;
      }
    }
    function Cf(u) {
      try {
        return (u = Oe.getStr(u)), _.rmdir(u), 0;
      } catch (a) {
        if (typeof _ > 'u' || !(a instanceof _.ErrnoError)) throw a;
        return -a.errno;
      }
    }
    function ai(u, a) {
      try {
        return (u = Oe.getStr(u)), Oe.doStat(_.stat, u, a);
      } catch (d) {
        if (typeof _ > 'u' || !(d instanceof _.ErrnoError)) throw d;
        return -d.errno;
      }
    }
    function Af(u, a, d) {
      try {
        return (
          (a = Oe.getStr(a)),
          (a = Oe.calculateAt(u, a)),
          d === 0
            ? _.unlink(a)
            : d === 512
              ? _.rmdir(a)
              : qr('Invalid flags passed to unlinkat'),
          0
        );
      } catch (f) {
        if (typeof _ > 'u' || !(f instanceof _.ErrnoError)) throw f;
        return -f.errno;
      }
    }
    function qs(u) {
      return Qe[u >> 2] + qe[(u + 4) >> 2] * 4294967296;
    }
    function Pf(u, a, d, f) {
      try {
        if (((a = Oe.getStr(a)), (a = Oe.calculateAt(u, a, !0)), d)) {
          var O = qs(d),
            M = qe[(d + 8) >> 2];
          (p = O * 1e3 + M / (1e3 * 1e3)),
            (d += 16),
            (O = qs(d)),
            (M = qe[(d + 8) >> 2]),
            (w = O * 1e3 + M / (1e3 * 1e3));
        } else
          var p = Date.now(),
            w = p;
        return _.utime(a, p, w), 0;
      } catch (ne) {
        if (typeof _ > 'u' || !(ne instanceof _.ErrnoError)) throw ne;
        return -ne.errno;
      }
    }
    var qf = !0;
    function If() {
      return qf;
    }
    function li(u) {
      return u % 4 === 0 && (u % 100 !== 0 || u % 400 === 0);
    }
    var Ff = [0, 31, 60, 91, 121, 152, 182, 213, 244, 274, 305, 335],
      Rf = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334];
    function Of(u) {
      var a = li(u.getFullYear()),
        d = a ? Ff : Rf,
        f = d[u.getMonth()] + u.getDate() - 1;
      return f;
    }
    function Lf(u, a) {
      var d = new Date(qs(u) * 1e3);
      (qe[a >> 2] = d.getSeconds()),
        (qe[(a + 4) >> 2] = d.getMinutes()),
        (qe[(a + 8) >> 2] = d.getHours()),
        (qe[(a + 12) >> 2] = d.getDate()),
        (qe[(a + 16) >> 2] = d.getMonth()),
        (qe[(a + 20) >> 2] = d.getFullYear() - 1900),
        (qe[(a + 24) >> 2] = d.getDay());
      var f = Of(d) | 0;
      (qe[(a + 28) >> 2] = f),
        (qe[(a + 36) >> 2] = -(d.getTimezoneOffset() * 60));
      var p = new Date(d.getFullYear(), 0, 1),
        w = new Date(d.getFullYear(), 6, 1).getTimezoneOffset(),
        O = p.getTimezoneOffset(),
        M = (w != O && d.getTimezoneOffset() == Math.min(O, w)) | 0;
      qe[(a + 32) >> 2] = M;
    }
    function Mf(u, a, d, f, p, w, O) {
      try {
        var M = Oe.getStreamFromFD(f),
          ne = _.mmap(M, u, p, a, d),
          re = ne.ptr;
        return (qe[w >> 2] = ne.allocated), (Qe[O >> 2] = re), 0;
      } catch (pe) {
        if (typeof _ > 'u' || !(pe instanceof _.ErrnoError)) throw pe;
        return -pe.errno;
      }
    }
    function Df(u, a, d, f, p, w) {
      try {
        var O = Oe.getStreamFromFD(p);
        d & 2 && Oe.doMsync(u, O, a, f, w), _.munmap(O);
      } catch (M) {
        if (typeof _ > 'u' || !(M instanceof _.ErrnoError)) throw M;
        return -M.errno;
      }
    }
    function vo(u) {
      var a = bt(u) + 1,
        d = Tl(a);
      return d && Ae(u, ht, d, a), d;
    }
    function zf(u, a, d) {
      var f = new Date().getFullYear(),
        p = new Date(f, 0, 1),
        w = new Date(f, 6, 1),
        O = p.getTimezoneOffset(),
        M = w.getTimezoneOffset(),
        ne = Math.max(O, M);
      (Qe[u >> 2] = ne * 60), (qe[a >> 2] = +(O != M));
      function re(ue) {
        var N = ue.toTimeString().match(/\(([A-Za-z ]+)\)$/);
        return N ? N[1] : 'GMT';
      }
      var pe = re(p),
        ye = re(w),
        X = vo(pe),
        Q = vo(ye);
      M < O
        ? ((Qe[d >> 2] = X), (Qe[(d + 4) >> 2] = Q))
        : ((Qe[d >> 2] = Q), (Qe[(d + 4) >> 2] = X));
    }
    function bo() {
      return Date.now();
    }
    var wo;
    wo = () => performance.now();
    function $f() {
      return 2147483648;
    }
    function So(u) {
      var a = H.buffer;
      try {
        return H.grow((u - a.byteLength + 65535) >>> 16), Se(), 1;
      } catch {}
    }
    function xl(u) {
      var a = Dt.length;
      u = u >>> 0;
      var d = $f();
      if (u > d) return !1;
      let f = (ne, re) => ne + ((re - (ne % re)) % re);
      for (var p = 1; p <= 4; p *= 2) {
        var w = a * (1 + 0.2 / p);
        w = Math.min(w, u + 100663296);
        var O = Math.min(d, f(Math.max(u, w), 65536)),
          M = So(O);
        if (M) return !0;
      }
      return !1;
    }
    var Is = {};
    function Nf() {
      return h || './this.program';
    }
    function ji() {
      if (!ji.strings) {
        var u =
            (
              (typeof navigator == 'object' &&
                navigator.languages &&
                navigator.languages[0]) ||
              'C'
            ).replace('-', '_') + '.UTF-8',
          a = {
            USER: 'web_user',
            LOGNAME: 'web_user',
            PATH: '/',
            PWD: '/',
            HOME: '/home/web_user',
            LANG: u,
            _: Nf(),
          };
        for (var d in Is) Is[d] === void 0 ? delete a[d] : (a[d] = Is[d]);
        var f = [];
        for (var d in a) f.push(d + '=' + a[d]);
        ji.strings = f;
      }
      return ji.strings;
    }
    function kl(u, a, d) {
      for (var f = 0; f < u.length; ++f) ht[a++ >> 0] = u.charCodeAt(f);
      ht[a >> 0] = 0;
    }
    function jf(u, a) {
      var d = 0;
      return (
        ji().forEach(function (f, p) {
          var w = a + d;
          (Qe[(u + p * 4) >> 2] = w), kl(f, w), (d += f.length + 1);
        }),
        0
      );
    }
    function Bf(u, a) {
      var d = ji();
      Qe[u >> 2] = d.length;
      var f = 0;
      return (
        d.forEach(function (p) {
          f += p.length + 1;
        }),
        (Qe[a >> 2] = f),
        0
      );
    }
    function Vf(u) {
      try {
        var a = Oe.getStreamFromFD(u);
        return _.close(a), 0;
      } catch (d) {
        if (typeof _ > 'u' || !(d instanceof _.ErrnoError)) throw d;
        return d.errno;
      }
    }
    function Wf(u, a) {
      try {
        var d = Oe.getStreamFromFD(u),
          f = d.tty ? 2 : _.isDir(d.mode) ? 3 : _.isLink(d.mode) ? 7 : 4;
        return (ht[a >> 0] = f), 0;
      } catch (p) {
        if (typeof _ > 'u' || !(p instanceof _.ErrnoError)) throw p;
        return p.errno;
      }
    }
    function Uf(u, a, d, f) {
      for (var p = 0, w = 0; w < d; w++) {
        var O = Qe[a >> 2],
          M = Qe[(a + 4) >> 2];
        a += 8;
        var ne = _.read(u, ht, O, M, f);
        if (ne < 0) return -1;
        if (((p += ne), ne < M)) break;
      }
      return p;
    }
    function Hf(u, a, d, f) {
      try {
        var p = Oe.getStreamFromFD(u),
          w = Uf(p, a, d);
        return (Qe[f >> 2] = w), 0;
      } catch (O) {
        if (typeof _ > 'u' || !(O instanceof _.ErrnoError)) throw O;
        return O.errno;
      }
    }
    function Qf(u, a, d, f) {
      try {
        if (((a = Sl(a)), isNaN(a))) return 61;
        var p = Oe.getStreamFromFD(u);
        return (
          _.llseek(p, a, d),
          (At = [
            p.position >>> 0,
            ((Ue = p.position),
            +Math.abs(Ue) >= 1
              ? Ue > 0
                ? (Math.min(+Math.floor(Ue / 4294967296), 4294967295) | 0) >>> 0
                : ~~+Math.ceil((Ue - +(~~Ue >>> 0)) / 4294967296) >>> 0
              : 0),
          ]),
          (qe[f >> 2] = At[0]),
          (qe[(f + 4) >> 2] = At[1]),
          p.getdents && a === 0 && d === 0 && (p.getdents = null),
          0
        );
      } catch (w) {
        if (typeof _ > 'u' || !(w instanceof _.ErrnoError)) throw w;
        return w.errno;
      }
    }
    function Gf(u) {
      try {
        var a = Oe.getStreamFromFD(u);
        return a.stream_ops && a.stream_ops.fsync ? a.stream_ops.fsync(a) : 0;
      } catch (d) {
        if (typeof _ > 'u' || !(d instanceof _.ErrnoError)) throw d;
        return d.errno;
      }
    }
    function Kf(u, a, d, f) {
      for (var p = 0, w = 0; w < d; w++) {
        var O = Qe[a >> 2],
          M = Qe[(a + 4) >> 2];
        a += 8;
        var ne = _.write(u, ht, O, M, f);
        if (ne < 0) return -1;
        p += ne;
      }
      return p;
    }
    function Xf(u, a, d, f) {
      try {
        var p = Oe.getStreamFromFD(u),
          w = Kf(p, a, d);
        return (Qe[f >> 2] = w), 0;
      } catch (O) {
        if (typeof _ > 'u' || !(O instanceof _.ErrnoError)) throw O;
        return O.errno;
      }
    }
    var Bi = function (u, a, d, f) {
        u || (u = this),
          (this.parent = u),
          (this.mount = u.mount),
          (this.mounted = null),
          (this.id = _.nextInode++),
          (this.name = a),
          (this.mode = d),
          (this.node_ops = {}),
          (this.stream_ops = {}),
          (this.rdev = f);
      },
      ui = 365,
      xo = 146;
    Object.defineProperties(Bi.prototype, {
      read: {
        get: function () {
          return (this.mode & ui) === ui;
        },
        set: function (u) {
          u ? (this.mode |= ui) : (this.mode &= ~ui);
        },
      },
      write: {
        get: function () {
          return (this.mode & xo) === xo;
        },
        set: function (u) {
          u ? (this.mode |= xo) : (this.mode &= ~xo);
        },
      },
      isFolder: {
        get: function () {
          return _.isDir(this.mode);
        },
      },
      isDevice: {
        get: function () {
          return _.isChrdev(this.mode);
        },
      },
    }),
      (_.FSNode = Bi),
      _.staticInit();
    var El = {
      __syscall_chmod: yo,
      __syscall_faccessat: gf,
      __syscall_fchmod: bl,
      __syscall_fchown32: _f,
      __syscall_fcntl64: Ni,
      __syscall_fstat64: yf,
      __syscall_ftruncate64: bf,
      __syscall_getcwd: wf,
      __syscall_ioctl: Sf,
      __syscall_lstat64: tr,
      __syscall_mkdirat: xf,
      __syscall_newfstatat: kf,
      __syscall_openat: Ef,
      __syscall_readlinkat: Tf,
      __syscall_rmdir: Cf,
      __syscall_stat64: ai,
      __syscall_unlinkat: Af,
      __syscall_utimensat: Pf,
      _emscripten_get_now_is_monotonic: If,
      _localtime_js: Lf,
      _mmap_js: Mf,
      _munmap_js: Df,
      _tzset_js: zf,
      emscripten_date_now: bo,
      emscripten_get_now: wo,
      emscripten_resize_heap: xl,
      environ_get: jf,
      environ_sizes_get: Bf,
      fd_close: Vf,
      fd_fdstat_get: Wf,
      fd_read: Hf,
      fd_seek: Qf,
      fd_sync: Gf,
      fd_write: Xf,
      memory: H,
    };
    _o(),
      (n.___wasm_call_ctors = function () {
        return (n.___wasm_call_ctors = n.asm.__wasm_call_ctors).apply(
          null,
          arguments,
        );
      }),
      (n._sqlite3_status64 = function () {
        return (n._sqlite3_status64 = n.asm.sqlite3_status64).apply(
          null,
          arguments,
        );
      }),
      (n._sqlite3_status = function () {
        return (n._sqlite3_status = n.asm.sqlite3_status).apply(
          null,
          arguments,
        );
      }),
      (n._sqlite3_db_status = function () {
        return (n._sqlite3_db_status = n.asm.sqlite3_db_status).apply(
          null,
          arguments,
        );
      }),
      (n._sqlite3_msize = function () {
        return (n._sqlite3_msize = n.asm.sqlite3_msize).apply(null, arguments);
      }),
      (n._sqlite3_vfs_find = function () {
        return (n._sqlite3_vfs_find = n.asm.sqlite3_vfs_find).apply(
          null,
          arguments,
        );
      }),
      (n._sqlite3_initialize = function () {
        return (n._sqlite3_initialize = n.asm.sqlite3_initialize).apply(
          null,
          arguments,
        );
      }),
      (n._sqlite3_malloc = function () {
        return (n._sqlite3_malloc = n.asm.sqlite3_malloc).apply(
          null,
          arguments,
        );
      }),
      (n._sqlite3_free = function () {
        return (n._sqlite3_free = n.asm.sqlite3_free).apply(null, arguments);
      }),
      (n._sqlite3_vfs_register = function () {
        return (n._sqlite3_vfs_register = n.asm.sqlite3_vfs_register).apply(
          null,
          arguments,
        );
      }),
      (n._sqlite3_vfs_unregister = function () {
        return (n._sqlite3_vfs_unregister = n.asm.sqlite3_vfs_unregister).apply(
          null,
          arguments,
        );
      }),
      (n._sqlite3_malloc64 = function () {
        return (n._sqlite3_malloc64 = n.asm.sqlite3_malloc64).apply(
          null,
          arguments,
        );
      }),
      (n._sqlite3_realloc = function () {
        return (n._sqlite3_realloc = n.asm.sqlite3_realloc).apply(
          null,
          arguments,
        );
      }),
      (n._sqlite3_realloc64 = function () {
        return (n._sqlite3_realloc64 = n.asm.sqlite3_realloc64).apply(
          null,
          arguments,
        );
      }),
      (n._sqlite3_value_text = function () {
        return (n._sqlite3_value_text = n.asm.sqlite3_value_text).apply(
          null,
          arguments,
        );
      }),
      (n._sqlite3_randomness = function () {
        return (n._sqlite3_randomness = n.asm.sqlite3_randomness).apply(
          null,
          arguments,
        );
      }),
      (n._sqlite3_stricmp = function () {
        return (n._sqlite3_stricmp = n.asm.sqlite3_stricmp).apply(
          null,
          arguments,
        );
      }),
      (n._sqlite3_strnicmp = function () {
        return (n._sqlite3_strnicmp = n.asm.sqlite3_strnicmp).apply(
          null,
          arguments,
        );
      }),
      (n._sqlite3_uri_parameter = function () {
        return (n._sqlite3_uri_parameter = n.asm.sqlite3_uri_parameter).apply(
          null,
          arguments,
        );
      });
    var Fs = (n.___errno_location = function () {
      return (Fs = n.___errno_location = n.asm.__errno_location).apply(
        null,
        arguments,
      );
    });
    (n._sqlite3_uri_boolean = function () {
      return (n._sqlite3_uri_boolean = n.asm.sqlite3_uri_boolean).apply(
        null,
        arguments,
      );
    }),
      (n._sqlite3_serialize = function () {
        return (n._sqlite3_serialize = n.asm.sqlite3_serialize).apply(
          null,
          arguments,
        );
      }),
      (n._sqlite3_prepare_v2 = function () {
        return (n._sqlite3_prepare_v2 = n.asm.sqlite3_prepare_v2).apply(
          null,
          arguments,
        );
      }),
      (n._sqlite3_step = function () {
        return (n._sqlite3_step = n.asm.sqlite3_step).apply(null, arguments);
      }),
      (n._sqlite3_column_int64 = function () {
        return (n._sqlite3_column_int64 = n.asm.sqlite3_column_int64).apply(
          null,
          arguments,
        );
      }),
      (n._sqlite3_reset = function () {
        return (n._sqlite3_reset = n.asm.sqlite3_reset).apply(null, arguments);
      }),
      (n._sqlite3_exec = function () {
        return (n._sqlite3_exec = n.asm.sqlite3_exec).apply(null, arguments);
      }),
      (n._sqlite3_column_int = function () {
        return (n._sqlite3_column_int = n.asm.sqlite3_column_int).apply(
          null,
          arguments,
        );
      }),
      (n._sqlite3_finalize = function () {
        return (n._sqlite3_finalize = n.asm.sqlite3_finalize).apply(
          null,
          arguments,
        );
      }),
      (n._sqlite3_file_control = function () {
        return (n._sqlite3_file_control = n.asm.sqlite3_file_control).apply(
          null,
          arguments,
        );
      }),
      (n._sqlite3_column_name = function () {
        return (n._sqlite3_column_name = n.asm.sqlite3_column_name).apply(
          null,
          arguments,
        );
      }),
      (n._sqlite3_column_text = function () {
        return (n._sqlite3_column_text = n.asm.sqlite3_column_text).apply(
          null,
          arguments,
        );
      }),
      (n._sqlite3_column_type = function () {
        return (n._sqlite3_column_type = n.asm.sqlite3_column_type).apply(
          null,
          arguments,
        );
      }),
      (n._sqlite3_errmsg = function () {
        return (n._sqlite3_errmsg = n.asm.sqlite3_errmsg).apply(
          null,
          arguments,
        );
      }),
      (n._sqlite3_deserialize = function () {
        return (n._sqlite3_deserialize = n.asm.sqlite3_deserialize).apply(
          null,
          arguments,
        );
      }),
      (n._sqlite3_clear_bindings = function () {
        return (n._sqlite3_clear_bindings = n.asm.sqlite3_clear_bindings).apply(
          null,
          arguments,
        );
      }),
      (n._sqlite3_value_blob = function () {
        return (n._sqlite3_value_blob = n.asm.sqlite3_value_blob).apply(
          null,
          arguments,
        );
      }),
      (n._sqlite3_value_bytes = function () {
        return (n._sqlite3_value_bytes = n.asm.sqlite3_value_bytes).apply(
          null,
          arguments,
        );
      }),
      (n._sqlite3_value_double = function () {
        return (n._sqlite3_value_double = n.asm.sqlite3_value_double).apply(
          null,
          arguments,
        );
      }),
      (n._sqlite3_value_int = function () {
        return (n._sqlite3_value_int = n.asm.sqlite3_value_int).apply(
          null,
          arguments,
        );
      }),
      (n._sqlite3_value_int64 = function () {
        return (n._sqlite3_value_int64 = n.asm.sqlite3_value_int64).apply(
          null,
          arguments,
        );
      }),
      (n._sqlite3_value_subtype = function () {
        return (n._sqlite3_value_subtype = n.asm.sqlite3_value_subtype).apply(
          null,
          arguments,
        );
      }),
      (n._sqlite3_value_pointer = function () {
        return (n._sqlite3_value_pointer = n.asm.sqlite3_value_pointer).apply(
          null,
          arguments,
        );
      }),
      (n._sqlite3_value_type = function () {
        return (n._sqlite3_value_type = n.asm.sqlite3_value_type).apply(
          null,
          arguments,
        );
      }),
      (n._sqlite3_value_nochange = function () {
        return (n._sqlite3_value_nochange = n.asm.sqlite3_value_nochange).apply(
          null,
          arguments,
        );
      }),
      (n._sqlite3_value_frombind = function () {
        return (n._sqlite3_value_frombind = n.asm.sqlite3_value_frombind).apply(
          null,
          arguments,
        );
      }),
      (n._sqlite3_value_dup = function () {
        return (n._sqlite3_value_dup = n.asm.sqlite3_value_dup).apply(
          null,
          arguments,
        );
      }),
      (n._sqlite3_value_free = function () {
        return (n._sqlite3_value_free = n.asm.sqlite3_value_free).apply(
          null,
          arguments,
        );
      }),
      (n._sqlite3_result_blob = function () {
        return (n._sqlite3_result_blob = n.asm.sqlite3_result_blob).apply(
          null,
          arguments,
        );
      }),
      (n._sqlite3_result_error_toobig = function () {
        return (n._sqlite3_result_error_toobig =
          n.asm.sqlite3_result_error_toobig).apply(null, arguments);
      }),
      (n._sqlite3_result_error_nomem = function () {
        return (n._sqlite3_result_error_nomem =
          n.asm.sqlite3_result_error_nomem).apply(null, arguments);
      }),
      (n._sqlite3_result_double = function () {
        return (n._sqlite3_result_double = n.asm.sqlite3_result_double).apply(
          null,
          arguments,
        );
      }),
      (n._sqlite3_result_error = function () {
        return (n._sqlite3_result_error = n.asm.sqlite3_result_error).apply(
          null,
          arguments,
        );
      }),
      (n._sqlite3_result_int = function () {
        return (n._sqlite3_result_int = n.asm.sqlite3_result_int).apply(
          null,
          arguments,
        );
      }),
      (n._sqlite3_result_int64 = function () {
        return (n._sqlite3_result_int64 = n.asm.sqlite3_result_int64).apply(
          null,
          arguments,
        );
      }),
      (n._sqlite3_result_null = function () {
        return (n._sqlite3_result_null = n.asm.sqlite3_result_null).apply(
          null,
          arguments,
        );
      }),
      (n._sqlite3_result_pointer = function () {
        return (n._sqlite3_result_pointer = n.asm.sqlite3_result_pointer).apply(
          null,
          arguments,
        );
      }),
      (n._sqlite3_result_subtype = function () {
        return (n._sqlite3_result_subtype = n.asm.sqlite3_result_subtype).apply(
          null,
          arguments,
        );
      }),
      (n._sqlite3_result_text = function () {
        return (n._sqlite3_result_text = n.asm.sqlite3_result_text).apply(
          null,
          arguments,
        );
      }),
      (n._sqlite3_result_zeroblob = function () {
        return (n._sqlite3_result_zeroblob =
          n.asm.sqlite3_result_zeroblob).apply(null, arguments);
      }),
      (n._sqlite3_result_zeroblob64 = function () {
        return (n._sqlite3_result_zeroblob64 =
          n.asm.sqlite3_result_zeroblob64).apply(null, arguments);
      }),
      (n._sqlite3_result_error_code = function () {
        return (n._sqlite3_result_error_code =
          n.asm.sqlite3_result_error_code).apply(null, arguments);
      }),
      (n._sqlite3_user_data = function () {
        return (n._sqlite3_user_data = n.asm.sqlite3_user_data).apply(
          null,
          arguments,
        );
      }),
      (n._sqlite3_context_db_handle = function () {
        return (n._sqlite3_context_db_handle =
          n.asm.sqlite3_context_db_handle).apply(null, arguments);
      }),
      (n._sqlite3_vtab_nochange = function () {
        return (n._sqlite3_vtab_nochange = n.asm.sqlite3_vtab_nochange).apply(
          null,
          arguments,
        );
      }),
      (n._sqlite3_vtab_in_first = function () {
        return (n._sqlite3_vtab_in_first = n.asm.sqlite3_vtab_in_first).apply(
          null,
          arguments,
        );
      }),
      (n._sqlite3_vtab_in_next = function () {
        return (n._sqlite3_vtab_in_next = n.asm.sqlite3_vtab_in_next).apply(
          null,
          arguments,
        );
      }),
      (n._sqlite3_aggregate_context = function () {
        return (n._sqlite3_aggregate_context =
          n.asm.sqlite3_aggregate_context).apply(null, arguments);
      }),
      (n._sqlite3_get_auxdata = function () {
        return (n._sqlite3_get_auxdata = n.asm.sqlite3_get_auxdata).apply(
          null,
          arguments,
        );
      }),
      (n._sqlite3_set_auxdata = function () {
        return (n._sqlite3_set_auxdata = n.asm.sqlite3_set_auxdata).apply(
          null,
          arguments,
        );
      }),
      (n._sqlite3_column_count = function () {
        return (n._sqlite3_column_count = n.asm.sqlite3_column_count).apply(
          null,
          arguments,
        );
      }),
      (n._sqlite3_data_count = function () {
        return (n._sqlite3_data_count = n.asm.sqlite3_data_count).apply(
          null,
          arguments,
        );
      }),
      (n._sqlite3_column_blob = function () {
        return (n._sqlite3_column_blob = n.asm.sqlite3_column_blob).apply(
          null,
          arguments,
        );
      }),
      (n._sqlite3_column_bytes = function () {
        return (n._sqlite3_column_bytes = n.asm.sqlite3_column_bytes).apply(
          null,
          arguments,
        );
      }),
      (n._sqlite3_column_double = function () {
        return (n._sqlite3_column_double = n.asm.sqlite3_column_double).apply(
          null,
          arguments,
        );
      }),
      (n._sqlite3_column_value = function () {
        return (n._sqlite3_column_value = n.asm.sqlite3_column_value).apply(
          null,
          arguments,
        );
      }),
      (n._sqlite3_bind_blob = function () {
        return (n._sqlite3_bind_blob = n.asm.sqlite3_bind_blob).apply(
          null,
          arguments,
        );
      }),
      (n._sqlite3_bind_double = function () {
        return (n._sqlite3_bind_double = n.asm.sqlite3_bind_double).apply(
          null,
          arguments,
        );
      }),
      (n._sqlite3_bind_int = function () {
        return (n._sqlite3_bind_int = n.asm.sqlite3_bind_int).apply(
          null,
          arguments,
        );
      }),
      (n._sqlite3_bind_int64 = function () {
        return (n._sqlite3_bind_int64 = n.asm.sqlite3_bind_int64).apply(
          null,
          arguments,
        );
      }),
      (n._sqlite3_bind_null = function () {
        return (n._sqlite3_bind_null = n.asm.sqlite3_bind_null).apply(
          null,
          arguments,
        );
      }),
      (n._sqlite3_bind_pointer = function () {
        return (n._sqlite3_bind_pointer = n.asm.sqlite3_bind_pointer).apply(
          null,
          arguments,
        );
      }),
      (n._sqlite3_bind_text = function () {
        return (n._sqlite3_bind_text = n.asm.sqlite3_bind_text).apply(
          null,
          arguments,
        );
      }),
      (n._sqlite3_bind_parameter_count = function () {
        return (n._sqlite3_bind_parameter_count =
          n.asm.sqlite3_bind_parameter_count).apply(null, arguments);
      }),
      (n._sqlite3_bind_parameter_index = function () {
        return (n._sqlite3_bind_parameter_index =
          n.asm.sqlite3_bind_parameter_index).apply(null, arguments);
      }),
      (n._sqlite3_db_handle = function () {
        return (n._sqlite3_db_handle = n.asm.sqlite3_db_handle).apply(
          null,
          arguments,
        );
      }),
      (n._sqlite3_stmt_readonly = function () {
        return (n._sqlite3_stmt_readonly = n.asm.sqlite3_stmt_readonly).apply(
          null,
          arguments,
        );
      }),
      (n._sqlite3_stmt_isexplain = function () {
        return (n._sqlite3_stmt_isexplain = n.asm.sqlite3_stmt_isexplain).apply(
          null,
          arguments,
        );
      }),
      (n._sqlite3_stmt_status = function () {
        return (n._sqlite3_stmt_status = n.asm.sqlite3_stmt_status).apply(
          null,
          arguments,
        );
      }),
      (n._sqlite3_sql = function () {
        return (n._sqlite3_sql = n.asm.sqlite3_sql).apply(null, arguments);
      }),
      (n._sqlite3_expanded_sql = function () {
        return (n._sqlite3_expanded_sql = n.asm.sqlite3_expanded_sql).apply(
          null,
          arguments,
        );
      }),
      (n._sqlite3_preupdate_old = function () {
        return (n._sqlite3_preupdate_old = n.asm.sqlite3_preupdate_old).apply(
          null,
          arguments,
        );
      }),
      (n._sqlite3_preupdate_count = function () {
        return (n._sqlite3_preupdate_count =
          n.asm.sqlite3_preupdate_count).apply(null, arguments);
      }),
      (n._sqlite3_preupdate_depth = function () {
        return (n._sqlite3_preupdate_depth =
          n.asm.sqlite3_preupdate_depth).apply(null, arguments);
      }),
      (n._sqlite3_preupdate_blobwrite = function () {
        return (n._sqlite3_preupdate_blobwrite =
          n.asm.sqlite3_preupdate_blobwrite).apply(null, arguments);
      }),
      (n._sqlite3_preupdate_new = function () {
        return (n._sqlite3_preupdate_new = n.asm.sqlite3_preupdate_new).apply(
          null,
          arguments,
        );
      }),
      (n._sqlite3_value_numeric_type = function () {
        return (n._sqlite3_value_numeric_type =
          n.asm.sqlite3_value_numeric_type).apply(null, arguments);
      }),
      (n._sqlite3_set_authorizer = function () {
        return (n._sqlite3_set_authorizer = n.asm.sqlite3_set_authorizer).apply(
          null,
          arguments,
        );
      }),
      (n._sqlite3_strglob = function () {
        return (n._sqlite3_strglob = n.asm.sqlite3_strglob).apply(
          null,
          arguments,
        );
      }),
      (n._sqlite3_strlike = function () {
        return (n._sqlite3_strlike = n.asm.sqlite3_strlike).apply(
          null,
          arguments,
        );
      }),
      (n._sqlite3_auto_extension = function () {
        return (n._sqlite3_auto_extension = n.asm.sqlite3_auto_extension).apply(
          null,
          arguments,
        );
      }),
      (n._sqlite3_cancel_auto_extension = function () {
        return (n._sqlite3_cancel_auto_extension =
          n.asm.sqlite3_cancel_auto_extension).apply(null, arguments);
      }),
      (n._sqlite3_reset_auto_extension = function () {
        return (n._sqlite3_reset_auto_extension =
          n.asm.sqlite3_reset_auto_extension).apply(null, arguments);
      }),
      (n._sqlite3_prepare_v3 = function () {
        return (n._sqlite3_prepare_v3 = n.asm.sqlite3_prepare_v3).apply(
          null,
          arguments,
        );
      }),
      (n._sqlite3_create_module = function () {
        return (n._sqlite3_create_module = n.asm.sqlite3_create_module).apply(
          null,
          arguments,
        );
      }),
      (n._sqlite3_create_module_v2 = function () {
        return (n._sqlite3_create_module_v2 =
          n.asm.sqlite3_create_module_v2).apply(null, arguments);
      }),
      (n._sqlite3_drop_modules = function () {
        return (n._sqlite3_drop_modules = n.asm.sqlite3_drop_modules).apply(
          null,
          arguments,
        );
      }),
      (n._sqlite3_declare_vtab = function () {
        return (n._sqlite3_declare_vtab = n.asm.sqlite3_declare_vtab).apply(
          null,
          arguments,
        );
      }),
      (n._sqlite3_vtab_on_conflict = function () {
        return (n._sqlite3_vtab_on_conflict =
          n.asm.sqlite3_vtab_on_conflict).apply(null, arguments);
      }),
      (n._sqlite3_vtab_collation = function () {
        return (n._sqlite3_vtab_collation = n.asm.sqlite3_vtab_collation).apply(
          null,
          arguments,
        );
      }),
      (n._sqlite3_vtab_in = function () {
        return (n._sqlite3_vtab_in = n.asm.sqlite3_vtab_in).apply(
          null,
          arguments,
        );
      }),
      (n._sqlite3_vtab_rhs_value = function () {
        return (n._sqlite3_vtab_rhs_value = n.asm.sqlite3_vtab_rhs_value).apply(
          null,
          arguments,
        );
      }),
      (n._sqlite3_vtab_distinct = function () {
        return (n._sqlite3_vtab_distinct = n.asm.sqlite3_vtab_distinct).apply(
          null,
          arguments,
        );
      }),
      (n._sqlite3_keyword_name = function () {
        return (n._sqlite3_keyword_name = n.asm.sqlite3_keyword_name).apply(
          null,
          arguments,
        );
      }),
      (n._sqlite3_keyword_count = function () {
        return (n._sqlite3_keyword_count = n.asm.sqlite3_keyword_count).apply(
          null,
          arguments,
        );
      }),
      (n._sqlite3_keyword_check = function () {
        return (n._sqlite3_keyword_check = n.asm.sqlite3_keyword_check).apply(
          null,
          arguments,
        );
      }),
      (n._sqlite3_complete = function () {
        return (n._sqlite3_complete = n.asm.sqlite3_complete).apply(
          null,
          arguments,
        );
      }),
      (n._sqlite3_libversion = function () {
        return (n._sqlite3_libversion = n.asm.sqlite3_libversion).apply(
          null,
          arguments,
        );
      }),
      (n._sqlite3_libversion_number = function () {
        return (n._sqlite3_libversion_number =
          n.asm.sqlite3_libversion_number).apply(null, arguments);
      }),
      (n._sqlite3_shutdown = function () {
        return (n._sqlite3_shutdown = n.asm.sqlite3_shutdown).apply(
          null,
          arguments,
        );
      }),
      (n._sqlite3_last_insert_rowid = function () {
        return (n._sqlite3_last_insert_rowid =
          n.asm.sqlite3_last_insert_rowid).apply(null, arguments);
      }),
      (n._sqlite3_set_last_insert_rowid = function () {
        return (n._sqlite3_set_last_insert_rowid =
          n.asm.sqlite3_set_last_insert_rowid).apply(null, arguments);
      }),
      (n._sqlite3_changes64 = function () {
        return (n._sqlite3_changes64 = n.asm.sqlite3_changes64).apply(
          null,
          arguments,
        );
      }),
      (n._sqlite3_changes = function () {
        return (n._sqlite3_changes = n.asm.sqlite3_changes).apply(
          null,
          arguments,
        );
      }),
      (n._sqlite3_total_changes64 = function () {
        return (n._sqlite3_total_changes64 =
          n.asm.sqlite3_total_changes64).apply(null, arguments);
      }),
      (n._sqlite3_total_changes = function () {
        return (n._sqlite3_total_changes = n.asm.sqlite3_total_changes).apply(
          null,
          arguments,
        );
      }),
      (n._sqlite3_txn_state = function () {
        return (n._sqlite3_txn_state = n.asm.sqlite3_txn_state).apply(
          null,
          arguments,
        );
      }),
      (n._sqlite3_close_v2 = function () {
        return (n._sqlite3_close_v2 = n.asm.sqlite3_close_v2).apply(
          null,
          arguments,
        );
      }),
      (n._sqlite3_busy_handler = function () {
        return (n._sqlite3_busy_handler = n.asm.sqlite3_busy_handler).apply(
          null,
          arguments,
        );
      }),
      (n._sqlite3_progress_handler = function () {
        return (n._sqlite3_progress_handler =
          n.asm.sqlite3_progress_handler).apply(null, arguments);
      }),
      (n._sqlite3_busy_timeout = function () {
        return (n._sqlite3_busy_timeout = n.asm.sqlite3_busy_timeout).apply(
          null,
          arguments,
        );
      }),
      (n._sqlite3_create_function = function () {
        return (n._sqlite3_create_function =
          n.asm.sqlite3_create_function).apply(null, arguments);
      }),
      (n._sqlite3_create_function_v2 = function () {
        return (n._sqlite3_create_function_v2 =
          n.asm.sqlite3_create_function_v2).apply(null, arguments);
      }),
      (n._sqlite3_create_window_function = function () {
        return (n._sqlite3_create_window_function =
          n.asm.sqlite3_create_window_function).apply(null, arguments);
      }),
      (n._sqlite3_overload_function = function () {
        return (n._sqlite3_overload_function =
          n.asm.sqlite3_overload_function).apply(null, arguments);
      }),
      (n._sqlite3_trace_v2 = function () {
        return (n._sqlite3_trace_v2 = n.asm.sqlite3_trace_v2).apply(
          null,
          arguments,
        );
      }),
      (n._sqlite3_commit_hook = function () {
        return (n._sqlite3_commit_hook = n.asm.sqlite3_commit_hook).apply(
          null,
          arguments,
        );
      }),
      (n._sqlite3_update_hook = function () {
        return (n._sqlite3_update_hook = n.asm.sqlite3_update_hook).apply(
          null,
          arguments,
        );
      }),
      (n._sqlite3_rollback_hook = function () {
        return (n._sqlite3_rollback_hook = n.asm.sqlite3_rollback_hook).apply(
          null,
          arguments,
        );
      }),
      (n._sqlite3_preupdate_hook = function () {
        return (n._sqlite3_preupdate_hook = n.asm.sqlite3_preupdate_hook).apply(
          null,
          arguments,
        );
      }),
      (n._sqlite3_error_offset = function () {
        return (n._sqlite3_error_offset = n.asm.sqlite3_error_offset).apply(
          null,
          arguments,
        );
      }),
      (n._sqlite3_errcode = function () {
        return (n._sqlite3_errcode = n.asm.sqlite3_errcode).apply(
          null,
          arguments,
        );
      }),
      (n._sqlite3_extended_errcode = function () {
        return (n._sqlite3_extended_errcode =
          n.asm.sqlite3_extended_errcode).apply(null, arguments);
      }),
      (n._sqlite3_errstr = function () {
        return (n._sqlite3_errstr = n.asm.sqlite3_errstr).apply(
          null,
          arguments,
        );
      }),
      (n._sqlite3_limit = function () {
        return (n._sqlite3_limit = n.asm.sqlite3_limit).apply(null, arguments);
      }),
      (n._sqlite3_open = function () {
        return (n._sqlite3_open = n.asm.sqlite3_open).apply(null, arguments);
      }),
      (n._sqlite3_open_v2 = function () {
        return (n._sqlite3_open_v2 = n.asm.sqlite3_open_v2).apply(
          null,
          arguments,
        );
      }),
      (n._sqlite3_create_collation = function () {
        return (n._sqlite3_create_collation =
          n.asm.sqlite3_create_collation).apply(null, arguments);
      }),
      (n._sqlite3_create_collation_v2 = function () {
        return (n._sqlite3_create_collation_v2 =
          n.asm.sqlite3_create_collation_v2).apply(null, arguments);
      }),
      (n._sqlite3_collation_needed = function () {
        return (n._sqlite3_collation_needed =
          n.asm.sqlite3_collation_needed).apply(null, arguments);
      }),
      (n._sqlite3_get_autocommit = function () {
        return (n._sqlite3_get_autocommit = n.asm.sqlite3_get_autocommit).apply(
          null,
          arguments,
        );
      }),
      (n._sqlite3_table_column_metadata = function () {
        return (n._sqlite3_table_column_metadata =
          n.asm.sqlite3_table_column_metadata).apply(null, arguments);
      }),
      (n._sqlite3_extended_result_codes = function () {
        return (n._sqlite3_extended_result_codes =
          n.asm.sqlite3_extended_result_codes).apply(null, arguments);
      }),
      (n._sqlite3_uri_key = function () {
        return (n._sqlite3_uri_key = n.asm.sqlite3_uri_key).apply(
          null,
          arguments,
        );
      }),
      (n._sqlite3_uri_int64 = function () {
        return (n._sqlite3_uri_int64 = n.asm.sqlite3_uri_int64).apply(
          null,
          arguments,
        );
      }),
      (n._sqlite3_db_name = function () {
        return (n._sqlite3_db_name = n.asm.sqlite3_db_name).apply(
          null,
          arguments,
        );
      }),
      (n._sqlite3_db_filename = function () {
        return (n._sqlite3_db_filename = n.asm.sqlite3_db_filename).apply(
          null,
          arguments,
        );
      }),
      (n._sqlite3_compileoption_used = function () {
        return (n._sqlite3_compileoption_used =
          n.asm.sqlite3_compileoption_used).apply(null, arguments);
      }),
      (n._sqlite3_compileoption_get = function () {
        return (n._sqlite3_compileoption_get =
          n.asm.sqlite3_compileoption_get).apply(null, arguments);
      }),
      (n._sqlite3session_diff = function () {
        return (n._sqlite3session_diff = n.asm.sqlite3session_diff).apply(
          null,
          arguments,
        );
      }),
      (n._sqlite3session_attach = function () {
        return (n._sqlite3session_attach = n.asm.sqlite3session_attach).apply(
          null,
          arguments,
        );
      }),
      (n._sqlite3session_create = function () {
        return (n._sqlite3session_create = n.asm.sqlite3session_create).apply(
          null,
          arguments,
        );
      }),
      (n._sqlite3session_delete = function () {
        return (n._sqlite3session_delete = n.asm.sqlite3session_delete).apply(
          null,
          arguments,
        );
      }),
      (n._sqlite3session_table_filter = function () {
        return (n._sqlite3session_table_filter =
          n.asm.sqlite3session_table_filter).apply(null, arguments);
      }),
      (n._sqlite3session_changeset = function () {
        return (n._sqlite3session_changeset =
          n.asm.sqlite3session_changeset).apply(null, arguments);
      }),
      (n._sqlite3session_changeset_strm = function () {
        return (n._sqlite3session_changeset_strm =
          n.asm.sqlite3session_changeset_strm).apply(null, arguments);
      }),
      (n._sqlite3session_patchset_strm = function () {
        return (n._sqlite3session_patchset_strm =
          n.asm.sqlite3session_patchset_strm).apply(null, arguments);
      }),
      (n._sqlite3session_patchset = function () {
        return (n._sqlite3session_patchset =
          n.asm.sqlite3session_patchset).apply(null, arguments);
      }),
      (n._sqlite3session_enable = function () {
        return (n._sqlite3session_enable = n.asm.sqlite3session_enable).apply(
          null,
          arguments,
        );
      }),
      (n._sqlite3session_indirect = function () {
        return (n._sqlite3session_indirect =
          n.asm.sqlite3session_indirect).apply(null, arguments);
      }),
      (n._sqlite3session_isempty = function () {
        return (n._sqlite3session_isempty = n.asm.sqlite3session_isempty).apply(
          null,
          arguments,
        );
      }),
      (n._sqlite3session_memory_used = function () {
        return (n._sqlite3session_memory_used =
          n.asm.sqlite3session_memory_used).apply(null, arguments);
      }),
      (n._sqlite3session_object_config = function () {
        return (n._sqlite3session_object_config =
          n.asm.sqlite3session_object_config).apply(null, arguments);
      }),
      (n._sqlite3session_changeset_size = function () {
        return (n._sqlite3session_changeset_size =
          n.asm.sqlite3session_changeset_size).apply(null, arguments);
      }),
      (n._sqlite3changeset_start = function () {
        return (n._sqlite3changeset_start = n.asm.sqlite3changeset_start).apply(
          null,
          arguments,
        );
      }),
      (n._sqlite3changeset_start_v2 = function () {
        return (n._sqlite3changeset_start_v2 =
          n.asm.sqlite3changeset_start_v2).apply(null, arguments);
      }),
      (n._sqlite3changeset_start_strm = function () {
        return (n._sqlite3changeset_start_strm =
          n.asm.sqlite3changeset_start_strm).apply(null, arguments);
      }),
      (n._sqlite3changeset_start_v2_strm = function () {
        return (n._sqlite3changeset_start_v2_strm =
          n.asm.sqlite3changeset_start_v2_strm).apply(null, arguments);
      }),
      (n._sqlite3changeset_next = function () {
        return (n._sqlite3changeset_next = n.asm.sqlite3changeset_next).apply(
          null,
          arguments,
        );
      }),
      (n._sqlite3changeset_op = function () {
        return (n._sqlite3changeset_op = n.asm.sqlite3changeset_op).apply(
          null,
          arguments,
        );
      }),
      (n._sqlite3changeset_pk = function () {
        return (n._sqlite3changeset_pk = n.asm.sqlite3changeset_pk).apply(
          null,
          arguments,
        );
      }),
      (n._sqlite3changeset_old = function () {
        return (n._sqlite3changeset_old = n.asm.sqlite3changeset_old).apply(
          null,
          arguments,
        );
      }),
      (n._sqlite3changeset_new = function () {
        return (n._sqlite3changeset_new = n.asm.sqlite3changeset_new).apply(
          null,
          arguments,
        );
      }),
      (n._sqlite3changeset_conflict = function () {
        return (n._sqlite3changeset_conflict =
          n.asm.sqlite3changeset_conflict).apply(null, arguments);
      }),
      (n._sqlite3changeset_fk_conflicts = function () {
        return (n._sqlite3changeset_fk_conflicts =
          n.asm.sqlite3changeset_fk_conflicts).apply(null, arguments);
      }),
      (n._sqlite3changeset_finalize = function () {
        return (n._sqlite3changeset_finalize =
          n.asm.sqlite3changeset_finalize).apply(null, arguments);
      }),
      (n._sqlite3changeset_invert = function () {
        return (n._sqlite3changeset_invert =
          n.asm.sqlite3changeset_invert).apply(null, arguments);
      }),
      (n._sqlite3changeset_invert_strm = function () {
        return (n._sqlite3changeset_invert_strm =
          n.asm.sqlite3changeset_invert_strm).apply(null, arguments);
      }),
      (n._sqlite3changeset_apply_v2 = function () {
        return (n._sqlite3changeset_apply_v2 =
          n.asm.sqlite3changeset_apply_v2).apply(null, arguments);
      }),
      (n._sqlite3changeset_apply = function () {
        return (n._sqlite3changeset_apply = n.asm.sqlite3changeset_apply).apply(
          null,
          arguments,
        );
      }),
      (n._sqlite3changeset_apply_v2_strm = function () {
        return (n._sqlite3changeset_apply_v2_strm =
          n.asm.sqlite3changeset_apply_v2_strm).apply(null, arguments);
      }),
      (n._sqlite3changeset_apply_strm = function () {
        return (n._sqlite3changeset_apply_strm =
          n.asm.sqlite3changeset_apply_strm).apply(null, arguments);
      }),
      (n._sqlite3changegroup_new = function () {
        return (n._sqlite3changegroup_new = n.asm.sqlite3changegroup_new).apply(
          null,
          arguments,
        );
      }),
      (n._sqlite3changegroup_add = function () {
        return (n._sqlite3changegroup_add = n.asm.sqlite3changegroup_add).apply(
          null,
          arguments,
        );
      }),
      (n._sqlite3changegroup_output = function () {
        return (n._sqlite3changegroup_output =
          n.asm.sqlite3changegroup_output).apply(null, arguments);
      }),
      (n._sqlite3changegroup_add_strm = function () {
        return (n._sqlite3changegroup_add_strm =
          n.asm.sqlite3changegroup_add_strm).apply(null, arguments);
      }),
      (n._sqlite3changegroup_output_strm = function () {
        return (n._sqlite3changegroup_output_strm =
          n.asm.sqlite3changegroup_output_strm).apply(null, arguments);
      }),
      (n._sqlite3changegroup_delete = function () {
        return (n._sqlite3changegroup_delete =
          n.asm.sqlite3changegroup_delete).apply(null, arguments);
      }),
      (n._sqlite3changeset_concat = function () {
        return (n._sqlite3changeset_concat =
          n.asm.sqlite3changeset_concat).apply(null, arguments);
      }),
      (n._sqlite3changeset_concat_strm = function () {
        return (n._sqlite3changeset_concat_strm =
          n.asm.sqlite3changeset_concat_strm).apply(null, arguments);
      }),
      (n._sqlite3session_config = function () {
        return (n._sqlite3session_config = n.asm.sqlite3session_config).apply(
          null,
          arguments,
        );
      }),
      (n._sqlite3_sourceid = function () {
        return (n._sqlite3_sourceid = n.asm.sqlite3_sourceid).apply(
          null,
          arguments,
        );
      }),
      (n._sqlite3__wasm_pstack_ptr = function () {
        return (n._sqlite3__wasm_pstack_ptr =
          n.asm.sqlite3__wasm_pstack_ptr).apply(null, arguments);
      }),
      (n._sqlite3__wasm_pstack_restore = function () {
        return (n._sqlite3__wasm_pstack_restore =
          n.asm.sqlite3__wasm_pstack_restore).apply(null, arguments);
      }),
      (n._sqlite3__wasm_pstack_alloc = function () {
        return (n._sqlite3__wasm_pstack_alloc =
          n.asm.sqlite3__wasm_pstack_alloc).apply(null, arguments);
      }),
      (n._sqlite3__wasm_pstack_remaining = function () {
        return (n._sqlite3__wasm_pstack_remaining =
          n.asm.sqlite3__wasm_pstack_remaining).apply(null, arguments);
      }),
      (n._sqlite3__wasm_pstack_quota = function () {
        return (n._sqlite3__wasm_pstack_quota =
          n.asm.sqlite3__wasm_pstack_quota).apply(null, arguments);
      }),
      (n._sqlite3__wasm_db_error = function () {
        return (n._sqlite3__wasm_db_error = n.asm.sqlite3__wasm_db_error).apply(
          null,
          arguments,
        );
      }),
      (n._sqlite3__wasm_test_struct = function () {
        return (n._sqlite3__wasm_test_struct =
          n.asm.sqlite3__wasm_test_struct).apply(null, arguments);
      }),
      (n._sqlite3__wasm_enum_json = function () {
        return (n._sqlite3__wasm_enum_json =
          n.asm.sqlite3__wasm_enum_json).apply(null, arguments);
      }),
      (n._sqlite3__wasm_vfs_unlink = function () {
        return (n._sqlite3__wasm_vfs_unlink =
          n.asm.sqlite3__wasm_vfs_unlink).apply(null, arguments);
      }),
      (n._sqlite3__wasm_db_vfs = function () {
        return (n._sqlite3__wasm_db_vfs = n.asm.sqlite3__wasm_db_vfs).apply(
          null,
          arguments,
        );
      }),
      (n._sqlite3__wasm_db_reset = function () {
        return (n._sqlite3__wasm_db_reset = n.asm.sqlite3__wasm_db_reset).apply(
          null,
          arguments,
        );
      }),
      (n._sqlite3__wasm_db_export_chunked = function () {
        return (n._sqlite3__wasm_db_export_chunked =
          n.asm.sqlite3__wasm_db_export_chunked).apply(null, arguments);
      }),
      (n._sqlite3__wasm_db_serialize = function () {
        return (n._sqlite3__wasm_db_serialize =
          n.asm.sqlite3__wasm_db_serialize).apply(null, arguments);
      }),
      (n._sqlite3__wasm_vfs_create_file = function () {
        return (n._sqlite3__wasm_vfs_create_file =
          n.asm.sqlite3__wasm_vfs_create_file).apply(null, arguments);
      }),
      (n._sqlite3__wasm_posix_create_file = function () {
        return (n._sqlite3__wasm_posix_create_file =
          n.asm.sqlite3__wasm_posix_create_file).apply(null, arguments);
      }),
      (n._sqlite3__wasm_kvvfsMakeKeyOnPstack = function () {
        return (n._sqlite3__wasm_kvvfsMakeKeyOnPstack =
          n.asm.sqlite3__wasm_kvvfsMakeKeyOnPstack).apply(null, arguments);
      }),
      (n._sqlite3__wasm_kvvfs_methods = function () {
        return (n._sqlite3__wasm_kvvfs_methods =
          n.asm.sqlite3__wasm_kvvfs_methods).apply(null, arguments);
      }),
      (n._sqlite3__wasm_vtab_config = function () {
        return (n._sqlite3__wasm_vtab_config =
          n.asm.sqlite3__wasm_vtab_config).apply(null, arguments);
      }),
      (n._sqlite3__wasm_db_config_ip = function () {
        return (n._sqlite3__wasm_db_config_ip =
          n.asm.sqlite3__wasm_db_config_ip).apply(null, arguments);
      }),
      (n._sqlite3__wasm_db_config_pii = function () {
        return (n._sqlite3__wasm_db_config_pii =
          n.asm.sqlite3__wasm_db_config_pii).apply(null, arguments);
      }),
      (n._sqlite3__wasm_db_config_s = function () {
        return (n._sqlite3__wasm_db_config_s =
          n.asm.sqlite3__wasm_db_config_s).apply(null, arguments);
      }),
      (n._sqlite3__wasm_config_i = function () {
        return (n._sqlite3__wasm_config_i = n.asm.sqlite3__wasm_config_i).apply(
          null,
          arguments,
        );
      }),
      (n._sqlite3__wasm_config_ii = function () {
        return (n._sqlite3__wasm_config_ii =
          n.asm.sqlite3__wasm_config_ii).apply(null, arguments);
      }),
      (n._sqlite3__wasm_config_j = function () {
        return (n._sqlite3__wasm_config_j = n.asm.sqlite3__wasm_config_j).apply(
          null,
          arguments,
        );
      }),
      (n._sqlite3__wasm_qfmt_token = function () {
        return (n._sqlite3__wasm_qfmt_token =
          n.asm.sqlite3__wasm_qfmt_token).apply(null, arguments);
      }),
      (n._sqlite3__wasm_init_wasmfs = function () {
        return (n._sqlite3__wasm_init_wasmfs =
          n.asm.sqlite3__wasm_init_wasmfs).apply(null, arguments);
      }),
      (n._sqlite3__wasm_test_intptr = function () {
        return (n._sqlite3__wasm_test_intptr =
          n.asm.sqlite3__wasm_test_intptr).apply(null, arguments);
      }),
      (n._sqlite3__wasm_test_voidptr = function () {
        return (n._sqlite3__wasm_test_voidptr =
          n.asm.sqlite3__wasm_test_voidptr).apply(null, arguments);
      }),
      (n._sqlite3__wasm_test_int64_max = function () {
        return (n._sqlite3__wasm_test_int64_max =
          n.asm.sqlite3__wasm_test_int64_max).apply(null, arguments);
      }),
      (n._sqlite3__wasm_test_int64_min = function () {
        return (n._sqlite3__wasm_test_int64_min =
          n.asm.sqlite3__wasm_test_int64_min).apply(null, arguments);
      }),
      (n._sqlite3__wasm_test_int64_times2 = function () {
        return (n._sqlite3__wasm_test_int64_times2 =
          n.asm.sqlite3__wasm_test_int64_times2).apply(null, arguments);
      }),
      (n._sqlite3__wasm_test_int64_minmax = function () {
        return (n._sqlite3__wasm_test_int64_minmax =
          n.asm.sqlite3__wasm_test_int64_minmax).apply(null, arguments);
      }),
      (n._sqlite3__wasm_test_int64ptr = function () {
        return (n._sqlite3__wasm_test_int64ptr =
          n.asm.sqlite3__wasm_test_int64ptr).apply(null, arguments);
      }),
      (n._sqlite3__wasm_test_stack_overflow = function () {
        return (n._sqlite3__wasm_test_stack_overflow =
          n.asm.sqlite3__wasm_test_stack_overflow).apply(null, arguments);
      }),
      (n._sqlite3__wasm_test_str_hello = function () {
        return (n._sqlite3__wasm_test_str_hello =
          n.asm.sqlite3__wasm_test_str_hello).apply(null, arguments);
      }),
      (n._sqlite3__wasm_SQLTester_strglob = function () {
        return (n._sqlite3__wasm_SQLTester_strglob =
          n.asm.sqlite3__wasm_SQLTester_strglob).apply(null, arguments);
      });
    var Tl = (n._malloc = function () {
      return (Tl = n._malloc = n.asm.malloc).apply(null, arguments);
    });
    (n._free = function () {
      return (n._free = n.asm.free).apply(null, arguments);
    }),
      (n._realloc = function () {
        return (n._realloc = n.asm.realloc).apply(null, arguments);
      });
    var Cl = (n._emscripten_builtin_memalign = function () {
      return (Cl = n._emscripten_builtin_memalign =
        n.asm.emscripten_builtin_memalign).apply(null, arguments);
    });
    (n.stackSave = function () {
      return (n.stackSave = n.asm.stackSave).apply(null, arguments);
    }),
      (n.stackRestore = function () {
        return (n.stackRestore = n.asm.stackRestore).apply(null, arguments);
      }),
      (n.stackAlloc = function () {
        return (n.stackAlloc = n.asm.stackAlloc).apply(null, arguments);
      }),
      (n.wasmMemory = H);
    var ko;
    Zn = function u() {
      ko || Rs(), ko || (Zn = u);
    };
    function Rs(u) {
      if (Nn > 0 || (Xe(), Nn > 0)) return;
      function a() {
        ko ||
          ((ko = !0),
          (n.calledRun = !0),
          !ie &&
            (_t(),
            i(n),
            n.onRuntimeInitialized && n.onRuntimeInitialized(),
            pr()));
      }
      n.setStatus
        ? (n.setStatus('Running...'),
          setTimeout(function () {
            setTimeout(function () {
              n.setStatus('');
            }, 1),
              a();
          }, 1))
        : a();
    }
    if (n.preInit)
      for (
        typeof n.preInit == 'function' && (n.preInit = [n.preInit]);
        n.preInit.length > 0;
      )
        n.preInit.pop()();
    return (
      Rs(),
      n.postRun || (n.postRun = []),
      n.postRun.push(function (u) {
        if (
          ((globalThis.sqlite3ApiBootstrap = function a(
            d = globalThis.sqlite3ApiConfig || a.defaultConfig,
          ) {
            if (a.sqlite3)
              return (
                (a.sqlite3.config || console).warn(
                  'sqlite3ApiBootstrap() called multiple times.',
                  'Config and external initializers are ignored on calls after the first.',
                ),
                a.sqlite3
              );
            const f = Object.assign(
              Object.create(null),
              {
                exports: void 0,
                memory: void 0,
                bigIntEnabled:
                  typeof u < 'u' && u.HEAPU64 ? !0 : !!globalThis.BigInt64Array,
                debug: console.debug.bind(console),
                warn: console.warn.bind(console),
                error: console.error.bind(console),
                log: console.log.bind(console),
                wasmfsOpfsDir: '/opfs',
                useStdAlloc: !1,
              },
              d || {},
            );
            Object.assign(
              f,
              {
                allocExportName: f.useStdAlloc ? 'malloc' : 'sqlite3_malloc',
                deallocExportName: f.useStdAlloc ? 'free' : 'sqlite3_free',
                reallocExportName: f.useStdAlloc
                  ? 'realloc'
                  : 'sqlite3_realloc',
              },
              f,
            ),
              ['exports', 'memory', 'wasmfsOpfsDir'].forEach((b) => {
                typeof f[b] == 'function' && (f[b] = f[b]());
              }),
              delete globalThis.sqlite3ApiConfig,
              delete a.defaultConfig;
            const p = Object.create(null),
              w = Object.create(null),
              O = (b) =>
                (p.sqlite3_js_rc_str && p.sqlite3_js_rc_str(b)) ||
                'Unknown result code #' + b,
              M = (b) => typeof b == 'number' && b === (b | 0);
            class ne extends Error {
              constructor(...k) {
                let L;
                if (k.length)
                  if (M(k[0]))
                    if (((L = k[0]), k.length === 1)) super(O(k[0]));
                    else {
                      const F = O(L);
                      typeof k[1] == 'object'
                        ? super(F, k[1])
                        : ((k[0] = F + ':'), super(k.join(' ')));
                    }
                  else
                    k.length === 2 && typeof k[1] == 'object'
                      ? super(...k)
                      : super(k.join(' '));
                (this.resultCode = L || p.SQLITE_ERROR),
                  (this.name = 'SQLite3Error');
              }
            }
            ne.toss = (...b) => {
              throw new ne(...b);
            };
            const re = ne.toss;
            f.wasmfsOpfsDir &&
              !/^\/[^/]+$/.test(f.wasmfsOpfsDir) &&
              re(
                "config.wasmfsOpfsDir must be falsy or in the form '/dir-name'.",
              );
            const pe = (b) =>
                typeof b != 'bigint' &&
                b === (b | 0) &&
                b <= 2147483647 &&
                b >= -2147483648,
              ye = function b(k) {
                return (
                  b._max ||
                    ((b._max = BigInt('0x7fffffffffffffff')),
                    (b._min = ~b._max)),
                  k >= b._min && k <= b._max
                );
              },
              X = (b) => b >= -0x7fffffffn - 1n && b <= 0x7fffffffn,
              Q = function b(k) {
                return (
                  b._min ||
                    ((b._min = Number.MIN_SAFE_INTEGER),
                    (b._max = Number.MAX_SAFE_INTEGER)),
                  k >= b._min && k <= b._max
                );
              },
              ue = (b) =>
                b && b.constructor && pe(b.constructor.BYTES_PER_ELEMENT)
                  ? b
                  : !1,
              N =
                typeof SharedArrayBuffer > 'u'
                  ? function () {}
                  : SharedArrayBuffer,
              B = (b) => b.buffer instanceof N,
              J = (b, k, L) => (B(b) ? b.slice(k, L) : b.subarray(k, L)),
              Z = (b) =>
                b &&
                (b instanceof Uint8Array ||
                  b instanceof Int8Array ||
                  b instanceof ArrayBuffer),
              se = (b) =>
                b &&
                (b instanceof Uint8Array ||
                  b instanceof Int8Array ||
                  b instanceof ArrayBuffer),
              W = (b) =>
                Z(b) || re('Value is not of a supported TypedArray type.'),
              ce = new TextDecoder('utf-8'),
              _e = function (b, k, L) {
                return ce.decode(J(b, k, L));
              },
              E = function (b) {
                return se(b)
                  ? _e(b instanceof ArrayBuffer ? new Uint8Array(b) : b)
                  : Array.isArray(b)
                    ? b.join('')
                    : (w.isPtr(b) && (b = w.cstrToJs(b)), b);
              };
            class D extends Error {
              constructor(...k) {
                k.length === 2 && typeof k[1] == 'object'
                  ? super(...k)
                  : k.length
                    ? super(k.join(' '))
                    : super('Allocation failed.'),
                  (this.resultCode = p.SQLITE_NOMEM),
                  (this.name = 'WasmAllocError');
              }
            }
            (D.toss = (...b) => {
              throw new D(...b);
            }),
              Object.assign(p, {
                sqlite3_bind_blob: void 0,
                sqlite3_bind_text: void 0,
                sqlite3_create_function_v2: (
                  b,
                  k,
                  L,
                  F,
                  oe,
                  be,
                  Ce,
                  ze,
                  Re,
                ) => {},
                sqlite3_create_function: (b, k, L, F, oe, be, Ce, ze) => {},
                sqlite3_create_window_function: (
                  b,
                  k,
                  L,
                  F,
                  oe,
                  be,
                  Ce,
                  ze,
                  Re,
                  Le,
                ) => {},
                sqlite3_prepare_v3: (b, k, L, F, oe, be) => {},
                sqlite3_prepare_v2: (b, k, L, F, oe) => {},
                sqlite3_exec: (b, k, L, F, oe) => {},
                sqlite3_randomness: (b, k) => {},
              });
            const g = {
              affirmBindableTypedArray: W,
              flexibleString: E,
              bigIntFits32: X,
              bigIntFits64: ye,
              bigIntFitsDouble: Q,
              isBindableTypedArray: Z,
              isInt32: pe,
              isSQLableTypedArray: se,
              isTypedArray: ue,
              typedArrayToString: _e,
              isUIThread: () =>
                globalThis.window === globalThis && !!globalThis.document,
              isSharedTypedArray: B,
              toss: function (...b) {
                throw new Error(b.join(' '));
              },
              toss3: re,
              typedArrayPart: J,
              affirmDbHeader: function (b) {
                b instanceof ArrayBuffer && (b = new Uint8Array(b));
                const k = 'SQLite format 3';
                k.length > b.byteLength &&
                  re('Input does not contain an SQLite3 database header.');
                for (let L = 0; L < k.length; ++L)
                  k.charCodeAt(L) !== b[L] &&
                    re('Input does not contain an SQLite3 database header.');
              },
              affirmIsDb: function (b) {
                b instanceof ArrayBuffer && (b = new Uint8Array(b));
                const k = b.byteLength;
                (k < 512 || k % 512 !== 0) &&
                  re('Byte array size', k, 'is invalid for an SQLite3 db.'),
                  g.affirmDbHeader(b);
              },
            };
            Object.assign(w, {
              ptrSizeof: f.wasmPtrSizeof || 4,
              ptrIR: f.wasmPtrIR || 'i32',
              bigIntEnabled: !!f.bigIntEnabled,
              exports:
                f.exports ||
                re('Missing API config.exports (WASM module exports).'),
              memory:
                f.memory ||
                f.exports.memory ||
                re(
                  'API config object requires a WebAssembly.Memory object',
                  'in either config.exports.memory (exported)',
                  'or config.memory (imported).',
                ),
              alloc: void 0,
              realloc: void 0,
              dealloc: void 0,
            }),
              (w.allocFromTypedArray = function (b) {
                b instanceof ArrayBuffer && (b = new Uint8Array(b)), W(b);
                const k = w.alloc(b.byteLength || 1);
                return (
                  w.heapForSize(b.constructor).set(b.byteLength ? b : [0], k), k
                );
              });
            {
              const b = f.allocExportName,
                k = f.deallocExportName,
                L = f.reallocExportName;
              for (const F of [b, k, L])
                w.exports[F] instanceof Function ||
                  re('Missing required exports[', F, '] function.');
              (w.alloc = function F(oe) {
                return (
                  F.impl(oe) || D.toss('Failed to allocate', oe, ' bytes.')
                );
              }),
                (w.alloc.impl = w.exports[b]),
                (w.realloc = function F(oe, be) {
                  const Ce = F.impl(oe, be);
                  return be
                    ? Ce || D.toss('Failed to reallocate', be, ' bytes.')
                    : 0;
                }),
                (w.realloc.impl = w.exports[L]),
                (w.dealloc = w.exports[k]);
            }
            (w.compileOptionUsed = function b(k) {
              if (arguments.length) {
                if (Array.isArray(k)) {
                  const L = {};
                  return (
                    k.forEach((F) => {
                      L[F] = p.sqlite3_compileoption_used(F);
                    }),
                    L
                  );
                } else if (typeof k == 'object')
                  return (
                    Object.keys(k).forEach((L) => {
                      k[L] = p.sqlite3_compileoption_used(L);
                    }),
                    k
                  );
              } else {
                if (b._result) return b._result;
                b._opt ||
                  ((b._rx = /^([^=]+)=(.+)/),
                  (b._rxInt = /^-?\d+$/),
                  (b._opt = function (Ce, ze) {
                    const Re = b._rx.exec(Ce);
                    (ze[0] = Re ? Re[1] : Ce),
                      (ze[1] = Re
                        ? b._rxInt.test(Re[2])
                          ? +Re[2]
                          : Re[2]
                        : !0);
                  }));
                const L = {},
                  F = [0, 0];
                let oe = 0,
                  be;
                for (; (be = p.sqlite3_compileoption_get(oe++)); )
                  b._opt(be, F), (L[F[0]] = F[1]);
                return (b._result = L);
              }
              return typeof k == 'string'
                ? !!p.sqlite3_compileoption_used(k)
                : !1;
            }),
              (w.pstack = Object.assign(Object.create(null), {
                restore: w.exports.sqlite3__wasm_pstack_restore,
                alloc: function (b) {
                  return (
                    typeof b == 'string' &&
                      !(b = w.sizeofIR(b)) &&
                      D.toss(
                        'Invalid value for pstack.alloc(',
                        arguments[0],
                        ')',
                      ),
                    w.exports.sqlite3__wasm_pstack_alloc(b) ||
                      D.toss('Could not allocate', b, 'bytes from the pstack.')
                  );
                },
                allocChunks: function (b, k) {
                  typeof k == 'string' &&
                    !(k = w.sizeofIR(k)) &&
                    D.toss(
                      'Invalid size value for allocChunks(',
                      arguments[1],
                      ')',
                    );
                  const L = w.pstack.alloc(b * k),
                    F = [];
                  let oe = 0,
                    be = 0;
                  for (; oe < b; ++oe, be += k) F.push(L + be);
                  return F;
                },
                allocPtr: (b = 1, k = !0) =>
                  b === 1
                    ? w.pstack.alloc(k ? 8 : w.ptrSizeof)
                    : w.pstack.allocChunks(b, k ? 8 : w.ptrSizeof),
                call: function (b) {
                  const k = w.pstack.pointer;
                  try {
                    return b(A);
                  } finally {
                    w.pstack.restore(k);
                  }
                },
              })),
              Object.defineProperties(w.pstack, {
                pointer: {
                  configurable: !1,
                  iterable: !0,
                  writeable: !1,
                  get: w.exports.sqlite3__wasm_pstack_ptr,
                },
                quota: {
                  configurable: !1,
                  iterable: !0,
                  writeable: !1,
                  get: w.exports.sqlite3__wasm_pstack_quota,
                },
                remaining: {
                  configurable: !1,
                  iterable: !0,
                  writeable: !1,
                  get: w.exports.sqlite3__wasm_pstack_remaining,
                },
              }),
              (p.sqlite3_randomness = (...b) => {
                if (
                  b.length === 1 &&
                  g.isTypedArray(b[0]) &&
                  b[0].BYTES_PER_ELEMENT === 1
                ) {
                  const k = b[0];
                  if (k.byteLength === 0)
                    return w.exports.sqlite3_randomness(0, 0), k;
                  const L = w.pstack.pointer;
                  try {
                    let F = k.byteLength,
                      oe = 0;
                    const be = w.exports.sqlite3_randomness,
                      Ce = w.heap8u(),
                      ze = F < 512 ? F : 512,
                      Re = w.pstack.alloc(ze);
                    do {
                      const Le = F > ze ? ze : F;
                      be(Le, Re),
                        k.set(J(Ce, Re, Re + Le), oe),
                        (F -= Le),
                        (oe += Le);
                    } while (F > 0);
                  } catch (F) {
                    console.error(
                      'Highly unexpected (and ignored!) exception in sqlite3_randomness():',
                      F,
                    );
                  } finally {
                    w.pstack.restore(L);
                  }
                  return k;
                }
                w.exports.sqlite3_randomness(...b);
              });
            let P;
            if (
              ((p.sqlite3_wasmfs_opfs_dir = function () {
                if (P !== void 0) return P;
                const b = f.wasmfsOpfsDir;
                if (
                  !b ||
                  !globalThis.FileSystemHandle ||
                  !globalThis.FileSystemDirectoryHandle ||
                  !globalThis.FileSystemFileHandle
                )
                  return (P = '');
                try {
                  return b &&
                    w.xCallWrapped(
                      'sqlite3__wasm_init_wasmfs',
                      'i32',
                      ['string'],
                      b,
                    ) === 0
                    ? (P = b)
                    : (P = '');
                } catch {
                  return (P = '');
                }
              }),
              (p.sqlite3_wasmfs_filename_is_persistent = function (b) {
                const k = p.sqlite3_wasmfs_opfs_dir();
                return k && b ? b.startsWith(k + '/') : !1;
              }),
              (p.sqlite3_js_db_uses_vfs = function (b, k, L = 0) {
                try {
                  const F = p.sqlite3_vfs_find(k);
                  return F
                    ? b
                      ? F === p.sqlite3_js_db_vfs(b, L)
                        ? F
                        : !1
                      : F === p.sqlite3_vfs_find(0)
                        ? F
                        : !1
                    : !1;
                } catch {
                  return !1;
                }
              }),
              (p.sqlite3_js_vfs_list = function () {
                const b = [];
                let k = p.sqlite3_vfs_find(0);
                for (; k; ) {
                  const L = new p.sqlite3_vfs(k);
                  b.push(w.cstrToJs(L.$zName)), (k = L.$pNext), L.dispose();
                }
                return b;
              }),
              (p.sqlite3_js_db_export = function (b, k = 0) {
                (b = w.xWrap.testConvertArg('sqlite3*', b)),
                  b || re('Invalid sqlite3* argument.'),
                  w.bigIntEnabled || re('BigInt64 support is not enabled.');
                const L = w.scopedAllocPush();
                let F;
                try {
                  const oe = w.scopedAlloc(8 + w.ptrSizeof),
                    be = oe + 8,
                    Ce = k
                      ? w.isPtr(k)
                        ? k
                        : w.scopedAllocCString('' + k)
                      : 0;
                  let ze = w.exports.sqlite3__wasm_db_serialize(
                    b,
                    Ce,
                    be,
                    oe,
                    0,
                  );
                  ze &&
                    re(
                      'Database serialization failed with code',
                      A.capi.sqlite3_js_rc_str(ze),
                    ),
                    (F = w.peekPtr(be));
                  const Re = w.peek(oe, 'i64');
                  return (
                    (ze = Re
                      ? w.heap8u().slice(F, F + Number(Re))
                      : new Uint8Array()),
                    ze
                  );
                } finally {
                  F && w.exports.sqlite3_free(F), w.scopedAllocPop(L);
                }
              }),
              (p.sqlite3_js_db_vfs = (b, k = 0) =>
                g.sqlite3__wasm_db_vfs(b, k)),
              (p.sqlite3_js_aggregate_context = (b, k) =>
                p.sqlite3_aggregate_context(b, k) ||
                (k
                  ? D.toss(
                      'Cannot allocate',
                      k,
                      'bytes for sqlite3_aggregate_context()',
                    )
                  : 0)),
              (p.sqlite3_js_posix_create_file = function (b, k, L) {
                let F;
                k && w.isPtr(k)
                  ? (F = k)
                  : k instanceof ArrayBuffer || k instanceof Uint8Array
                    ? ((F = w.allocFromTypedArray(k)),
                      (arguments.length < 3 || !g.isInt32(L) || L < 0) &&
                        (L = k.byteLength))
                    : ne.toss(
                        'Invalid 2nd argument for sqlite3_js_posix_create_file().',
                      );
                try {
                  (!g.isInt32(L) || L < 0) &&
                    ne.toss(
                      'Invalid 3rd argument for sqlite3_js_posix_create_file().',
                    );
                  const oe = g.sqlite3__wasm_posix_create_file(b, F, L);
                  oe &&
                    ne.toss(
                      'Creation of file failed with sqlite3 result code',
                      p.sqlite3_js_rc_str(oe),
                    );
                } finally {
                  w.dealloc(F);
                }
              }),
              (p.sqlite3_js_vfs_create_file = function (b, k, L, F) {
                f.warn(
                  'sqlite3_js_vfs_create_file() is deprecated and',
                  'should be avoided because it can lead to C-level crashes.',
                  'See its documentation for alternative options.',
                );
                let oe;
                L
                  ? (w.isPtr(L)
                      ? (oe = L)
                      : L instanceof ArrayBuffer && (L = new Uint8Array(L)),
                    L instanceof Uint8Array
                      ? ((oe = w.allocFromTypedArray(L)),
                        (arguments.length < 4 || !g.isInt32(F) || F < 0) &&
                          (F = L.byteLength))
                      : ne.toss(
                          'Invalid 3rd argument type for sqlite3_js_vfs_create_file().',
                        ))
                  : (oe = 0),
                  (!g.isInt32(F) || F < 0) &&
                    (w.dealloc(oe),
                    ne.toss(
                      'Invalid 4th argument for sqlite3_js_vfs_create_file().',
                    ));
                try {
                  const be = g.sqlite3__wasm_vfs_create_file(b, k, oe, F);
                  be &&
                    ne.toss(
                      'Creation of file failed with sqlite3 result code',
                      p.sqlite3_js_rc_str(be),
                    );
                } finally {
                  w.dealloc(oe);
                }
              }),
              (p.sqlite3_js_sql_to_string = (b) => {
                if (typeof b == 'string') return b;
                const k = E(v);
                return k === v ? void 0 : k;
              }),
              g.isUIThread())
            ) {
              const b = function (k) {
                const L = Object.create(null);
                return (
                  (L.prefix = 'kvvfs-' + k),
                  (L.stores = []),
                  (k === 'session' || k === '') &&
                    L.stores.push(globalThis.sessionStorage),
                  (k === 'local' || k === '') &&
                    L.stores.push(globalThis.localStorage),
                  L
                );
              };
              (p.sqlite3_js_kvvfs_clear = function (k = '') {
                let L = 0;
                const F = b(k);
                return (
                  F.stores.forEach((oe) => {
                    const be = [];
                    let Ce;
                    for (Ce = 0; Ce < oe.length; ++Ce) {
                      const ze = oe.key(Ce);
                      ze.startsWith(F.prefix) && be.push(ze);
                    }
                    be.forEach((ze) => oe.removeItem(ze)), (L += be.length);
                  }),
                  L
                );
              }),
                (p.sqlite3_js_kvvfs_size = function (k = '') {
                  let L = 0;
                  const F = b(k);
                  return (
                    F.stores.forEach((oe) => {
                      let be;
                      for (be = 0; be < oe.length; ++be) {
                        const Ce = oe.key(be);
                        Ce.startsWith(F.prefix) &&
                          ((L += Ce.length), (L += oe.getItem(Ce).length));
                      }
                    }),
                    L * 2
                  );
                });
            }
            (p.sqlite3_db_config = function (b, k, ...L) {
              switch (
                (this.s ||
                  ((this.s = w.xWrap('sqlite3__wasm_db_config_s', 'int', [
                    'sqlite3*',
                    'int',
                    'string:static',
                  ])),
                  (this.pii = w.xWrap('sqlite3__wasm_db_config_pii', 'int', [
                    'sqlite3*',
                    'int',
                    '*',
                    'int',
                    'int',
                  ])),
                  (this.ip = w.xWrap('sqlite3__wasm_db_config_ip', 'int', [
                    'sqlite3*',
                    'int',
                    'int',
                    '*',
                  ]))),
                k)
              ) {
                case p.SQLITE_DBCONFIG_ENABLE_FKEY:
                case p.SQLITE_DBCONFIG_ENABLE_TRIGGER:
                case p.SQLITE_DBCONFIG_ENABLE_FTS3_TOKENIZER:
                case p.SQLITE_DBCONFIG_ENABLE_LOAD_EXTENSION:
                case p.SQLITE_DBCONFIG_NO_CKPT_ON_CLOSE:
                case p.SQLITE_DBCONFIG_ENABLE_QPSG:
                case p.SQLITE_DBCONFIG_TRIGGER_EQP:
                case p.SQLITE_DBCONFIG_RESET_DATABASE:
                case p.SQLITE_DBCONFIG_DEFENSIVE:
                case p.SQLITE_DBCONFIG_WRITABLE_SCHEMA:
                case p.SQLITE_DBCONFIG_LEGACY_ALTER_TABLE:
                case p.SQLITE_DBCONFIG_DQS_DML:
                case p.SQLITE_DBCONFIG_DQS_DDL:
                case p.SQLITE_DBCONFIG_ENABLE_VIEW:
                case p.SQLITE_DBCONFIG_LEGACY_FILE_FORMAT:
                case p.SQLITE_DBCONFIG_TRUSTED_SCHEMA:
                case p.SQLITE_DBCONFIG_STMT_SCANSTATUS:
                case p.SQLITE_DBCONFIG_REVERSE_SCANORDER:
                  return this.ip(b, k, L[0], L[1] || 0);
                case p.SQLITE_DBCONFIG_LOOKASIDE:
                  return this.pii(b, k, L[0], L[1], L[2]);
                case p.SQLITE_DBCONFIG_MAINDBNAME:
                  return this.s(b, k, L[0]);
                default:
                  return p.SQLITE_MISUSE;
              }
            }.bind(Object.create(null))),
              (p.sqlite3_value_to_js = function (b, k = !0) {
                let L;
                const F = p.sqlite3_value_type(b);
                switch (F) {
                  case p.SQLITE_INTEGER:
                    w.bigIntEnabled
                      ? ((L = p.sqlite3_value_int64(b)),
                        g.bigIntFitsDouble(L) && (L = Number(L)))
                      : (L = p.sqlite3_value_double(b));
                    break;
                  case p.SQLITE_FLOAT:
                    L = p.sqlite3_value_double(b);
                    break;
                  case p.SQLITE_TEXT:
                    L = p.sqlite3_value_text(b);
                    break;
                  case p.SQLITE_BLOB: {
                    const oe = p.sqlite3_value_bytes(b),
                      be = p.sqlite3_value_blob(b);
                    oe &&
                      !be &&
                      A.WasmAllocError.toss(
                        'Cannot allocate memory for blob argument of',
                        oe,
                        'byte(s)',
                      ),
                      (L = oe ? w.heap8u().slice(be, be + Number(oe)) : null);
                    break;
                  }
                  case p.SQLITE_NULL:
                    L = null;
                    break;
                  default:
                    k &&
                      re(
                        p.SQLITE_MISMATCH,
                        'Unhandled sqlite3_value_type():',
                        F,
                      ),
                      (L = void 0);
                }
                return L;
              }),
              (p.sqlite3_values_to_js = function (b, k, L = !0) {
                let F;
                const oe = [];
                for (F = 0; F < b; ++F)
                  oe.push(
                    p.sqlite3_value_to_js(w.peekPtr(k + w.ptrSizeof * F), L),
                  );
                return oe;
              }),
              (p.sqlite3_result_error_js = function (b, k) {
                k instanceof D
                  ? p.sqlite3_result_error_nomem(b)
                  : p.sqlite3_result_error(b, '' + k, -1);
              }),
              (p.sqlite3_result_js = function (b, k) {
                if (k instanceof Error) {
                  p.sqlite3_result_error_js(b, k);
                  return;
                }
                try {
                  switch (typeof k) {
                    case 'undefined':
                      break;
                    case 'boolean':
                      p.sqlite3_result_int(b, k ? 1 : 0);
                      break;
                    case 'bigint':
                      g.bigIntFits32(k)
                        ? p.sqlite3_result_int(b, Number(k))
                        : g.bigIntFitsDouble(k)
                          ? p.sqlite3_result_double(b, Number(k))
                          : w.bigIntEnabled
                            ? g.bigIntFits64(k)
                              ? p.sqlite3_result_int64(b, k)
                              : re(
                                  'BigInt value',
                                  k.toString(),
                                  'is too BigInt for int64.',
                                )
                            : re(
                                'BigInt value',
                                k.toString(),
                                'is too BigInt.',
                              );
                      break;
                    case 'number': {
                      let L;
                      g.isInt32(k)
                        ? (L = p.sqlite3_result_int)
                        : w.bigIntEnabled &&
                            Number.isInteger(k) &&
                            g.bigIntFits64(BigInt(k))
                          ? (L = p.sqlite3_result_int64)
                          : (L = p.sqlite3_result_double),
                        L(b, k);
                      break;
                    }
                    case 'string': {
                      const [L, F] = w.allocCString(k, !0);
                      p.sqlite3_result_text(b, L, F, p.SQLITE_WASM_DEALLOC);
                      break;
                    }
                    case 'object':
                      if (k === null) {
                        p.sqlite3_result_null(b);
                        break;
                      } else if (g.isBindableTypedArray(k)) {
                        const L = w.allocFromTypedArray(k);
                        p.sqlite3_result_blob(
                          b,
                          L,
                          k.byteLength,
                          p.SQLITE_WASM_DEALLOC,
                        );
                        break;
                      }
                    default:
                      re(
                        "Don't not how to handle this UDF result value:",
                        typeof k,
                        k,
                      );
                  }
                } catch (L) {
                  p.sqlite3_result_error_js(b, L);
                }
              }),
              (p.sqlite3_column_js = function (b, k, L = !0) {
                const F = p.sqlite3_column_value(b, k);
                return F === 0 ? void 0 : p.sqlite3_value_to_js(F, L);
              });
            const S = function (b, k, L) {
              (L = p[L]),
                this.ptr ? w.pokePtr(this.ptr, 0) : (this.ptr = w.allocPtr());
              const F = L(b, k, this.ptr);
              if (F)
                return ne.toss(F, arguments[2] + '() failed with code ' + F);
              const oe = w.peekPtr(this.ptr);
              return oe ? p.sqlite3_value_to_js(oe, !0) : void 0;
            }.bind(Object.create(null));
            (p.sqlite3_preupdate_new_js = (b, k) =>
              S(b, k, 'sqlite3_preupdate_new')),
              (p.sqlite3_preupdate_old_js = (b, k) =>
                S(b, k, 'sqlite3_preupdate_old')),
              (p.sqlite3changeset_new_js = (b, k) =>
                S(b, k, 'sqlite3changeset_new')),
              (p.sqlite3changeset_old_js = (b, k) =>
                S(b, k, 'sqlite3changeset_old'));
            const A = {
              WasmAllocError: D,
              SQLite3Error: ne,
              capi: p,
              util: g,
              wasm: w,
              config: f,
              version: Object.create(null),
              client: void 0,
              asyncPostInit: async function b() {
                if (b.isReady instanceof Promise) return b.isReady;
                let k = a.initializersAsync;
                delete a.initializersAsync;
                const L = async () => (
                    A.__isUnderTest || (delete A.util, delete A.StructBinder), A
                  ),
                  F = (be) => {
                    throw (
                      (f.error('an async sqlite3 initializer failed:', be), be)
                    );
                  };
                if (!k || !k.length) return (b.isReady = L().catch(F));
                (k = k.map((be) =>
                  be instanceof Function ? async (Ce) => be(A) : be,
                )),
                  k.push(L);
                let oe = Promise.resolve(A);
                for (; k.length; ) oe = oe.then(k.shift());
                return (b.isReady = oe.catch(F));
              },
              scriptInfo: void 0,
            };
            try {
              a.initializers.forEach((b) => {
                b(A);
              });
            } catch (b) {
              throw (
                (console.error('sqlite3 bootstrap initializer threw:', b), b)
              );
            }
            return delete a.initializers, (a.sqlite3 = A), A;
          }),
          (globalThis.sqlite3ApiBootstrap.initializers = []),
          (globalThis.sqlite3ApiBootstrap.initializersAsync = []),
          (globalThis.sqlite3ApiBootstrap.defaultConfig = Object.create(null)),
          (globalThis.sqlite3ApiBootstrap.sqlite3 = void 0),
          (globalThis.WhWasmUtilInstaller = function (a) {
            a.bigIntEnabled === void 0 &&
              (a.bigIntEnabled = !!globalThis.BigInt64Array);
            const d = (...E) => {
              throw new Error(E.join(' '));
            };
            a.exports ||
              Object.defineProperty(a, 'exports', {
                enumerable: !0,
                configurable: !0,
                get: () => a.instance && a.instance.exports,
              });
            const f = a.pointerIR || 'i32',
              p = (a.ptrSizeof =
                f === 'i32'
                  ? 4
                  : f === 'i64'
                    ? 8
                    : d('Unhandled ptrSizeof:', f)),
              w = Object.create(null);
            (w.heapSize = 0),
              (w.memory = null),
              (w.freeFuncIndexes = []),
              (w.scopedAlloc = []),
              (w.utf8Decoder = new TextDecoder()),
              (w.utf8Encoder = new TextEncoder('utf-8')),
              (a.sizeofIR = (E) => {
                switch (E) {
                  case 'i8':
                    return 1;
                  case 'i16':
                    return 2;
                  case 'i32':
                  case 'f32':
                  case 'float':
                    return 4;
                  case 'i64':
                  case 'f64':
                  case 'double':
                    return 8;
                  case '*':
                    return p;
                  default:
                    return ('' + E).endsWith('*') ? p : void 0;
                }
              });
            const O = function () {
              if (!w.memory)
                w.memory =
                  a.memory instanceof WebAssembly.Memory
                    ? a.memory
                    : a.exports.memory;
              else if (w.heapSize === w.memory.buffer.byteLength) return w;
              const E = w.memory.buffer;
              return (
                (w.HEAP8 = new Int8Array(E)),
                (w.HEAP8U = new Uint8Array(E)),
                (w.HEAP16 = new Int16Array(E)),
                (w.HEAP16U = new Uint16Array(E)),
                (w.HEAP32 = new Int32Array(E)),
                (w.HEAP32U = new Uint32Array(E)),
                a.bigIntEnabled &&
                  ((w.HEAP64 = new BigInt64Array(E)),
                  (w.HEAP64U = new BigUint64Array(E))),
                (w.HEAP32F = new Float32Array(E)),
                (w.HEAP64F = new Float64Array(E)),
                (w.heapSize = E.byteLength),
                w
              );
            };
            (a.heap8 = () => O().HEAP8),
              (a.heap8u = () => O().HEAP8U),
              (a.heap16 = () => O().HEAP16),
              (a.heap16u = () => O().HEAP16U),
              (a.heap32 = () => O().HEAP32),
              (a.heap32u = () => O().HEAP32U),
              (a.heapForSize = function (E, D = !0) {
                const g =
                  w.memory && w.heapSize === w.memory.buffer.byteLength
                    ? w
                    : O();
                switch (E) {
                  case Int8Array:
                    return g.HEAP8;
                  case Uint8Array:
                    return g.HEAP8U;
                  case Int16Array:
                    return g.HEAP16;
                  case Uint16Array:
                    return g.HEAP16U;
                  case Int32Array:
                    return g.HEAP32;
                  case Uint32Array:
                    return g.HEAP32U;
                  case 8:
                    return D ? g.HEAP8U : g.HEAP8;
                  case 16:
                    return D ? g.HEAP16U : g.HEAP16;
                  case 32:
                    return D ? g.HEAP32U : g.HEAP32;
                  case 64:
                    if (g.HEAP64) return D ? g.HEAP64U : g.HEAP64;
                    break;
                  default:
                    if (a.bigIntEnabled) {
                      if (E === globalThis.BigUint64Array) return g.HEAP64U;
                      if (E === globalThis.BigInt64Array) return g.HEAP64;
                      break;
                    }
                }
                d(
                  'Invalid heapForSize() size: expecting 8, 16, 32,',
                  'or (if BigInt is enabled) 64.',
                );
              }),
              (a.functionTable = function () {
                return a.exports.__indirect_function_table;
              }),
              (a.functionEntry = function (E) {
                const D = a.functionTable();
                return E < D.length ? D.get(E) : void 0;
              }),
              (a.jsFuncToWasm = function E(D, g) {
                if (
                  (E._ ||
                    (E._ = {
                      sigTypes: Object.assign(Object.create(null), {
                        i: 'i32',
                        p: 'i32',
                        P: 'i32',
                        s: 'i32',
                        j: 'i64',
                        f: 'f32',
                        d: 'f64',
                      }),
                      typeCodes: Object.assign(Object.create(null), {
                        f64: 124,
                        f32: 125,
                        i64: 126,
                        i32: 127,
                      }),
                      uleb128Encode: function (A, b, k) {
                        k < 128 ? A[b](k) : A[b]((k % 128) | 128, k >> 7);
                      },
                      rxJSig: /^(\w)\((\w*)\)$/,
                      sigParams: function (A) {
                        const b = E._.rxJSig.exec(A);
                        return b ? b[2] : A.substr(1);
                      },
                      letterType: (A) =>
                        E._.sigTypes[A] || d('Invalid signature letter:', A),
                      pushSigType: (A, b) =>
                        A.push(E._.typeCodes[E._.letterType(b)]),
                    }),
                  typeof D == 'string')
                ) {
                  const A = g;
                  (g = D), (D = A);
                }
                const P = E._.sigParams(g),
                  S = [1, 96];
                E._.uleb128Encode(S, 'push', P.length);
                for (const A of P) E._.pushSigType(S, A);
                return (
                  g[0] === 'v'
                    ? S.push(0)
                    : (S.push(1), E._.pushSigType(S, g[0])),
                  E._.uleb128Encode(S, 'unshift', S.length),
                  S.unshift(0, 97, 115, 109, 1, 0, 0, 0, 1),
                  S.push(2, 7, 1, 1, 101, 1, 102, 0, 0, 7, 5, 1, 1, 102, 0, 0),
                  new WebAssembly.Instance(
                    new WebAssembly.Module(new Uint8Array(S)),
                    { e: { f: D } },
                  ).exports.f
                );
              });
            const M = function (D, g, P) {
              if (
                (P &&
                  !w.scopedAlloc.length &&
                  d('No scopedAllocPush() scope is active.'),
                typeof D == 'string')
              ) {
                const k = g;
                (g = D), (D = k);
              }
              (typeof g != 'string' || !(D instanceof Function)) &&
                d(
                  'Invalid arguments: expecting (function,signature) or (signature,function).',
                );
              const S = a.functionTable(),
                A = S.length;
              let b;
              for (
                ;
                w.freeFuncIndexes.length &&
                ((b = w.freeFuncIndexes.pop()), S.get(b));
              ) {
                b = null;
                continue;
              }
              b || ((b = A), S.grow(1));
              try {
                return (
                  S.set(b, D),
                  P && w.scopedAlloc[w.scopedAlloc.length - 1].push(b),
                  b
                );
              } catch (k) {
                if (!(k instanceof TypeError))
                  throw (b === A && w.freeFuncIndexes.push(A), k);
              }
              try {
                const k = a.jsFuncToWasm(D, g);
                S.set(b, k),
                  P && w.scopedAlloc[w.scopedAlloc.length - 1].push(b);
              } catch (k) {
                throw (b === A && w.freeFuncIndexes.push(A), k);
              }
              return b;
            };
            (a.installFunction = (E, D) => M(E, D, !1)),
              (a.scopedInstallFunction = (E, D) => M(E, D, !0)),
              (a.uninstallFunction = function (E) {
                if (!E && E !== 0) return;
                const D = w.freeFuncIndexes,
                  g = a.functionTable();
                D.push(E);
                const P = g.get(E);
                return g.set(E, null), P;
              }),
              (a.peek = function (D, g = 'i8') {
                g.endsWith('*') && (g = f);
                const P =
                    w.memory && w.heapSize === w.memory.buffer.byteLength
                      ? w
                      : O(),
                  S = Array.isArray(D) ? [] : void 0;
                let A;
                do {
                  switch ((S && (D = arguments[0].shift()), g)) {
                    case 'i1':
                    case 'i8':
                      A = P.HEAP8[D >> 0];
                      break;
                    case 'i16':
                      A = P.HEAP16[D >> 1];
                      break;
                    case 'i32':
                      A = P.HEAP32[D >> 2];
                      break;
                    case 'float':
                    case 'f32':
                      A = P.HEAP32F[D >> 2];
                      break;
                    case 'double':
                    case 'f64':
                      A = Number(P.HEAP64F[D >> 3]);
                      break;
                    case 'i64':
                      if (a.bigIntEnabled) {
                        A = BigInt(P.HEAP64[D >> 3]);
                        break;
                      }
                    default:
                      d('Invalid type for peek():', g);
                  }
                  S && S.push(A);
                } while (S && arguments[0].length);
                return S || A;
              }),
              (a.poke = function (E, D, g = 'i8') {
                g.endsWith('*') && (g = f);
                const P =
                  w.memory && w.heapSize === w.memory.buffer.byteLength
                    ? w
                    : O();
                for (const S of Array.isArray(E) ? E : [E])
                  switch (g) {
                    case 'i1':
                    case 'i8':
                      P.HEAP8[S >> 0] = D;
                      continue;
                    case 'i16':
                      P.HEAP16[S >> 1] = D;
                      continue;
                    case 'i32':
                      P.HEAP32[S >> 2] = D;
                      continue;
                    case 'float':
                    case 'f32':
                      P.HEAP32F[S >> 2] = D;
                      continue;
                    case 'double':
                    case 'f64':
                      P.HEAP64F[S >> 3] = D;
                      continue;
                    case 'i64':
                      if (P.HEAP64) {
                        P.HEAP64[S >> 3] = BigInt(D);
                        continue;
                      }
                    default:
                      d('Invalid type for poke(): ' + g);
                  }
                return this;
              }),
              (a.peekPtr = (...E) => a.peek(E.length === 1 ? E[0] : E, f)),
              (a.pokePtr = (E, D = 0) => a.poke(E, D, f)),
              (a.peek8 = (...E) => a.peek(E.length === 1 ? E[0] : E, 'i8')),
              (a.poke8 = (E, D) => a.poke(E, D, 'i8')),
              (a.peek16 = (...E) => a.peek(E.length === 1 ? E[0] : E, 'i16')),
              (a.poke16 = (E, D) => a.poke(E, D, 'i16')),
              (a.peek32 = (...E) => a.peek(E.length === 1 ? E[0] : E, 'i32')),
              (a.poke32 = (E, D) => a.poke(E, D, 'i32')),
              (a.peek64 = (...E) => a.peek(E.length === 1 ? E[0] : E, 'i64')),
              (a.poke64 = (E, D) => a.poke(E, D, 'i64')),
              (a.peek32f = (...E) => a.peek(E.length === 1 ? E[0] : E, 'f32')),
              (a.poke32f = (E, D) => a.poke(E, D, 'f32')),
              (a.peek64f = (...E) => a.peek(E.length === 1 ? E[0] : E, 'f64')),
              (a.poke64f = (E, D) => a.poke(E, D, 'f64')),
              (a.getMemValue = a.peek),
              (a.getPtrValue = a.peekPtr),
              (a.setMemValue = a.poke),
              (a.setPtrValue = a.pokePtr),
              (a.isPtr32 = (E) =>
                typeof E == 'number' && E === (E | 0) && E >= 0),
              (a.isPtr = a.isPtr32),
              (a.cstrlen = function (E) {
                if (!E || !a.isPtr(E)) return null;
                const D = O().HEAP8U;
                let g = E;
                for (; D[g] !== 0; ++g);
                return g - E;
              });
            const ne =
                typeof SharedArrayBuffer > 'u'
                  ? function () {}
                  : SharedArrayBuffer,
              re = function (E, D, g) {
                return w.utf8Decoder.decode(
                  E.buffer instanceof ne ? E.slice(D, g) : E.subarray(D, g),
                );
              };
            (a.cstrToJs = function (E) {
              const D = a.cstrlen(E);
              return D ? re(O().HEAP8U, E, E + D) : D === null ? D : '';
            }),
              (a.jstrlen = function (E) {
                if (typeof E != 'string') return null;
                const D = E.length;
                let g = 0;
                for (let P = 0; P < D; ++P) {
                  let S = E.charCodeAt(P);
                  S >= 55296 &&
                    S <= 57343 &&
                    (S =
                      (65536 + ((S & 1023) << 10)) |
                      (E.charCodeAt(++P) & 1023)),
                    S <= 127
                      ? ++g
                      : S <= 2047
                        ? (g += 2)
                        : S <= 65535
                          ? (g += 3)
                          : (g += 4);
                }
                return g;
              }),
              (a.jstrcpy = function (E, D, g = 0, P = -1, S = !0) {
                if (
                  ((!D ||
                    (!(D instanceof Int8Array) &&
                      !(D instanceof Uint8Array))) &&
                    d('jstrcpy() target must be an Int8Array or Uint8Array.'),
                  P < 0 && (P = D.length - g),
                  !(P > 0) || !(g >= 0))
                )
                  return 0;
                let A = 0,
                  b = E.length;
                const k = g,
                  L = g + P - (S ? 1 : 0);
                for (; A < b && g < L; ++A) {
                  let F = E.charCodeAt(A);
                  if (
                    (F >= 55296 &&
                      F <= 57343 &&
                      (F =
                        (65536 + ((F & 1023) << 10)) |
                        (E.charCodeAt(++A) & 1023)),
                    F <= 127)
                  ) {
                    if (g >= L) break;
                    D[g++] = F;
                  } else if (F <= 2047) {
                    if (g + 1 >= L) break;
                    (D[g++] = 192 | (F >> 6)), (D[g++] = 128 | (F & 63));
                  } else if (F <= 65535) {
                    if (g + 2 >= L) break;
                    (D[g++] = 224 | (F >> 12)),
                      (D[g++] = 128 | ((F >> 6) & 63)),
                      (D[g++] = 128 | (F & 63));
                  } else {
                    if (g + 3 >= L) break;
                    (D[g++] = 240 | (F >> 18)),
                      (D[g++] = 128 | ((F >> 12) & 63)),
                      (D[g++] = 128 | ((F >> 6) & 63)),
                      (D[g++] = 128 | (F & 63));
                  }
                }
                return S && (D[g++] = 0), g - k;
              }),
              (a.cstrncpy = function (E, D, g) {
                if (
                  ((!E || !D) && d('cstrncpy() does not accept NULL strings.'),
                  g < 0)
                )
                  g = a.cstrlen(strPtr) + 1;
                else if (!(g > 0)) return 0;
                const P = a.heap8u();
                let S = 0,
                  A;
                for (; S < g && (A = P[D + S]); ++S) P[E + S] = A;
                return S < g && (P[E + S++] = 0), S;
              }),
              (a.jstrToUintArray = (E, D = !1) =>
                w.utf8Encoder.encode(D ? E + '\0' : E));
            const pe = (E, D) => {
                (!(E.alloc instanceof Function) ||
                  !(E.dealloc instanceof Function)) &&
                  d(
                    'Object is missing alloc() and/or dealloc() function(s)',
                    'required by',
                    D + '().',
                  );
              },
              ye = function (E, D, g, P) {
                if ((pe(a, P), typeof E != 'string')) return null;
                {
                  const S = w.utf8Encoder.encode(E),
                    A = g(S.length + 1),
                    b = O().HEAP8U;
                  return (
                    b.set(S, A), (b[A + S.length] = 0), D ? [A, S.length] : A
                  );
                }
              };
            (a.allocCString = (E, D = !1) =>
              ye(E, D, a.alloc, 'allocCString()')),
              (a.scopedAllocPush = function () {
                pe(a, 'scopedAllocPush');
                const E = [];
                return w.scopedAlloc.push(E), E;
              }),
              (a.scopedAllocPop = function (E) {
                pe(a, 'scopedAllocPop');
                const D = arguments.length
                  ? w.scopedAlloc.indexOf(E)
                  : w.scopedAlloc.length - 1;
                D < 0 && d('Invalid state object for scopedAllocPop().'),
                  arguments.length === 0 && (E = w.scopedAlloc[D]),
                  w.scopedAlloc.splice(D, 1);
                for (let g; (g = E.pop()); )
                  a.functionEntry(g) ? a.uninstallFunction(g) : a.dealloc(g);
              }),
              (a.scopedAlloc = function (E) {
                w.scopedAlloc.length ||
                  d('No scopedAllocPush() scope is active.');
                const D = a.alloc(E);
                return w.scopedAlloc[w.scopedAlloc.length - 1].push(D), D;
              }),
              Object.defineProperty(a.scopedAlloc, 'level', {
                configurable: !1,
                enumerable: !1,
                get: () => w.scopedAlloc.length,
                set: () => d("The 'active' property is read-only."),
              }),
              (a.scopedAllocCString = (E, D = !1) =>
                ye(E, D, a.scopedAlloc, 'scopedAllocCString()'));
            const X = function (E, D) {
              const g = a[E ? 'scopedAlloc' : 'alloc'](
                (D.length + 1) * a.ptrSizeof,
              );
              let P = 0;
              return (
                D.forEach((S) => {
                  a.pokePtr(
                    g + a.ptrSizeof * P++,
                    a[E ? 'scopedAllocCString' : 'allocCString']('' + S),
                  );
                }),
                a.pokePtr(g + a.ptrSizeof * P, 0),
                g
              );
            };
            (a.scopedAllocMainArgv = (E) => X(!0, E)),
              (a.allocMainArgv = (E) => X(!1, E)),
              (a.cArgvToJs = (E, D) => {
                const g = [];
                for (let P = 0; P < E; ++P) {
                  const S = a.peekPtr(D + a.ptrSizeof * P);
                  g.push(S ? a.cstrToJs(S) : null);
                }
                return g;
              }),
              (a.scopedAllocCall = function (E) {
                a.scopedAllocPush();
                try {
                  return E();
                } finally {
                  a.scopedAllocPop();
                }
              });
            const Q = function (E, D, g) {
              pe(a, g);
              const P = D ? 'i64' : f;
              let S = a[g](E * (D ? 8 : p));
              if ((a.poke(S, 0, P), E === 1)) return S;
              const A = [S];
              for (let b = 1; b < E; ++b)
                (S += D ? 8 : p), (A[b] = S), a.poke(S, 0, P);
              return A;
            };
            (a.allocPtr = (E = 1, D = !0) => Q(E, D, 'alloc')),
              (a.scopedAllocPtr = (E = 1, D = !0) => Q(E, D, 'scopedAlloc')),
              (a.xGet = function (E) {
                return a.exports[E] || d('Cannot find exported symbol:', E);
              });
            const ue = (E, D) => d(E + '() requires', D, 'argument(s).');
            (a.xCall = function (E, ...D) {
              const g = E instanceof Function ? E : a.xGet(E);
              return (
                g instanceof Function ||
                  d('Exported symbol', E, 'is not a function.'),
                g.length !== D.length && ue(g === E ? g.name : E, g.length),
                arguments.length === 2 && Array.isArray(arguments[1])
                  ? g.apply(null, arguments[1])
                  : g.apply(null, D)
              );
            }),
              (w.xWrap = Object.create(null)),
              (w.xWrap.convert = Object.create(null)),
              (w.xWrap.convert.arg = new Map()),
              (w.xWrap.convert.result = new Map());
            const N = w.xWrap.convert.arg,
              B = w.xWrap.convert.result;
            a.bigIntEnabled && N.set('i64', (E) => BigInt(E));
            const J = f === 'i32' ? (E) => E | 0 : (E) => BigInt(E) | BigInt(0);
            N.set('i32', J)
              .set('i16', (E) => (E | 0) & 65535)
              .set('i8', (E) => (E | 0) & 255)
              .set('f32', (E) => Number(E).valueOf())
              .set('float', N.get('f32'))
              .set('f64', N.get('f32'))
              .set('double', N.get('f64'))
              .set('int', N.get('i32'))
              .set('null', (E) => E)
              .set(null, N.get('null'))
              .set('**', J)
              .set('*', J),
              B.set('*', J)
                .set('pointer', J)
                .set('number', (E) => Number(E))
                .set('void', (E) => {})
                .set('null', (E) => E)
                .set(null, B.get('null'));
            {
              const E = [
                'i8',
                'i16',
                'i32',
                'int',
                'f32',
                'float',
                'f64',
                'double',
              ];
              a.bigIntEnabled && E.push('i64');
              const D = N.get(f);
              for (const g of E)
                N.set(g + '*', D),
                  B.set(g + '*', D),
                  B.set(g, N.get(g) || d('Missing arg converter:', g));
            }
            const Z = function (E) {
              return typeof E == 'string'
                ? a.scopedAllocCString(E)
                : E
                  ? J(E)
                  : null;
            };
            N.set('string', Z).set('utf8', Z).set('pointer', Z),
              B.set('string', (E) => a.cstrToJs(E))
                .set('utf8', B.get('string'))
                .set('string:dealloc', (E) => {
                  try {
                    return E ? a.cstrToJs(E) : null;
                  } finally {
                    a.dealloc(E);
                  }
                })
                .set('utf8:dealloc', B.get('string:dealloc'))
                .set('json', (E) => JSON.parse(a.cstrToJs(E)))
                .set('json:dealloc', (E) => {
                  try {
                    return E ? JSON.parse(a.cstrToJs(E)) : null;
                  } finally {
                    a.dealloc(E);
                  }
                });
            const se = class {
              constructor(E) {
                this.name = E.name || 'unnamed adapter';
              }
              convertArg(E, D, g) {
                d('AbstractArgAdapter must be subclassed.');
              }
            };
            (N.FuncPtrAdapter = class Or extends se {
              constructor(D) {
                super(D),
                  N.FuncPtrAdapter.warnOnUse &&
                    console.warn(
                      'xArg.FuncPtrAdapter is an internal-only API',
                      'and is not intended to be invoked from',
                      'client-level code. Invoked with:',
                      D,
                    ),
                  (this.name = D.name || 'unnamed'),
                  (this.signature = D.signature),
                  D.contextKey instanceof Function &&
                    ((this.contextKey = D.contextKey),
                    D.bindScope || (D.bindScope = 'context')),
                  (this.bindScope =
                    D.bindScope ||
                    d(
                      'FuncPtrAdapter options requires a bindScope (explicit or implied).',
                    )),
                  Or.bindScopes.indexOf(D.bindScope) < 0 &&
                    d(
                      'Invalid options.bindScope (' +
                        D.bindMod +
                        ') for FuncPtrAdapter. Expecting one of: (' +
                        Or.bindScopes.join(', ') +
                        ')',
                    ),
                  (this.isTransient = this.bindScope === 'transient'),
                  (this.isContext = this.bindScope === 'context'),
                  (this.isPermanent = this.bindScope === 'permanent'),
                  (this.singleton =
                    this.bindScope === 'singleton' ? [] : void 0),
                  (this.callProxy =
                    D.callProxy instanceof Function ? D.callProxy : void 0);
              }
              contextKey(D, g) {
                return this;
              }
              contextMap(D) {
                const g = this.__cmap || (this.__cmap = new Map());
                let P = g.get(D);
                return P === void 0 && g.set(D, (P = [])), P;
              }
              convertArg(D, g, P) {
                let S = this.singleton;
                if (
                  (!S &&
                    this.isContext &&
                    (S = this.contextMap(this.contextKey(g, P))),
                  S && S[0] === D)
                )
                  return S[1];
                if (D instanceof Function) {
                  this.callProxy && (D = this.callProxy(D));
                  const A = M(D, this.signature, this.isTransient);
                  if (
                    (Or.debugFuncInstall &&
                      Or.debugOut(
                        'FuncPtrAdapter installed',
                        this,
                        this.contextKey(g, P),
                        '@' + A,
                        D,
                      ),
                    S)
                  ) {
                    if (S[1]) {
                      Or.debugFuncInstall &&
                        Or.debugOut(
                          'FuncPtrAdapter uninstalling',
                          this,
                          this.contextKey(g, P),
                          '@' + S[1],
                          D,
                        );
                      try {
                        w.scopedAlloc[w.scopedAlloc.length - 1].push(S[1]);
                      } catch {}
                    }
                    (S[0] = D), (S[1] = A);
                  }
                  return A;
                } else if (a.isPtr(D) || D === null || D === void 0) {
                  if (S && S[1] && S[1] !== D) {
                    Or.debugFuncInstall &&
                      Or.debugOut(
                        'FuncPtrAdapter uninstalling',
                        this,
                        this.contextKey(g, P),
                        '@' + S[1],
                        D,
                      );
                    try {
                      w.scopedAlloc[w.scopedAlloc.length - 1].push(S[1]);
                    } catch {}
                    S[0] = S[1] = D | 0;
                  }
                  return D || 0;
                } else
                  throw new TypeError(
                    'Invalid FuncPtrAdapter argument type. Expecting a function pointer or a ' +
                      (this.name ? this.name + ' ' : '') +
                      'function matching signature ' +
                      this.signature +
                      '.',
                  );
              }
            }),
              (N.FuncPtrAdapter.warnOnUse = !1),
              (N.FuncPtrAdapter.debugFuncInstall = !1),
              (N.FuncPtrAdapter.debugOut = console.debug.bind(console)),
              (N.FuncPtrAdapter.bindScopes = [
                'transient',
                'context',
                'singleton',
                'permanent',
              ]);
            const W = (E) => N.get(E) || d('Argument adapter not found:', E),
              ce = (E) => B.get(E) || d('Result adapter not found:', E);
            (w.xWrap.convertArg = (E, ...D) => W(E)(...D)),
              (w.xWrap.convertArgNoCheck = (E, ...D) => N.get(E)(...D)),
              (w.xWrap.convertResult = (E, D) =>
                E === null ? D : E ? ce(E)(D) : void 0),
              (w.xWrap.convertResultNoCheck = (E, D) =>
                E === null ? D : E ? B.get(E)(D) : void 0),
              (a.xWrap = function (E, D, ...g) {
                arguments.length === 3 &&
                  Array.isArray(arguments[2]) &&
                  (g = arguments[2]),
                  a.isPtr(E) &&
                    (E =
                      a.functionEntry(E) ||
                      d('Function pointer not found in WASM function table.'));
                const P = E instanceof Function,
                  S = P ? E : a.xGet(E);
                if (
                  (P && (E = S.name || 'unnamed function'),
                  g.length !== S.length && ue(E, S.length),
                  D === null && S.length === 0)
                )
                  return S;
                D != null && ce(D);
                for (const b of g)
                  b instanceof se
                    ? N.set(b, (...k) => b.convertArg(...k))
                    : W(b);
                const A = w.xWrap;
                return S.length === 0
                  ? (...b) =>
                      b.length
                        ? ue(E, S.length)
                        : A.convertResult(D, S.call(null))
                  : function (...b) {
                      b.length !== S.length && ue(E, S.length);
                      const k = a.scopedAllocPush();
                      try {
                        let L = 0;
                        for (; L < b.length; ++L)
                          b[L] = A.convertArgNoCheck(g[L], b[L], b, L);
                        return A.convertResultNoCheck(D, S.apply(null, b));
                      } finally {
                        a.scopedAllocPop(k);
                      }
                    };
              });
            const _e = function (E, D, g, P, S, A) {
              if (typeof g == 'string') {
                if (D === 1) return A.get(g);
                if (D === 2) {
                  if (P)
                    P instanceof Function ||
                      d(S, 'requires a function argument.');
                  else return delete A.get(g), E;
                  return A.set(g, P), E;
                }
              }
              d('Invalid arguments to', S);
            };
            return (
              (a.xWrap.resultAdapter = function E(D, g) {
                return _e(E, arguments.length, D, g, 'resultAdapter()', B);
              }),
              (a.xWrap.argAdapter = function E(D, g) {
                return _e(E, arguments.length, D, g, 'argAdapter()', N);
              }),
              (a.xWrap.FuncPtrAdapter = N.FuncPtrAdapter),
              (a.xCallWrapped = function (E, D, g, ...P) {
                return (
                  Array.isArray(arguments[3]) && (P = arguments[3]),
                  a.xWrap(E, D, g || []).apply(null, P || [])
                );
              }),
              (a.xWrap.testConvertArg = w.xWrap.convertArg),
              (a.xWrap.testConvertResult = w.xWrap.convertResult),
              a
            );
          }),
          (globalThis.WhWasmUtilInstaller.yawl = function (a) {
            const d = () => fetch(a.uri, { credentials: 'same-origin' }),
              f = this,
              p = function (O) {
                if (a.wasmUtilTarget) {
                  const M = (...re) => {
                      throw new Error(re.join(' '));
                    },
                    ne = a.wasmUtilTarget;
                  if (
                    ((ne.module = O.module),
                    (ne.instance = O.instance),
                    ne.instance.exports.memory ||
                      (ne.memory =
                        (a.imports && a.imports.env && a.imports.env.memory) ||
                        M("Missing 'memory' object!")),
                    !ne.alloc && O.instance.exports.malloc)
                  ) {
                    const re = O.instance.exports;
                    (ne.alloc = function (pe) {
                      return (
                        re.malloc(pe) || M('Allocation of', pe, 'bytes failed.')
                      );
                    }),
                      (ne.dealloc = function (pe) {
                        re.free(pe);
                      });
                  }
                  f(ne);
                }
                return a.onload && a.onload(O, a), O;
              };
            return WebAssembly.instantiateStreaming
              ? function () {
                  return WebAssembly.instantiateStreaming(
                    d(),
                    a.imports || {},
                  ).then(p);
                }
              : function () {
                  return d()
                    .then((M) => M.arrayBuffer())
                    .then((M) => WebAssembly.instantiate(M, a.imports || {}))
                    .then(p);
                };
          }.bind(globalThis.WhWasmUtilInstaller)),
          (globalThis.Jaccwabyt = function a(d) {
            const f = (...R) => {
              throw new Error(R.join(' '));
            };
            !(d.heap instanceof WebAssembly.Memory) &&
              !(d.heap instanceof Function) &&
              f(
                'config.heap must be WebAssembly.Memory instance or a function.',
              ),
              ['alloc', 'dealloc'].forEach(function (R) {
                d[R] instanceof Function ||
                  f("Config option '" + R + "' must be a function.");
              });
            const p = a,
              w =
                d.heap instanceof Function
                  ? d.heap
                  : () => new Uint8Array(d.heap.buffer),
              O = d.alloc,
              M = d.dealloc,
              ne = d.log || console.log.bind(console),
              re = d.memberPrefix || '',
              pe = d.memberSuffix || '',
              ye =
                d.bigIntEnabled === void 0
                  ? !!globalThis.BigInt64Array
                  : !!d.bigIntEnabled,
              X = globalThis.BigInt,
              Q = globalThis.BigInt64Array,
              ue = d.ptrSizeof || 4,
              N = d.ptrIR || 'i32';
            p.debugFlags ||
              ((p.__makeDebugFlags = function (R = null) {
                R && R.__flags && (R = R.__flags);
                const U = function Y(ae) {
                  return arguments.length === 0
                    ? Y.__flags
                    : (ae < 0
                        ? (delete Y.__flags.getter,
                          delete Y.__flags.setter,
                          delete Y.__flags.alloc,
                          delete Y.__flags.dealloc)
                        : ((Y.__flags.getter = (1 & ae) !== 0),
                          (Y.__flags.setter = (2 & ae) !== 0),
                          (Y.__flags.alloc = (4 & ae) !== 0),
                          (Y.__flags.dealloc = (8 & ae) !== 0)),
                      Y._flags);
                };
                return (
                  Object.defineProperty(U, '__flags', {
                    iterable: !1,
                    writable: !1,
                    value: Object.create(R),
                  }),
                  R || U(0),
                  U
                );
              }),
              (p.debugFlags = p.__makeDebugFlags()));
            const B = (function () {
                const R = new ArrayBuffer(2);
                return (
                  new DataView(R).setInt16(0, 256, !0),
                  new Int16Array(R)[0] === 256
                );
              })(),
              J = (R) => R[1] === '(',
              Z = (R) => R === 'P',
              se = (R) => (J(R) ? 'p' : R[0]),
              W = function (R) {
                switch (se(R)) {
                  case 'c':
                  case 'C':
                    return 'i8';
                  case 'i':
                    return 'i32';
                  case 'p':
                  case 'P':
                  case 's':
                    return N;
                  case 'j':
                    return 'i64';
                  case 'f':
                    return 'float';
                  case 'd':
                    return 'double';
                }
                f('Unhandled signature IR:', R);
              },
              ce = Q ? () => !0 : () => f('BigInt64Array is not available.'),
              _e = function (R) {
                switch (se(R)) {
                  case 'p':
                  case 'P':
                  case 's': {
                    switch (ue) {
                      case 4:
                        return 'getInt32';
                      case 8:
                        return ce() && 'getBigInt64';
                    }
                    break;
                  }
                  case 'i':
                    return 'getInt32';
                  case 'c':
                    return 'getInt8';
                  case 'C':
                    return 'getUint8';
                  case 'j':
                    return ce() && 'getBigInt64';
                  case 'f':
                    return 'getFloat32';
                  case 'd':
                    return 'getFloat64';
                }
                f('Unhandled DataView getter for signature:', R);
              },
              E = function (R) {
                switch (se(R)) {
                  case 'p':
                  case 'P':
                  case 's': {
                    switch (ue) {
                      case 4:
                        return 'setInt32';
                      case 8:
                        return ce() && 'setBigInt64';
                    }
                    break;
                  }
                  case 'i':
                    return 'setInt32';
                  case 'c':
                    return 'setInt8';
                  case 'C':
                    return 'setUint8';
                  case 'j':
                    return ce() && 'setBigInt64';
                  case 'f':
                    return 'setFloat32';
                  case 'd':
                    return 'setFloat64';
                }
                f('Unhandled DataView setter for signature:', R);
              },
              D = function (R) {
                switch (se(R)) {
                  case 'i':
                  case 'f':
                  case 'c':
                  case 'C':
                  case 'd':
                    return Number;
                  case 'j':
                    return ce() && X;
                  case 'p':
                  case 'P':
                  case 's':
                    switch (ue) {
                      case 4:
                        return Number;
                      case 8:
                        return ce() && X;
                    }
                    break;
                }
                f('Unhandled DataView set wrapper for signature:', R);
              },
              g = (R, U) => R + '::' + U,
              P = function (R, U) {
                return () => f(g(R, U), 'is read-only.');
              },
              S = new WeakMap(),
              A = '(pointer-is-external)',
              b = function (R, U, Y) {
                if ((Y || (Y = S.get(U)), Y)) {
                  if ((S.delete(U), Array.isArray(U.ondispose))) {
                    let ae;
                    for (; (ae = U.ondispose.shift()); )
                      try {
                        ae instanceof Function
                          ? ae.call(U)
                          : ae instanceof we
                            ? ae.dispose()
                            : typeof ae == 'number' && M(ae);
                      } catch (xe) {
                        console.warn(
                          'ondispose() for',
                          R.structName,
                          '@',
                          Y,
                          'threw. NOT propagating it.',
                          xe,
                        );
                      }
                  } else if (U.ondispose instanceof Function)
                    try {
                      U.ondispose();
                    } catch (ae) {
                      console.warn(
                        'ondispose() for',
                        R.structName,
                        '@',
                        Y,
                        'threw. NOT propagating it.',
                        ae,
                      );
                    }
                  delete U.ondispose,
                    R.debugFlags.__flags.dealloc &&
                      ne(
                        'debug.dealloc:',
                        U[A] ? 'EXTERNAL' : '',
                        R.structName,
                        'instance:',
                        R.structInfo.sizeof,
                        'bytes @' + Y,
                      ),
                    U[A] || M(Y);
                }
              },
              k = (R) => ({
                configurable: !1,
                writable: !1,
                iterable: !1,
                value: R,
              }),
              L = function (R, U, Y) {
                let ae = !Y;
                Y
                  ? Object.defineProperty(U, A, k(Y))
                  : ((Y = O(R.structInfo.sizeof)),
                    Y || f('Allocation of', R.structName, 'structure failed.'));
                try {
                  R.debugFlags.__flags.alloc &&
                    ne(
                      'debug.alloc:',
                      ae ? '' : 'EXTERNAL',
                      R.structName,
                      'instance:',
                      R.structInfo.sizeof,
                      'bytes @' + Y,
                    ),
                    ae && w().fill(0, Y, Y + R.structInfo.sizeof),
                    S.set(U, Y);
                } catch (xe) {
                  throw (b(R, U, Y), xe);
                }
              },
              F = function () {
                const R = this.pointer;
                return R
                  ? new Uint8Array(w().slice(R, R + this.structInfo.sizeof))
                  : null;
              },
              be = k((R) => re + R + pe),
              Ce = function (R, U, Y = !0) {
                let ae = R.members[U];
                if (!ae && (re || pe)) {
                  for (const xe of Object.values(R.members))
                    if (xe.key === U) {
                      ae = xe;
                      break;
                    }
                  !ae && Y && f(g(R.name, U), 'is not a mapped struct member.');
                }
                return ae;
              },
              ze = function R(U, Y, ae = !1) {
                R._ ||
                  (R._ = (Ie) =>
                    Ie.replace(/[^vipPsjrdcC]/g, '').replace(/[pPscC]/g, 'i'));
                const xe = Ce(U.structInfo, Y, !0);
                return ae ? R._(xe.signature) : xe.signature;
              },
              Re = {
                configurable: !1,
                enumerable: !1,
                get: function () {
                  return S.get(this);
                },
                set: () =>
                  f("Cannot assign the 'pointer' property of a struct."),
              },
              Le = k(function () {
                const R = [];
                for (const U of Object.keys(this.structInfo.members))
                  R.push(this.memberKey(U));
                return R;
              }),
              Ve = new TextDecoder('utf-8'),
              Ge = new TextEncoder(),
              at =
                typeof SharedArrayBuffer > 'u'
                  ? function () {}
                  : SharedArrayBuffer,
              lt = function (R, U, Y) {
                return Ve.decode(
                  R.buffer instanceof at ? R.slice(U, Y) : R.subarray(U, Y),
                );
              },
              Kt = function (R, U, Y = !1) {
                const ae = Ce(R.structInfo, U, Y);
                return ae &&
                  ae.signature.length === 1 &&
                  ae.signature[0] === 's'
                  ? ae
                  : !1;
              },
              xt = function (R) {
                R.signature !== 's' &&
                  f(
                    'Invalid member type signature for C-string value:',
                    JSON.stringify(R),
                  );
              },
              ee = function (U, Y) {
                const ae = Ce(U.structInfo, Y, !0);
                xt(ae);
                const xe = U[ae.key];
                if (!xe) return null;
                let Ie = xe;
                const We = w();
                for (; We[Ie] !== 0; ++Ie);
                return xe === Ie ? '' : lt(We, xe, Ie);
              },
              fe = function (R, ...U) {
                R.ondispose
                  ? Array.isArray(R.ondispose) || (R.ondispose = [R.ondispose])
                  : (R.ondispose = []),
                  R.ondispose.push(...U);
              },
              me = function (R) {
                const U = Ge.encode(R),
                  Y = O(U.length + 1);
                Y || f('Allocation error while duplicating string:', R);
                const ae = w();
                return ae.set(U, Y), (ae[Y + U.length] = 0), Y;
              },
              ke = function (R, U, Y) {
                const ae = Ce(R.structInfo, U, !0);
                xt(ae);
                const xe = me(Y);
                return (R[ae.key] = xe), fe(R, xe), R;
              },
              we = function (U, Y) {
                arguments[2] !== k &&
                  f(
                    'Do not call the StructType constructor',
                    'from client-level code.',
                  ),
                  Object.defineProperties(this, {
                    structName: k(U),
                    structInfo: k(Y),
                  });
              };
            (we.prototype = Object.create(null, {
              dispose: k(function () {
                b(this.constructor, this);
              }),
              lookupMember: k(function (R, U = !0) {
                return Ce(this.structInfo, R, U);
              }),
              memberToJsString: k(function (R) {
                return ee(this, R);
              }),
              memberIsString: k(function (R, U = !0) {
                return Kt(this, R, U);
              }),
              memberKey: be,
              memberKeys: Le,
              memberSignature: k(function (R, U = !1) {
                return ze(this, R, U);
              }),
              memoryDump: k(F),
              pointer: Re,
              setMemberCString: k(function (R, U) {
                return ke(this, R, U);
              }),
            })),
              Object.assign(we.prototype, {
                addOnDispose: function (...R) {
                  return fe(this, ...R), this;
                },
              }),
              Object.defineProperties(we, {
                allocCString: k(me),
                isA: k((R) => R instanceof we),
                hasExternalPointer: k((R) => R instanceof we && !!R[A]),
                memberKey: be,
              });
            const Ee = (R) => Number.isFinite(R) || R instanceof (X || Number),
              ge = function R(U, Y, ae) {
                if (!R._) {
                  R._ = { getters: {}, setters: {}, sw: {} };
                  const dn = ['i', 'c', 'C', 'p', 'P', 's', 'f', 'd', 'v()'];
                  ye && dn.push('j'),
                    dn.forEach(function (mr) {
                      (R._.getters[mr] = _e(mr)),
                        (R._.setters[mr] = E(mr)),
                        (R._.sw[mr] = D(mr));
                    });
                  const rx = /^[ipPsjfdcC]$/,
                    ix = /^[vipPsjfdcC]\([ipPsjfdcC]*\)$/;
                  R.sigCheck = function (mr, ox, xg, Yf) {
                    Object.prototype.hasOwnProperty.call(mr, xg) &&
                      f(
                        mr.structName,
                        'already has a property named',
                        xg + '.',
                      ),
                      rx.test(Yf) ||
                        ix.test(Yf) ||
                        f(
                          'Malformed signature for',
                          g(mr.structName, ox) + ':',
                          Yf,
                        );
                  };
                }
                const xe = U.memberKey(Y);
                R.sigCheck(U.prototype, Y, xe, ae.signature),
                  (ae.key = xe),
                  (ae.name = Y);
                const Ie = se(ae.signature),
                  We = g(U.prototype.structName, xe),
                  Je = U.prototype.debugFlags.__flags,
                  Cn = Object.create(null);
                (Cn.configurable = !1),
                  (Cn.enumerable = !1),
                  (Cn.get = function () {
                    Je.getter &&
                      ne(
                        'debug.getter:',
                        R._.getters[Ie],
                        'for',
                        W(Ie),
                        We,
                        '@',
                        this.pointer,
                        '+',
                        ae.offset,
                        'sz',
                        ae.sizeof,
                      );
                    let dn = new DataView(
                      w().buffer,
                      this.pointer + ae.offset,
                      ae.sizeof,
                    )[R._.getters[Ie]](0, B);
                    return (
                      Je.getter && ne('debug.getter:', We, 'result =', dn), dn
                    );
                  }),
                  ae.readOnly
                    ? (Cn.set = P(U.prototype.structName, xe))
                    : (Cn.set = function (dn) {
                        if (
                          (Je.setter &&
                            ne(
                              'debug.setter:',
                              R._.setters[Ie],
                              'for',
                              W(Ie),
                              We,
                              '@',
                              this.pointer,
                              '+',
                              ae.offset,
                              'sz',
                              ae.sizeof,
                              dn,
                            ),
                          this.pointer ||
                            f(
                              'Cannot set struct property on disposed instance.',
                            ),
                          dn === null)
                        )
                          dn = 0;
                        else
                          for (; !Ee(dn); ) {
                            if (Z(ae.signature) && dn instanceof we) {
                              (dn = dn.pointer || 0),
                                Je.setter &&
                                  ne('debug.setter:', We, 'resolved to', dn);
                              break;
                            }
                            f('Invalid value for pointer-type', We + '.');
                          }
                        new DataView(
                          w().buffer,
                          this.pointer + ae.offset,
                          ae.sizeof,
                        )[R._.setters[Ie]](0, R._.sw[Ie](dn), B);
                      }),
                  Object.defineProperty(U.prototype, xe, Cn);
              },
              z = function R(U, Y) {
                arguments.length === 1
                  ? ((Y = U), (U = Y.name))
                  : Y.name || (Y.name = U),
                  U || f('Struct name is required.');
                let ae = !1;
                Object.keys(Y.members).forEach((We) => {
                  const Je = Y.members[We];
                  Je.sizeof
                    ? Je.sizeof === 1
                      ? Je.signature === 'c' ||
                        Je.signature === 'C' ||
                        f(
                          'Unexpected sizeof==1 member',
                          g(Y.name, We),
                          'with signature',
                          Je.signature,
                        )
                      : (Je.sizeof % 4 !== 0 &&
                          (console.warn(
                            'Invalid struct member description =',
                            Je,
                            'from',
                            Y,
                          ),
                          f(
                            U,
                            'member',
                            We,
                            'sizeof is not aligned. sizeof=' + Je.sizeof,
                          )),
                        Je.offset % 4 !== 0 &&
                          (console.warn(
                            'Invalid struct member description =',
                            Je,
                            'from',
                            Y,
                          ),
                          f(
                            U,
                            'member',
                            We,
                            'offset is not aligned. offset=' + Je.offset,
                          )))
                    : f(U, 'member', We, 'is missing sizeof.'),
                    (!ae || ae.offset < Je.offset) && (ae = Je);
                }),
                  ae
                    ? Y.sizeof < ae.offset + ae.sizeof &&
                      f(
                        'Invalid struct config:',
                        U,
                        'max member offset (' + ae.offset + ') ',
                        'extends past end of struct (sizeof=' + Y.sizeof + ').',
                      )
                    : f('No member property descriptions found.');
                const xe = k(p.__makeDebugFlags(R.debugFlags)),
                  Ie = function We(Je) {
                    this instanceof We
                      ? arguments.length
                        ? ((Je !== (Je | 0) || Je <= 0) &&
                            f('Invalid pointer value for', U, 'constructor.'),
                          L(We, this, Je))
                        : L(We, this)
                      : f(
                          'The',
                          U,
                          "constructor may only be called via 'new'.",
                        );
                  };
                return (
                  Object.defineProperties(Ie, {
                    debugFlags: xe,
                    isA: k((We) => We instanceof Ie),
                    memberKey: be,
                    memberKeys: Le,
                    methodInfoForKey: k(function (We) {}),
                    structInfo: k(Y),
                    structName: k(U),
                  }),
                  (Ie.prototype = new we(U, Y, k)),
                  Object.defineProperties(Ie.prototype, {
                    debugFlags: xe,
                    constructor: k(Ie),
                  }),
                  Object.keys(Y.members).forEach((We) =>
                    ge(Ie, We, Y.members[We]),
                  ),
                  Ie
                );
              };
            return (
              (z.StructType = we),
              (z.config = d),
              (z.allocCString = me),
              z.debugFlags || (z.debugFlags = p.__makeDebugFlags(p.debugFlags)),
              z
            );
          }),
          globalThis.sqlite3ApiBootstrap.initializers.push(function (a) {
            const d = (...N) => {
              throw new Error(N.join(' '));
            };
            a.SQLite3Error.toss;
            const f = a.capi,
              p = a.wasm,
              w = a.util;
            if (
              (globalThis.WhWasmUtilInstaller(p),
              delete globalThis.WhWasmUtilInstaller,
              (p.bindingSignatures = [
                [
                  'sqlite3_aggregate_context',
                  'void*',
                  'sqlite3_context*',
                  'int',
                ],
                ['sqlite3_bind_double', 'int', 'sqlite3_stmt*', 'int', 'f64'],
                ['sqlite3_bind_int', 'int', 'sqlite3_stmt*', 'int', 'int'],
                ['sqlite3_bind_null', void 0, 'sqlite3_stmt*', 'int'],
                ['sqlite3_bind_parameter_count', 'int', 'sqlite3_stmt*'],
                [
                  'sqlite3_bind_parameter_index',
                  'int',
                  'sqlite3_stmt*',
                  'string',
                ],
                [
                  'sqlite3_bind_pointer',
                  'int',
                  'sqlite3_stmt*',
                  'int',
                  '*',
                  'string:static',
                  '*',
                ],
                [
                  'sqlite3_busy_handler',
                  'int',
                  [
                    'sqlite3*',
                    new p.xWrap.FuncPtrAdapter({
                      signature: 'i(pi)',
                      contextKey: (N, B) => N[0],
                    }),
                    '*',
                  ],
                ],
                ['sqlite3_busy_timeout', 'int', 'sqlite3*', 'int'],
                ['sqlite3_changes', 'int', 'sqlite3*'],
                ['sqlite3_clear_bindings', 'int', 'sqlite3_stmt*'],
                ['sqlite3_collation_needed', 'int', 'sqlite3*', '*', '*'],
                ['sqlite3_column_blob', '*', 'sqlite3_stmt*', 'int'],
                ['sqlite3_column_bytes', 'int', 'sqlite3_stmt*', 'int'],
                ['sqlite3_column_count', 'int', 'sqlite3_stmt*'],
                ['sqlite3_column_double', 'f64', 'sqlite3_stmt*', 'int'],
                ['sqlite3_column_int', 'int', 'sqlite3_stmt*', 'int'],
                ['sqlite3_column_name', 'string', 'sqlite3_stmt*', 'int'],
                ['sqlite3_column_text', 'string', 'sqlite3_stmt*', 'int'],
                ['sqlite3_column_type', 'int', 'sqlite3_stmt*', 'int'],
                [
                  'sqlite3_column_value',
                  'sqlite3_value*',
                  'sqlite3_stmt*',
                  'int',
                ],
                [
                  'sqlite3_commit_hook',
                  'void*',
                  [
                    'sqlite3*',
                    new p.xWrap.FuncPtrAdapter({
                      name: 'sqlite3_commit_hook',
                      signature: 'i(p)',
                      contextKey: (N) => N[0],
                    }),
                    '*',
                  ],
                ],
                ['sqlite3_compileoption_get', 'string', 'int'],
                ['sqlite3_compileoption_used', 'int', 'string'],
                ['sqlite3_complete', 'int', 'string:flexible'],
                ['sqlite3_context_db_handle', 'sqlite3*', 'sqlite3_context*'],
                ['sqlite3_data_count', 'int', 'sqlite3_stmt*'],
                ['sqlite3_db_filename', 'string', 'sqlite3*', 'string'],
                ['sqlite3_db_handle', 'sqlite3*', 'sqlite3_stmt*'],
                ['sqlite3_db_name', 'string', 'sqlite3*', 'int'],
                [
                  'sqlite3_db_status',
                  'int',
                  'sqlite3*',
                  'int',
                  '*',
                  '*',
                  'int',
                ],
                ['sqlite3_errcode', 'int', 'sqlite3*'],
                ['sqlite3_errmsg', 'string', 'sqlite3*'],
                ['sqlite3_error_offset', 'int', 'sqlite3*'],
                ['sqlite3_errstr', 'string', 'int'],
                [
                  'sqlite3_exec',
                  'int',
                  [
                    'sqlite3*',
                    'string:flexible',
                    new p.xWrap.FuncPtrAdapter({
                      signature: 'i(pipp)',
                      bindScope: 'transient',
                      callProxy: (N) => {
                        let B;
                        return (J, Z, se, W) => {
                          try {
                            const ce = p.cArgvToJs(Z, se);
                            return B || (B = p.cArgvToJs(Z, W)), N(ce, B) | 0;
                          } catch (ce) {
                            return ce.resultCode || f.SQLITE_ERROR;
                          }
                        };
                      },
                    }),
                    '*',
                    '**',
                  ],
                ],
                ['sqlite3_expanded_sql', 'string', 'sqlite3_stmt*'],
                ['sqlite3_extended_errcode', 'int', 'sqlite3*'],
                ['sqlite3_extended_result_codes', 'int', 'sqlite3*', 'int'],
                [
                  'sqlite3_file_control',
                  'int',
                  'sqlite3*',
                  'string',
                  'int',
                  '*',
                ],
                ['sqlite3_finalize', 'int', 'sqlite3_stmt*'],
                ['sqlite3_free', void 0, '*'],
                ['sqlite3_get_autocommit', 'int', 'sqlite3*'],
                ['sqlite3_get_auxdata', '*', 'sqlite3_context*', 'int'],
                ['sqlite3_initialize', void 0],
                ['sqlite3_keyword_count', 'int'],
                ['sqlite3_keyword_name', 'int', ['int', '**', '*']],
                ['sqlite3_keyword_check', 'int', ['string', 'int']],
                ['sqlite3_libversion', 'string'],
                ['sqlite3_libversion_number', 'int'],
                ['sqlite3_limit', 'int', ['sqlite3*', 'int', 'int']],
                ['sqlite3_malloc', '*', 'int'],
                ['sqlite3_open', 'int', 'string', '*'],
                ['sqlite3_open_v2', 'int', 'string', '*', 'int', 'string'],
                [
                  'sqlite3_progress_handler',
                  void 0,
                  [
                    'sqlite3*',
                    'int',
                    new p.xWrap.FuncPtrAdapter({
                      name: 'xProgressHandler',
                      signature: 'i(p)',
                      bindScope: 'context',
                      contextKey: (N, B) => N[0],
                    }),
                    '*',
                  ],
                ],
                ['sqlite3_realloc', '*', '*', 'int'],
                ['sqlite3_reset', 'int', 'sqlite3_stmt*'],
                [
                  'sqlite3_result_blob',
                  void 0,
                  'sqlite3_context*',
                  '*',
                  'int',
                  '*',
                ],
                ['sqlite3_result_double', void 0, 'sqlite3_context*', 'f64'],
                [
                  'sqlite3_result_error',
                  void 0,
                  'sqlite3_context*',
                  'string',
                  'int',
                ],
                [
                  'sqlite3_result_error_code',
                  void 0,
                  'sqlite3_context*',
                  'int',
                ],
                ['sqlite3_result_error_nomem', void 0, 'sqlite3_context*'],
                ['sqlite3_result_error_toobig', void 0, 'sqlite3_context*'],
                ['sqlite3_result_int', void 0, 'sqlite3_context*', 'int'],
                ['sqlite3_result_null', void 0, 'sqlite3_context*'],
                [
                  'sqlite3_result_pointer',
                  void 0,
                  'sqlite3_context*',
                  '*',
                  'string:static',
                  '*',
                ],
                ['sqlite3_result_subtype', void 0, 'sqlite3_value*', 'int'],
                [
                  'sqlite3_result_text',
                  void 0,
                  'sqlite3_context*',
                  'string',
                  'int',
                  '*',
                ],
                ['sqlite3_result_zeroblob', void 0, 'sqlite3_context*', 'int'],
                [
                  'sqlite3_rollback_hook',
                  'void*',
                  [
                    'sqlite3*',
                    new p.xWrap.FuncPtrAdapter({
                      name: 'sqlite3_rollback_hook',
                      signature: 'v(p)',
                      contextKey: (N) => N[0],
                    }),
                    '*',
                  ],
                ],
                [
                  'sqlite3_set_authorizer',
                  'int',
                  [
                    'sqlite3*',
                    new p.xWrap.FuncPtrAdapter({
                      name: 'sqlite3_set_authorizer::xAuth',
                      signature: 'i(pissss)',
                      contextKey: (N, B) => N[0],
                      callProxy: (N) => (B, J, Z, se, W, ce) => {
                        try {
                          return (
                            (Z = Z && p.cstrToJs(Z)),
                            (se = se && p.cstrToJs(se)),
                            (W = W && p.cstrToJs(W)),
                            (ce = ce && p.cstrToJs(ce)),
                            N(B, J, Z, se, W, ce) || 0
                          );
                        } catch (_e) {
                          return _e.resultCode || f.SQLITE_ERROR;
                        }
                      },
                    }),
                    '*',
                  ],
                ],
                [
                  'sqlite3_set_auxdata',
                  void 0,
                  [
                    'sqlite3_context*',
                    'int',
                    '*',
                    new p.xWrap.FuncPtrAdapter({
                      name: 'xDestroyAuxData',
                      signature: 'v(*)',
                      contextKey: (N, B) => N[0],
                    }),
                  ],
                ],
                ['sqlite3_shutdown', void 0],
                ['sqlite3_sourceid', 'string'],
                ['sqlite3_sql', 'string', 'sqlite3_stmt*'],
                ['sqlite3_status', 'int', 'int', '*', '*', 'int'],
                ['sqlite3_step', 'int', 'sqlite3_stmt*'],
                ['sqlite3_stmt_isexplain', 'int', ['sqlite3_stmt*']],
                ['sqlite3_stmt_readonly', 'int', ['sqlite3_stmt*']],
                ['sqlite3_stmt_status', 'int', 'sqlite3_stmt*', 'int', 'int'],
                ['sqlite3_strglob', 'int', 'string', 'string'],
                ['sqlite3_stricmp', 'int', 'string', 'string'],
                ['sqlite3_strlike', 'int', 'string', 'string', 'int'],
                ['sqlite3_strnicmp', 'int', 'string', 'string', 'int'],
                [
                  'sqlite3_table_column_metadata',
                  'int',
                  'sqlite3*',
                  'string',
                  'string',
                  'string',
                  '**',
                  '**',
                  '*',
                  '*',
                  '*',
                ],
                ['sqlite3_total_changes', 'int', 'sqlite3*'],
                [
                  'sqlite3_trace_v2',
                  'int',
                  [
                    'sqlite3*',
                    'int',
                    new p.xWrap.FuncPtrAdapter({
                      name: 'sqlite3_trace_v2::callback',
                      signature: 'i(ippp)',
                      contextKey: (N, B) => N[0],
                    }),
                    '*',
                  ],
                ],
                ['sqlite3_txn_state', 'int', ['sqlite3*', 'string']],
                [
                  'sqlite3_uri_boolean',
                  'int',
                  'sqlite3_filename',
                  'string',
                  'int',
                ],
                ['sqlite3_uri_key', 'string', 'sqlite3_filename', 'int'],
                [
                  'sqlite3_uri_parameter',
                  'string',
                  'sqlite3_filename',
                  'string',
                ],
                ['sqlite3_user_data', 'void*', 'sqlite3_context*'],
                ['sqlite3_value_blob', '*', 'sqlite3_value*'],
                ['sqlite3_value_bytes', 'int', 'sqlite3_value*'],
                ['sqlite3_value_double', 'f64', 'sqlite3_value*'],
                ['sqlite3_value_dup', 'sqlite3_value*', 'sqlite3_value*'],
                ['sqlite3_value_free', void 0, 'sqlite3_value*'],
                ['sqlite3_value_frombind', 'int', 'sqlite3_value*'],
                ['sqlite3_value_int', 'int', 'sqlite3_value*'],
                ['sqlite3_value_nochange', 'int', 'sqlite3_value*'],
                ['sqlite3_value_numeric_type', 'int', 'sqlite3_value*'],
                [
                  'sqlite3_value_pointer',
                  '*',
                  'sqlite3_value*',
                  'string:static',
                ],
                ['sqlite3_value_subtype', 'int', 'sqlite3_value*'],
                ['sqlite3_value_text', 'string', 'sqlite3_value*'],
                ['sqlite3_value_type', 'int', 'sqlite3_value*'],
                ['sqlite3_vfs_find', '*', 'string'],
                ['sqlite3_vfs_register', 'int', 'sqlite3_vfs*', 'int'],
                ['sqlite3_vfs_unregister', 'int', 'sqlite3_vfs*'],
              ]),
              (p.bindingSignatures.int64 = [
                ['sqlite3_bind_int64', 'int', ['sqlite3_stmt*', 'int', 'i64']],
                ['sqlite3_changes64', 'i64', ['sqlite3*']],
                ['sqlite3_column_int64', 'i64', ['sqlite3_stmt*', 'int']],
                [
                  'sqlite3_create_module',
                  'int',
                  ['sqlite3*', 'string', 'sqlite3_module*', '*'],
                ],
                [
                  'sqlite3_create_module_v2',
                  'int',
                  ['sqlite3*', 'string', 'sqlite3_module*', '*', '*'],
                ],
                [
                  'sqlite3_declare_vtab',
                  'int',
                  ['sqlite3*', 'string:flexible'],
                ],
                [
                  'sqlite3_deserialize',
                  'int',
                  'sqlite3*',
                  'string',
                  '*',
                  'i64',
                  'i64',
                  'int',
                ],
                ['sqlite3_drop_modules', 'int', ['sqlite3*', '**']],
                ['sqlite3_last_insert_rowid', 'i64', ['sqlite3*']],
                ['sqlite3_malloc64', '*', 'i64'],
                ['sqlite3_msize', 'i64', '*'],
                [
                  'sqlite3_overload_function',
                  'int',
                  ['sqlite3*', 'string', 'int'],
                ],
                ['sqlite3_preupdate_blobwrite', 'int', 'sqlite3*'],
                ['sqlite3_preupdate_count', 'int', 'sqlite3*'],
                ['sqlite3_preupdate_depth', 'int', 'sqlite3*'],
                [
                  'sqlite3_preupdate_hook',
                  '*',
                  [
                    'sqlite3*',
                    new p.xWrap.FuncPtrAdapter({
                      name: 'sqlite3_preupdate_hook',
                      signature: 'v(ppippjj)',
                      contextKey: (N) => N[0],
                      callProxy: (N) => (B, J, Z, se, W, ce, _e) => {
                        N(B, J, Z, p.cstrToJs(se), p.cstrToJs(W), ce, _e);
                      },
                    }),
                    '*',
                  ],
                ],
                ['sqlite3_preupdate_new', 'int', ['sqlite3*', 'int', '**']],
                ['sqlite3_preupdate_old', 'int', ['sqlite3*', 'int', '**']],
                ['sqlite3_realloc64', '*', '*', 'i64'],
                ['sqlite3_result_int64', void 0, '*', 'i64'],
                ['sqlite3_result_zeroblob64', 'int', '*', 'i64'],
                ['sqlite3_serialize', '*', 'sqlite3*', 'string', '*', 'int'],
                ['sqlite3_set_last_insert_rowid', void 0, ['sqlite3*', 'i64']],
                ['sqlite3_status64', 'int', 'int', '*', '*', 'int'],
                ['sqlite3_total_changes64', 'i64', ['sqlite3*']],
                [
                  'sqlite3_update_hook',
                  '*',
                  [
                    'sqlite3*',
                    new p.xWrap.FuncPtrAdapter({
                      name: 'sqlite3_update_hook',
                      signature: 'v(iippj)',
                      contextKey: (N) => N[0],
                      callProxy: (N) => (B, J, Z, se, W) => {
                        N(B, J, p.cstrToJs(Z), p.cstrToJs(se), W);
                      },
                    }),
                    '*',
                  ],
                ],
                [
                  'sqlite3_uri_int64',
                  'i64',
                  ['sqlite3_filename', 'string', 'i64'],
                ],
                ['sqlite3_value_int64', 'i64', 'sqlite3_value*'],
                [
                  'sqlite3_vtab_collation',
                  'string',
                  'sqlite3_index_info*',
                  'int',
                ],
                ['sqlite3_vtab_distinct', 'int', 'sqlite3_index_info*'],
                ['sqlite3_vtab_in', 'int', 'sqlite3_index_info*', 'int', 'int'],
                ['sqlite3_vtab_in_first', 'int', 'sqlite3_value*', '**'],
                ['sqlite3_vtab_in_next', 'int', 'sqlite3_value*', '**'],
                ['sqlite3_vtab_nochange', 'int', 'sqlite3_context*'],
                ['sqlite3_vtab_on_conflict', 'int', 'sqlite3*'],
                [
                  'sqlite3_vtab_rhs_value',
                  'int',
                  'sqlite3_index_info*',
                  'int',
                  '**',
                ],
              ]),
              p.bigIntEnabled && p.exports.sqlite3changegroup_add)
            ) {
              const N = {
                signature: 'i(ps)',
                callProxy: (B) => (J, Z) => {
                  try {
                    return B(J, p.cstrToJs(Z)) | 0;
                  } catch (se) {
                    return se.resultCode || f.SQLITE_ERROR;
                  }
                },
              };
              p.bindingSignatures.int64.push(
                [
                  'sqlite3changegroup_add',
                  'int',
                  ['sqlite3_changegroup*', 'int', 'void*'],
                ],
                [
                  'sqlite3changegroup_add_strm',
                  'int',
                  [
                    'sqlite3_changegroup*',
                    new p.xWrap.FuncPtrAdapter({
                      name: 'xInput',
                      signature: 'i(ppp)',
                      bindScope: 'transient',
                    }),
                    'void*',
                  ],
                ],
                ['sqlite3changegroup_delete', void 0, ['sqlite3_changegroup*']],
                ['sqlite3changegroup_new', 'int', ['**']],
                [
                  'sqlite3changegroup_output',
                  'int',
                  ['sqlite3_changegroup*', 'int*', '**'],
                ],
                [
                  'sqlite3changegroup_output_strm',
                  'int',
                  [
                    'sqlite3_changegroup*',
                    new p.xWrap.FuncPtrAdapter({
                      name: 'xOutput',
                      signature: 'i(ppi)',
                      bindScope: 'transient',
                    }),
                    'void*',
                  ],
                ],
                [
                  'sqlite3changeset_apply',
                  'int',
                  [
                    'sqlite3*',
                    'int',
                    'void*',
                    new p.xWrap.FuncPtrAdapter({
                      name: 'xFilter',
                      bindScope: 'transient',
                      ...N,
                    }),
                    new p.xWrap.FuncPtrAdapter({
                      name: 'xConflict',
                      signature: 'i(pip)',
                      bindScope: 'transient',
                    }),
                    'void*',
                  ],
                ],
                [
                  'sqlite3changeset_apply_strm',
                  'int',
                  [
                    'sqlite3*',
                    new p.xWrap.FuncPtrAdapter({
                      name: 'xInput',
                      signature: 'i(ppp)',
                      bindScope: 'transient',
                    }),
                    'void*',
                    new p.xWrap.FuncPtrAdapter({
                      name: 'xFilter',
                      bindScope: 'transient',
                      ...N,
                    }),
                    new p.xWrap.FuncPtrAdapter({
                      name: 'xConflict',
                      signature: 'i(pip)',
                      bindScope: 'transient',
                    }),
                    'void*',
                  ],
                ],
                [
                  'sqlite3changeset_apply_v2',
                  'int',
                  [
                    'sqlite3*',
                    'int',
                    'void*',
                    new p.xWrap.FuncPtrAdapter({
                      name: 'xFilter',
                      bindScope: 'transient',
                      ...N,
                    }),
                    new p.xWrap.FuncPtrAdapter({
                      name: 'xConflict',
                      signature: 'i(pip)',
                      bindScope: 'transient',
                    }),
                    'void*',
                    '**',
                    'int*',
                    'int',
                  ],
                ],
                [
                  'sqlite3changeset_apply_v2_strm',
                  'int',
                  [
                    'sqlite3*',
                    new p.xWrap.FuncPtrAdapter({
                      name: 'xInput',
                      signature: 'i(ppp)',
                      bindScope: 'transient',
                    }),
                    'void*',
                    new p.xWrap.FuncPtrAdapter({
                      name: 'xFilter',
                      bindScope: 'transient',
                      ...N,
                    }),
                    new p.xWrap.FuncPtrAdapter({
                      name: 'xConflict',
                      signature: 'i(pip)',
                      bindScope: 'transient',
                    }),
                    'void*',
                    '**',
                    'int*',
                    'int',
                  ],
                ],
                [
                  'sqlite3changeset_concat',
                  'int',
                  ['int', 'void*', 'int', 'void*', 'int*', '**'],
                ],
                [
                  'sqlite3changeset_concat_strm',
                  'int',
                  [
                    new p.xWrap.FuncPtrAdapter({
                      name: 'xInputA',
                      signature: 'i(ppp)',
                      bindScope: 'transient',
                    }),
                    'void*',
                    new p.xWrap.FuncPtrAdapter({
                      name: 'xInputB',
                      signature: 'i(ppp)',
                      bindScope: 'transient',
                    }),
                    'void*',
                    new p.xWrap.FuncPtrAdapter({
                      name: 'xOutput',
                      signature: 'i(ppi)',
                      bindScope: 'transient',
                    }),
                    'void*',
                  ],
                ],
                [
                  'sqlite3changeset_conflict',
                  'int',
                  ['sqlite3_changeset_iter*', 'int', '**'],
                ],
                [
                  'sqlite3changeset_finalize',
                  'int',
                  ['sqlite3_changeset_iter*'],
                ],
                [
                  'sqlite3changeset_fk_conflicts',
                  'int',
                  ['sqlite3_changeset_iter*', 'int*'],
                ],
                [
                  'sqlite3changeset_invert',
                  'int',
                  ['int', 'void*', 'int*', '**'],
                ],
                [
                  'sqlite3changeset_invert_strm',
                  'int',
                  [
                    new p.xWrap.FuncPtrAdapter({
                      name: 'xInput',
                      signature: 'i(ppp)',
                      bindScope: 'transient',
                    }),
                    'void*',
                    new p.xWrap.FuncPtrAdapter({
                      name: 'xOutput',
                      signature: 'i(ppi)',
                      bindScope: 'transient',
                    }),
                    'void*',
                  ],
                ],
                [
                  'sqlite3changeset_new',
                  'int',
                  ['sqlite3_changeset_iter*', 'int', '**'],
                ],
                ['sqlite3changeset_next', 'int', ['sqlite3_changeset_iter*']],
                [
                  'sqlite3changeset_old',
                  'int',
                  ['sqlite3_changeset_iter*', 'int', '**'],
                ],
                [
                  'sqlite3changeset_op',
                  'int',
                  ['sqlite3_changeset_iter*', '**', 'int*', 'int*', 'int*'],
                ],
                [
                  'sqlite3changeset_pk',
                  'int',
                  ['sqlite3_changeset_iter*', '**', 'int*'],
                ],
                ['sqlite3changeset_start', 'int', ['**', 'int', '*']],
                [
                  'sqlite3changeset_start_strm',
                  'int',
                  [
                    '**',
                    new p.xWrap.FuncPtrAdapter({
                      name: 'xInput',
                      signature: 'i(ppp)',
                      bindScope: 'transient',
                    }),
                    'void*',
                  ],
                ],
                ['sqlite3changeset_start_v2', 'int', ['**', 'int', '*', 'int']],
                [
                  'sqlite3changeset_start_v2_strm',
                  'int',
                  [
                    '**',
                    new p.xWrap.FuncPtrAdapter({
                      name: 'xInput',
                      signature: 'i(ppp)',
                      bindScope: 'transient',
                    }),
                    'void*',
                    'int',
                  ],
                ],
                [
                  'sqlite3session_attach',
                  'int',
                  ['sqlite3_session*', 'string'],
                ],
                [
                  'sqlite3session_changeset',
                  'int',
                  ['sqlite3_session*', 'int*', '**'],
                ],
                ['sqlite3session_changeset_size', 'i64', ['sqlite3_session*']],
                [
                  'sqlite3session_changeset_strm',
                  'int',
                  [
                    'sqlite3_session*',
                    new p.xWrap.FuncPtrAdapter({
                      name: 'xOutput',
                      signature: 'i(ppp)',
                      bindScope: 'transient',
                    }),
                    'void*',
                  ],
                ],
                ['sqlite3session_config', 'int', ['int', 'void*']],
                ['sqlite3session_create', 'int', ['sqlite3*', 'string', '**']],
                [
                  'sqlite3session_diff',
                  'int',
                  ['sqlite3_session*', 'string', 'string', '**'],
                ],
                ['sqlite3session_enable', 'int', ['sqlite3_session*', 'int']],
                ['sqlite3session_indirect', 'int', ['sqlite3_session*', 'int']],
                ['sqlite3session_isempty', 'int', ['sqlite3_session*']],
                ['sqlite3session_memory_used', 'i64', ['sqlite3_session*']],
                [
                  'sqlite3session_object_config',
                  'int',
                  ['sqlite3_session*', 'int', 'void*'],
                ],
                [
                  'sqlite3session_patchset',
                  'int',
                  ['sqlite3_session*', '*', '**'],
                ],
                [
                  'sqlite3session_patchset_strm',
                  'int',
                  [
                    'sqlite3_session*',
                    new p.xWrap.FuncPtrAdapter({
                      name: 'xOutput',
                      signature: 'i(ppp)',
                      bindScope: 'transient',
                    }),
                    'void*',
                  ],
                ],
                [
                  'sqlite3session_table_filter',
                  void 0,
                  [
                    'sqlite3_session*',
                    new p.xWrap.FuncPtrAdapter({
                      name: 'xFilter',
                      ...N,
                      contextKey: (B, J) => B[0],
                    }),
                    '*',
                  ],
                ],
              );
            }
            (p.bindingSignatures.wasmInternal = [
              ['sqlite3__wasm_db_reset', 'int', 'sqlite3*'],
              ['sqlite3__wasm_db_vfs', 'sqlite3_vfs*', 'sqlite3*', 'string'],
              [
                'sqlite3__wasm_vfs_create_file',
                'int',
                'sqlite3_vfs*',
                'string',
                '*',
                'int',
              ],
              ['sqlite3__wasm_posix_create_file', 'int', 'string', '*', 'int'],
              ['sqlite3__wasm_vfs_unlink', 'int', 'sqlite3_vfs*', 'string'],
              ['sqlite3__wasm_qfmt_token', 'string:dealloc', 'string', 'int'],
            ]),
              (a.StructBinder = globalThis.Jaccwabyt({
                heap: p.heap8u,
                alloc: p.alloc,
                dealloc: p.dealloc,
                bigIntEnabled: p.bigIntEnabled,
                memberPrefix: '$',
              })),
              delete globalThis.Jaccwabyt;
            {
              const N = p.xWrap.argAdapter('string');
              p.xWrap.argAdapter('string:flexible', (W) =>
                N(w.flexibleString(W)),
              ),
                p.xWrap.argAdapter(
                  'string:static',
                  function (W) {
                    return p.isPtr(W)
                      ? W
                      : ((W = '' + W),
                        this[W] || (this[W] = p.allocCString(W)));
                  }.bind(Object.create(null)),
                );
              const B = p.xWrap.argAdapter('*'),
                J = function () {};
              p.xWrap.argAdapter('sqlite3_filename', B)('sqlite3_context*', B)(
                'sqlite3_value*',
                B,
              )('void*', B)('sqlite3_changegroup*', B)(
                'sqlite3_changeset_iter*',
                B,
              )('sqlite3_session*', B)('sqlite3_stmt*', (W) => {
                var ce;
                return B(
                  W instanceof
                    (((ce = a == null ? void 0 : a.oo1) == null
                      ? void 0
                      : ce.Stmt) || J)
                    ? W.pointer
                    : W,
                );
              })('sqlite3*', (W) => {
                var ce;
                return B(
                  W instanceof
                    (((ce = a == null ? void 0 : a.oo1) == null
                      ? void 0
                      : ce.DB) || J)
                    ? W.pointer
                    : W,
                );
              })('sqlite3_index_info*', (W) =>
                B(W instanceof (f.sqlite3_index_info || J) ? W.pointer : W),
              )('sqlite3_module*', (W) =>
                B(W instanceof (f.sqlite3_module || J) ? W.pointer : W),
              )('sqlite3_vfs*', (W) =>
                typeof W == 'string'
                  ? f.sqlite3_vfs_find(W) ||
                    a.SQLite3Error.toss(
                      f.SQLITE_NOTFOUND,
                      'Unknown sqlite3_vfs name:',
                      W,
                    )
                  : B(W instanceof (f.sqlite3_vfs || J) ? W.pointer : W),
              );
              const Z = p.xWrap.resultAdapter('*');
              p.xWrap.resultAdapter('sqlite3*', Z)('sqlite3_context*', Z)(
                'sqlite3_stmt*',
                Z,
              )('sqlite3_value*', Z)('sqlite3_vfs*', Z)('void*', Z),
                p.exports.sqlite3_step.length === 0 &&
                  ((p.xWrap.doArgcCheck = !1),
                  a.config.warn(
                    'Disabling sqlite3.wasm.xWrap.doArgcCheck due to environmental quirks.',
                  ));
              for (const W of p.bindingSignatures)
                f[W[0]] = p.xWrap.apply(null, W);
              for (const W of p.bindingSignatures.wasmInternal)
                w[W[0]] = p.xWrap.apply(null, W);
              const se = function (W) {
                return () =>
                  d(
                    W + '() is unavailable due to lack',
                    'of BigInt support in this build.',
                  );
              };
              for (const W of p.bindingSignatures.int64)
                f[W[0]] = p.bigIntEnabled ? p.xWrap.apply(null, W) : se(W[0]);
              if (
                (delete p.bindingSignatures, p.exports.sqlite3__wasm_db_error)
              ) {
                const W = p.xWrap(
                  'sqlite3__wasm_db_error',
                  'int',
                  'sqlite3*',
                  'int',
                  'string',
                );
                w.sqlite3__wasm_db_error = function (ce, _e, E) {
                  return (
                    _e instanceof a.WasmAllocError
                      ? ((_e = f.SQLITE_NOMEM), (E = 0))
                      : _e instanceof Error &&
                        ((E = E || '' + _e),
                        (_e = _e.resultCode || f.SQLITE_ERROR)),
                    ce ? W(ce, _e, E) : _e
                  );
                };
              } else
                w.sqlite3__wasm_db_error = function (W, ce, _e) {
                  return (
                    console.warn(
                      'sqlite3__wasm_db_error() is not exported.',
                      arguments,
                    ),
                    ce
                  );
                };
            }
            {
              const N = p.xCall('sqlite3__wasm_enum_json');
              N ||
                d(
                  "Maintenance required: increase sqlite3__wasm_enum_json()'s",
                  'static buffer size!',
                ),
                (p.ctype = JSON.parse(p.cstrToJs(N)));
              const B = [
                'access',
                'authorizer',
                'blobFinalizers',
                'changeset',
                'config',
                'dataTypes',
                'dbConfig',
                'dbStatus',
                'encodings',
                'fcntl',
                'flock',
                'ioCap',
                'limits',
                'openFlags',
                'prepareFlags',
                'resultCodes',
                'sqlite3Status',
                'stmtStatus',
                'syncFlags',
                'trace',
                'txnState',
                'udfFlags',
                'version',
              ];
              p.bigIntEnabled && B.push('serialize', 'session', 'vtab');
              for (const se of B)
                for (const W of Object.entries(p.ctype[se])) f[W[0]] = W[1];
              p.functionEntry(f.SQLITE_WASM_DEALLOC) ||
                d(
                  'Internal error: cannot resolve exported function',
                  'entry SQLITE_WASM_DEALLOC (==' +
                    f.SQLITE_WASM_DEALLOC +
                    ').',
                );
              const J = Object.create(null);
              for (const se of ['resultCodes'])
                for (const W of Object.entries(p.ctype[se])) J[W[1]] = W[0];
              f.sqlite3_js_rc_str = (se) => J[se];
              const Z = Object.assign(Object.create(null), {
                WasmTestStruct: !0,
                sqlite3_kvvfs_methods: !w.isUIThread(),
                sqlite3_index_info: !p.bigIntEnabled,
                sqlite3_index_constraint: !p.bigIntEnabled,
                sqlite3_index_orderby: !p.bigIntEnabled,
                sqlite3_index_constraint_usage: !p.bigIntEnabled,
              });
              for (const se of p.ctype.structs)
                Z[se.name] || (f[se.name] = a.StructBinder(se));
              if (f.sqlite3_index_info) {
                for (const se of [
                  'sqlite3_index_constraint',
                  'sqlite3_index_orderby',
                  'sqlite3_index_constraint_usage',
                ])
                  (f.sqlite3_index_info[se] = f[se]), delete f[se];
                f.sqlite3_vtab_config = p.xWrap(
                  'sqlite3__wasm_vtab_config',
                  'int',
                  ['sqlite3*', 'int', 'int'],
                );
              }
            }
            const O = (N, B, J) =>
                w.sqlite3__wasm_db_error(
                  N,
                  f.SQLITE_MISUSE,
                  B +
                    '() requires ' +
                    J +
                    ' argument' +
                    (J === 1 ? '' : 's') +
                    '.',
                ),
              M = (N) =>
                w.sqlite3__wasm_db_error(
                  N,
                  f.SQLITE_FORMAT,
                  'SQLITE_UTF8 is the only supported encoding.',
                ),
              ne = (N) => p.xWrap.argAdapter('sqlite3*')(N),
              re = (N) => (p.isPtr(N) ? p.cstrToJs(N) : N),
              pe = function (N, B) {
                N = ne(N);
                let J = this.dbMap.get(N);
                if (B)
                  !J && B > 0 && this.dbMap.set(N, (J = Object.create(null)));
                else return this.dbMap.delete(N), J;
                return J;
              }.bind(Object.assign(Object.create(null), { dbMap: new Map() }));
            (pe.addCollation = function (N, B) {
              const J = pe(N, 1);
              J.collation || (J.collation = new Set()),
                J.collation.add(re(B).toLowerCase());
            }),
              (pe._addUDF = function (N, B, J, Z) {
                B = re(B).toLowerCase();
                let se = Z.get(B);
                se || Z.set(B, (se = new Set())), se.add(J < 0 ? -1 : J);
              }),
              (pe.addFunction = function (N, B, J) {
                const Z = pe(N, 1);
                Z.udf || (Z.udf = new Map()), this._addUDF(N, B, J, Z.udf);
              }),
              (pe.addWindowFunc = function (N, B, J) {
                const Z = pe(N, 1);
                Z.wudf || (Z.wudf = new Map()), this._addUDF(N, B, J, Z.wudf);
              }),
              (pe.cleanup = function (N) {
                N = ne(N);
                const B = [N];
                for (const se of [
                  'sqlite3_busy_handler',
                  'sqlite3_commit_hook',
                  'sqlite3_preupdate_hook',
                  'sqlite3_progress_handler',
                  'sqlite3_rollback_hook',
                  'sqlite3_set_authorizer',
                  'sqlite3_trace_v2',
                  'sqlite3_update_hook',
                ]) {
                  const W = p.exports[se];
                  B.length = W.length;
                  try {
                    f[se](...B);
                  } catch (ce) {
                    console.warn(
                      'close-time call of',
                      se + '(',
                      B,
                      ') threw:',
                      ce,
                    );
                  }
                }
                const J = pe(N, 0);
                if (!J) return;
                if (J.collation) {
                  for (const se of J.collation)
                    try {
                      f.sqlite3_create_collation_v2(
                        N,
                        se,
                        f.SQLITE_UTF8,
                        0,
                        0,
                        0,
                      );
                    } catch {}
                  delete J.collation;
                }
                let Z;
                for (Z = 0; Z < 2; ++Z) {
                  const se = Z ? J.wudf : J.udf;
                  if (!se) continue;
                  const W = Z
                    ? f.sqlite3_create_window_function
                    : f.sqlite3_create_function_v2;
                  for (const ce of se) {
                    const _e = ce[0],
                      E = ce[1],
                      D = [N, _e, 0, f.SQLITE_UTF8, 0, 0, 0, 0, 0];
                    Z && D.push(0);
                    for (const g of E)
                      try {
                        (D[2] = g), W.apply(null, D);
                      } catch {}
                    E.clear();
                  }
                  se.clear();
                }
                delete J.udf, delete J.wudf;
              });
            {
              const N = p.xWrap('sqlite3_close_v2', 'int', 'sqlite3*');
              f.sqlite3_close_v2 = function (B) {
                if (arguments.length !== 1) return O(B, 'sqlite3_close_v2', 1);
                if (B)
                  try {
                    pe.cleanup(B);
                  } catch {}
                return N(B);
              };
            }
            if (f.sqlite3session_table_filter) {
              const N = p.xWrap('sqlite3session_delete', void 0, [
                'sqlite3_session*',
              ]);
              f.sqlite3session_delete = function (B) {
                if (arguments.length !== 1)
                  return O(pDb, 'sqlite3session_delete', 1);
                B && f.sqlite3session_table_filter(B, 0, 0), N(B);
              };
            }
            {
              const N = (J, Z) =>
                  'argv[' +
                  Z +
                  ']:' +
                  J[0] +
                  ':' +
                  p.cstrToJs(J[1]).toLowerCase(),
                B = p.xWrap('sqlite3_create_collation_v2', 'int', [
                  'sqlite3*',
                  'string',
                  'int',
                  '*',
                  new p.xWrap.FuncPtrAdapter({
                    name: 'xCompare',
                    signature: 'i(pipip)',
                    contextKey: N,
                  }),
                  new p.xWrap.FuncPtrAdapter({
                    name: 'xDestroy',
                    signature: 'v(p)',
                    contextKey: N,
                  }),
                ]);
              (f.sqlite3_create_collation_v2 = function (J, Z, se, W, ce, _e) {
                if (arguments.length !== 6)
                  return O(J, 'sqlite3_create_collation_v2', 6);
                if (!(se & 15)) se |= f.SQLITE_UTF8;
                else if (f.SQLITE_UTF8 !== (se & 15)) return M(J);
                try {
                  const E = B(J, Z, se, W, ce, _e);
                  return (
                    E === 0 && ce instanceof Function && pe.addCollation(J, Z),
                    E
                  );
                } catch (E) {
                  return w.sqlite3__wasm_db_error(J, E);
                }
              }),
                (f.sqlite3_create_collation = (J, Z, se, W, ce) =>
                  arguments.length === 5
                    ? f.sqlite3_create_collation_v2(J, Z, se, W, ce, 0)
                    : O(J, 'sqlite3_create_collation', 5));
            }
            {
              const N = function (se, W) {
                  return (
                    se[0] +
                    ':' +
                    (se[2] < 0 ? -1 : se[2]) +
                    ':' +
                    W +
                    ':' +
                    p.cstrToJs(se[1]).toLowerCase()
                  );
                },
                B = Object.assign(Object.create(null), {
                  xInverseAndStep: {
                    signature: 'v(pip)',
                    contextKey: N,
                    callProxy: (se) => (W, ce, _e) => {
                      try {
                        se(W, ...f.sqlite3_values_to_js(ce, _e));
                      } catch (E) {
                        f.sqlite3_result_error_js(W, E);
                      }
                    },
                  },
                  xFinalAndValue: {
                    signature: 'v(p)',
                    contextKey: N,
                    callProxy: (se) => (W) => {
                      try {
                        f.sqlite3_result_js(W, se(W));
                      } catch (ce) {
                        f.sqlite3_result_error_js(W, ce);
                      }
                    },
                  },
                  xFunc: {
                    signature: 'v(pip)',
                    contextKey: N,
                    callProxy: (se) => (W, ce, _e) => {
                      try {
                        f.sqlite3_result_js(
                          W,
                          se(W, ...f.sqlite3_values_to_js(ce, _e)),
                        );
                      } catch (E) {
                        f.sqlite3_result_error_js(W, E);
                      }
                    },
                  },
                  xDestroy: {
                    signature: 'v(p)',
                    contextKey: N,
                    callProxy: (se) => (W) => {
                      try {
                        se(W);
                      } catch (ce) {
                        console.error('UDF xDestroy method threw:', ce);
                      }
                    },
                  },
                }),
                J = p.xWrap('sqlite3_create_function_v2', 'int', [
                  'sqlite3*',
                  'string',
                  'int',
                  'int',
                  '*',
                  new p.xWrap.FuncPtrAdapter({ name: 'xFunc', ...B.xFunc }),
                  new p.xWrap.FuncPtrAdapter({
                    name: 'xStep',
                    ...B.xInverseAndStep,
                  }),
                  new p.xWrap.FuncPtrAdapter({
                    name: 'xFinal',
                    ...B.xFinalAndValue,
                  }),
                  new p.xWrap.FuncPtrAdapter({
                    name: 'xDestroy',
                    ...B.xDestroy,
                  }),
                ]),
                Z = p.xWrap('sqlite3_create_window_function', 'int', [
                  'sqlite3*',
                  'string',
                  'int',
                  'int',
                  '*',
                  new p.xWrap.FuncPtrAdapter({
                    name: 'xStep',
                    ...B.xInverseAndStep,
                  }),
                  new p.xWrap.FuncPtrAdapter({
                    name: 'xFinal',
                    ...B.xFinalAndValue,
                  }),
                  new p.xWrap.FuncPtrAdapter({
                    name: 'xValue',
                    ...B.xFinalAndValue,
                  }),
                  new p.xWrap.FuncPtrAdapter({
                    name: 'xInverse',
                    ...B.xInverseAndStep,
                  }),
                  new p.xWrap.FuncPtrAdapter({
                    name: 'xDestroy',
                    ...B.xDestroy,
                  }),
                ]);
              (f.sqlite3_create_function_v2 = function se(
                W,
                ce,
                _e,
                E,
                D,
                g,
                P,
                S,
                A,
              ) {
                if (se.length !== arguments.length)
                  return O(W, 'sqlite3_create_function_v2', se.length);
                if (!(E & 15)) E |= f.SQLITE_UTF8;
                else if (f.SQLITE_UTF8 !== (E & 15)) return M(W);
                try {
                  const b = J(W, ce, _e, E, D, g, P, S, A);
                  return (
                    b === 0 &&
                      (g instanceof Function ||
                        P instanceof Function ||
                        S instanceof Function ||
                        A instanceof Function) &&
                      pe.addFunction(W, ce, _e),
                    b
                  );
                } catch (b) {
                  return (
                    console.error(
                      'sqlite3_create_function_v2() setup threw:',
                      b,
                    ),
                    w.sqlite3__wasm_db_error(
                      W,
                      b,
                      'Creation of UDF threw: ' + b,
                    )
                  );
                }
              }),
                (f.sqlite3_create_function = function se(
                  W,
                  ce,
                  _e,
                  E,
                  D,
                  g,
                  P,
                  S,
                ) {
                  return se.length === arguments.length
                    ? f.sqlite3_create_function_v2(W, ce, _e, E, D, g, P, S, 0)
                    : O(W, 'sqlite3_create_function', se.length);
                }),
                (f.sqlite3_create_window_function = function se(
                  W,
                  ce,
                  _e,
                  E,
                  D,
                  g,
                  P,
                  S,
                  A,
                  b,
                ) {
                  if (se.length !== arguments.length)
                    return O(W, 'sqlite3_create_window_function', se.length);
                  if (!(E & 15)) E |= f.SQLITE_UTF8;
                  else if (f.SQLITE_UTF8 !== (E & 15)) return M(W);
                  try {
                    const k = Z(W, ce, _e, E, D, g, P, S, A, b);
                    return (
                      k === 0 &&
                        (g instanceof Function ||
                          P instanceof Function ||
                          S instanceof Function ||
                          A instanceof Function ||
                          b instanceof Function) &&
                        pe.addWindowFunc(W, ce, _e),
                      k
                    );
                  } catch (k) {
                    return (
                      console.error(
                        'sqlite3_create_window_function() setup threw:',
                        k,
                      ),
                      w.sqlite3__wasm_db_error(
                        W,
                        k,
                        'Creation of UDF threw: ' + k,
                      )
                    );
                  }
                }),
                (f.sqlite3_create_function_v2.udfSetResult =
                  f.sqlite3_create_function.udfSetResult =
                  f.sqlite3_create_window_function.udfSetResult =
                    f.sqlite3_result_js),
                (f.sqlite3_create_function_v2.udfConvertArgs =
                  f.sqlite3_create_function.udfConvertArgs =
                  f.sqlite3_create_window_function.udfConvertArgs =
                    f.sqlite3_values_to_js),
                (f.sqlite3_create_function_v2.udfSetError =
                  f.sqlite3_create_function.udfSetError =
                  f.sqlite3_create_window_function.udfSetError =
                    f.sqlite3_result_error_js);
            }
            {
              const N = (J, Z) => (
                  typeof J == 'string'
                    ? (Z = -1)
                    : w.isSQLableTypedArray(J)
                      ? ((Z = J.byteLength),
                        (J = w.typedArrayToString(
                          J instanceof ArrayBuffer ? new Uint8Array(J) : J,
                        )))
                      : Array.isArray(J) && ((J = J.join('')), (Z = -1)),
                  [J, Z]
                ),
                B = {
                  basic: p.xWrap('sqlite3_prepare_v3', 'int', [
                    'sqlite3*',
                    'string',
                    'int',
                    'int',
                    '**',
                    '**',
                  ]),
                  full: p.xWrap('sqlite3_prepare_v3', 'int', [
                    'sqlite3*',
                    '*',
                    'int',
                    'int',
                    '**',
                    '**',
                  ]),
                };
              (f.sqlite3_prepare_v3 = function J(Z, se, W, ce, _e, E) {
                if (J.length !== arguments.length)
                  return O(Z, 'sqlite3_prepare_v3', J.length);
                const [D, g] = N(se, W);
                switch (typeof D) {
                  case 'string':
                    return B.basic(Z, D, g, ce, _e, null);
                  case 'number':
                    return B.full(Z, D, g, ce, _e, E);
                  default:
                    return w.sqlite3__wasm_db_error(
                      Z,
                      f.SQLITE_MISUSE,
                      'Invalid SQL argument type for sqlite3_prepare_v2/v3().',
                    );
                }
              }),
                (f.sqlite3_prepare_v2 = function J(Z, se, W, ce, _e) {
                  return J.length === arguments.length
                    ? f.sqlite3_prepare_v3(Z, se, W, 0, ce, _e)
                    : O(Z, 'sqlite3_prepare_v2', J.length);
                });
            }
            {
              const N = p.xWrap('sqlite3_bind_text', 'int', [
                  'sqlite3_stmt*',
                  'int',
                  'string',
                  'int',
                  '*',
                ]),
                B = p.xWrap('sqlite3_bind_blob', 'int', [
                  'sqlite3_stmt*',
                  'int',
                  '*',
                  'int',
                  '*',
                ]);
              (f.sqlite3_bind_text = function J(Z, se, W, ce, _e) {
                if (J.length !== arguments.length)
                  return O(
                    f.sqlite3_db_handle(Z),
                    'sqlite3_bind_text',
                    J.length,
                  );
                if (p.isPtr(W) || W === null) return N(Z, se, W, ce, _e);
                W instanceof ArrayBuffer
                  ? (W = new Uint8Array(W))
                  : Array.isArray(pMem) && (W = pMem.join(''));
                let E, D;
                try {
                  if (w.isSQLableTypedArray(W))
                    (E = p.allocFromTypedArray(W)), (D = W.byteLength);
                  else if (typeof W == 'string') [E, D] = p.allocCString(W);
                  else
                    return w.sqlite3__wasm_db_error(
                      f.sqlite3_db_handle(Z),
                      f.SQLITE_MISUSE,
                      'Invalid 3rd argument type for sqlite3_bind_text().',
                    );
                  return N(Z, se, E, D, f.SQLITE_WASM_DEALLOC);
                } catch (g) {
                  return (
                    p.dealloc(E),
                    w.sqlite3__wasm_db_error(f.sqlite3_db_handle(Z), g)
                  );
                }
              }),
                (f.sqlite3_bind_blob = function J(Z, se, W, ce, _e) {
                  if (J.length !== arguments.length)
                    return O(
                      f.sqlite3_db_handle(Z),
                      'sqlite3_bind_blob',
                      J.length,
                    );
                  if (p.isPtr(W) || W === null) return B(Z, se, W, ce, _e);
                  W instanceof ArrayBuffer
                    ? (W = new Uint8Array(W))
                    : Array.isArray(W) && (W = W.join(''));
                  let E, D;
                  try {
                    if (w.isBindableTypedArray(W))
                      (E = p.allocFromTypedArray(W)),
                        (D = ce >= 0 ? ce : W.byteLength);
                    else if (typeof W == 'string') [E, D] = p.allocCString(W);
                    else
                      return w.sqlite3__wasm_db_error(
                        f.sqlite3_db_handle(Z),
                        f.SQLITE_MISUSE,
                        'Invalid 3rd argument type for sqlite3_bind_blob().',
                      );
                    return B(Z, se, E, D, f.SQLITE_WASM_DEALLOC);
                  } catch (g) {
                    return (
                      p.dealloc(E),
                      w.sqlite3__wasm_db_error(f.sqlite3_db_handle(Z), g)
                    );
                  }
                });
            }
            f.sqlite3_config = function (N, ...B) {
              if (arguments.length < 2) return f.SQLITE_MISUSE;
              switch (N) {
                case f.SQLITE_CONFIG_COVERING_INDEX_SCAN:
                case f.SQLITE_CONFIG_MEMSTATUS:
                case f.SQLITE_CONFIG_SMALL_MALLOC:
                case f.SQLITE_CONFIG_SORTERREF_SIZE:
                case f.SQLITE_CONFIG_STMTJRNL_SPILL:
                case f.SQLITE_CONFIG_URI:
                  return p.exports.sqlite3__wasm_config_i(N, B[0]);
                case f.SQLITE_CONFIG_LOOKASIDE:
                  return p.exports.sqlite3__wasm_config_ii(N, B[0], B[1]);
                case f.SQLITE_CONFIG_MEMDB_MAXSIZE:
                  return p.exports.sqlite3__wasm_config_j(N, B[0]);
                case f.SQLITE_CONFIG_GETMALLOC:
                case f.SQLITE_CONFIG_GETMUTEX:
                case f.SQLITE_CONFIG_GETPCACHE2:
                case f.SQLITE_CONFIG_GETPCACHE:
                case f.SQLITE_CONFIG_HEAP:
                case f.SQLITE_CONFIG_LOG:
                case f.SQLITE_CONFIG_MALLOC:
                case f.SQLITE_CONFIG_MMAP_SIZE:
                case f.SQLITE_CONFIG_MULTITHREAD:
                case f.SQLITE_CONFIG_MUTEX:
                case f.SQLITE_CONFIG_PAGECACHE:
                case f.SQLITE_CONFIG_PCACHE2:
                case f.SQLITE_CONFIG_PCACHE:
                case f.SQLITE_CONFIG_PCACHE_HDRSZ:
                case f.SQLITE_CONFIG_PMASZ:
                case f.SQLITE_CONFIG_SERIALIZED:
                case f.SQLITE_CONFIG_SINGLETHREAD:
                case f.SQLITE_CONFIG_SQLLOG:
                case f.SQLITE_CONFIG_WIN32_HEAPSIZE:
                default:
                  return f.SQLITE_NOTFOUND;
              }
            };
            {
              const N = new Set();
              (f.sqlite3_auto_extension = function (B) {
                if (B instanceof Function) B = p.installFunction('i(ppp)', B);
                else if (arguments.length !== 1 || !p.isPtr(B))
                  return f.SQLITE_MISUSE;
                const J = p.exports.sqlite3_auto_extension(B);
                return (
                  B !== arguments[0] &&
                    (J === 0 ? N.add(B) : p.uninstallFunction(B)),
                  J
                );
              }),
                (f.sqlite3_cancel_auto_extension = function (B) {
                  return !B || arguments.length !== 1 || !p.isPtr(B)
                    ? 0
                    : p.exports.sqlite3_cancel_auto_extension(B);
                }),
                (f.sqlite3_reset_auto_extension = function () {
                  p.exports.sqlite3_reset_auto_extension();
                  for (const B of N) p.uninstallFunction(B);
                  N.clear();
                });
            }
            const ye = f.sqlite3_vfs_find('kvvfs');
            if (ye)
              if (w.isUIThread()) {
                const N = new f.sqlite3_kvvfs_methods(
                  p.exports.sqlite3__wasm_kvvfs_methods(),
                );
                delete f.sqlite3_kvvfs_methods;
                const B = p.exports.sqlite3__wasm_kvvfsMakeKeyOnPstack,
                  J = p.pstack,
                  Z = (W) =>
                    p.peek(W) === 115 ? sessionStorage : localStorage,
                  se = {
                    xRead: (W, ce, _e, E) => {
                      const D = J.pointer,
                        g = p.scopedAllocPush();
                      try {
                        const P = B(W, ce);
                        if (!P) return -3;
                        const S = p.cstrToJs(P),
                          A = Z(W).getItem(S);
                        if (!A) return -1;
                        const b = A.length;
                        if (E <= 0) return b;
                        if (E === 1) return p.poke(_e, 0), b;
                        const k = p.scopedAllocCString(A);
                        return (
                          E > b + 1 && (E = b + 1),
                          p.heap8u().copyWithin(_e, k, k + E - 1),
                          p.poke(_e + E - 1, 0),
                          E - 1
                        );
                      } catch (P) {
                        return console.error('kvstorageRead()', P), -2;
                      } finally {
                        J.restore(D), p.scopedAllocPop(g);
                      }
                    },
                    xWrite: (W, ce, _e) => {
                      const E = J.pointer;
                      try {
                        const D = B(W, ce);
                        if (!D) return 1;
                        const g = p.cstrToJs(D);
                        return Z(W).setItem(g, p.cstrToJs(_e)), 0;
                      } catch (D) {
                        return (
                          console.error('kvstorageWrite()', D), f.SQLITE_IOERR
                        );
                      } finally {
                        J.restore(E);
                      }
                    },
                    xDelete: (W, ce) => {
                      const _e = J.pointer;
                      try {
                        const E = B(W, ce);
                        return E ? (Z(W).removeItem(p.cstrToJs(E)), 0) : 1;
                      } catch (E) {
                        return (
                          console.error('kvstorageDelete()', E), f.SQLITE_IOERR
                        );
                      } finally {
                        J.restore(_e);
                      }
                    },
                  };
                for (const W of Object.keys(se))
                  N[N.memberKey(W)] = p.installFunction(
                    N.memberSignature(W),
                    se[W],
                  );
              } else f.sqlite3_vfs_unregister(ye);
            p.xWrap.FuncPtrAdapter.warnOnUse = !0;
            const X = a.StructBinder,
              Q = function N(B, J, Z, se = N.installMethodArgcCheck) {
                if (
                  (B instanceof X.StructType
                    ? !(Z instanceof Function) &&
                      !p.isPtr(Z) &&
                      d(
                        'Usage errror: expecting a Function or WASM pointer to one.',
                      )
                    : d('Usage error: target object is-not-a StructType.'),
                  arguments.length === 1)
                )
                  return (E, D) => N(B, E, D, se);
                N.argcProxy ||
                  ((N.argcProxy = function (E, D, g, P) {
                    return function (...S) {
                      return (
                        g.length !== arguments.length &&
                          d(
                            'Argument mismatch for',
                            E.structInfo.name +
                              '::' +
                              D +
                              ': Native signature is:',
                            P,
                          ),
                        g.apply(this, S)
                      );
                    };
                  }),
                  (N.removeFuncList = function () {
                    this.ondispose.__removeFuncList &&
                      (this.ondispose.__removeFuncList.forEach((E, D) => {
                        if (typeof E == 'number')
                          try {
                            p.uninstallFunction(E);
                          } catch {}
                      }),
                      delete this.ondispose.__removeFuncList);
                  }));
                const W = B.memberSignature(J);
                W.length < 2 &&
                  d(
                    'Member',
                    J,
                    'does not have a function pointer signature:',
                    W,
                  );
                const ce = B.memberKey(J),
                  _e = se && !p.isPtr(Z) ? N.argcProxy(B, ce, Z, W) : Z;
                if (p.isPtr(_e))
                  _e &&
                    !p.functionEntry(_e) &&
                    d('Pointer', _e, 'is not a WASM function table entry.'),
                    (B[ce] = _e);
                else {
                  const E = p.installFunction(_e, B.memberSignature(J, !0));
                  (B[ce] = E),
                    (!B.ondispose || !B.ondispose.__removeFuncList) &&
                      (B.addOnDispose(
                        'ondispose.__removeFuncList handler',
                        N.removeFuncList,
                      ),
                      (B.ondispose.__removeFuncList = [])),
                    B.ondispose.__removeFuncList.push(ce, E);
                }
                return (E, D) => N(B, E, D, se);
              };
            Q.installMethodArgcCheck = !1;
            const ue = function (N, B, J = Q.installMethodArgcCheck) {
              const Z = new Map();
              for (const se of Object.keys(B)) {
                const W = B[se],
                  ce = Z.get(W);
                if (ce) {
                  const _e = N.memberKey(se);
                  N[_e] = N[N.memberKey(ce)];
                } else Q(N, se, W, J), Z.set(W, se);
              }
              return N;
            };
            (X.StructType.prototype.installMethod = function (
              B,
              J,
              Z = Q.installMethodArgcCheck,
            ) {
              return arguments.length < 3 && B && typeof B == 'object'
                ? ue(this, ...arguments)
                : Q(this, ...arguments);
            }),
              (X.StructType.prototype.installMethods = function (
                N,
                B = Q.installMethodArgcCheck,
              ) {
                return ue(this, N, B);
              });
          }),
          globalThis.sqlite3ApiBootstrap.initializers.push(function (a) {
            a.version = {
              libVersion: '3.46.1',
              libVersionNumber: 3046001,
              sourceId:
                '2024-08-13 09:16:08 c9c2ab54ba1f5f46360f1b4f35d849cd3f080e6fc2b6c60e91b16c63f69a1e33',
              downloadVersion: 3460100,
            };
          }),
          globalThis.sqlite3ApiBootstrap.initializers.push(function (a) {
            const d = (...S) => {
                throw new a.SQLite3Error(...S);
              },
              f = a.capi,
              p = a.wasm,
              w = a.util,
              O = new WeakMap(),
              M = new WeakMap(),
              ne = (S, A, b) => {
                const k = Object.getOwnPropertyDescriptor(S, A);
                return k ? k.value : b;
              },
              re = function (S, A) {
                return (
                  A &&
                    (S instanceof Q && (S = S.pointer),
                    d(
                      A,
                      'sqlite3 result code',
                      A + ':',
                      S ? f.sqlite3_errmsg(S) : f.sqlite3_errstr(A),
                    )),
                  arguments[0]
                );
              },
              pe = p.installFunction(
                'i(ippp)',
                function (S, A, b, k) {
                  f.SQLITE_TRACE_STMT === S &&
                    console.log(
                      'SQL TRACE #' +
                        ++this.counter +
                        ' via sqlite3@' +
                        A +
                        ':',
                      p.cstrToJs(k),
                    );
                }.bind({ counter: 0 }),
              ),
              ye = Object.create(null),
              X = function S(...A) {
                if (!S._name2vfs) {
                  S._name2vfs = Object.create(null);
                  const Le =
                    typeof importScripts == 'function'
                      ? (Ve) =>
                          d(
                            'The VFS for',
                            Ve,
                            'is only available in the main window thread.',
                          )
                      : !1;
                  (S._name2vfs[':localStorage:'] = {
                    vfs: 'kvvfs',
                    filename: Le || (() => 'local'),
                  }),
                    (S._name2vfs[':sessionStorage:'] = {
                      vfs: 'kvvfs',
                      filename: Le || (() => 'session'),
                    });
                }
                const b = S.normalizeArgs(...A);
                let k = b.filename,
                  L = b.vfs,
                  F = b.flags;
                ((typeof k != 'string' && typeof k != 'number') ||
                  typeof F != 'string' ||
                  (L && typeof L != 'string' && typeof L != 'number')) &&
                  (a.config.error('Invalid DB ctor args', b, arguments),
                  d('Invalid arguments for DB constructor.'));
                let oe = typeof k == 'number' ? p.cstrToJs(k) : k;
                const be = S._name2vfs[oe];
                be && ((L = be.vfs), (k = oe = be.filename(oe)));
                let Ce,
                  ze = 0;
                F.indexOf('c') >= 0 &&
                  (ze |= f.SQLITE_OPEN_CREATE | f.SQLITE_OPEN_READWRITE),
                  F.indexOf('w') >= 0 && (ze |= f.SQLITE_OPEN_READWRITE),
                  ze === 0 && (ze |= f.SQLITE_OPEN_READONLY),
                  (ze |= f.SQLITE_OPEN_EXRESCODE);
                const Re = p.pstack.pointer;
                try {
                  const Le = p.pstack.allocPtr();
                  let Ve = f.sqlite3_open_v2(k, Le, ze, L || 0);
                  (Ce = p.peekPtr(Le)),
                    re(Ce, Ve),
                    f.sqlite3_extended_result_codes(Ce, 1),
                    F.indexOf('t') >= 0 &&
                      f.sqlite3_trace_v2(Ce, f.SQLITE_TRACE_STMT, pe, Ce);
                } catch (Le) {
                  throw (Ce && f.sqlite3_close_v2(Ce), Le);
                } finally {
                  p.pstack.restore(Re);
                }
                (this.filename = oe),
                  O.set(this, Ce),
                  M.set(this, Object.create(null));
                try {
                  const Le =
                      f.sqlite3_js_db_vfs(Ce) ||
                      d('Internal error: cannot get VFS for new db handle.'),
                    Ve = ye[Le];
                  Ve &&
                    (Ve instanceof Function
                      ? Ve(this, a)
                      : re(Ce, f.sqlite3_exec(Ce, Ve, 0, 0, 0)));
                } catch (Le) {
                  throw (this.close(), Le);
                }
              };
            (X.setVfsPostOpenSql = function (S, A) {
              ye[S] = A;
            }),
              (X.normalizeArgs = function (S = ':memory:', A = 'c', b = null) {
                const k = {};
                return (
                  arguments.length === 1 &&
                  arguments[0] &&
                  typeof arguments[0] == 'object'
                    ? (Object.assign(k, arguments[0]),
                      k.flags === void 0 && (k.flags = 'c'),
                      k.vfs === void 0 && (k.vfs = null),
                      k.filename === void 0 && (k.filename = ':memory:'))
                    : ((k.filename = S), (k.flags = A), (k.vfs = b)),
                  k
                );
              });
            const Q = function (...S) {
              X.apply(this, S);
            };
            Q.dbCtorHelper = X;
            const ue = { null: 1, number: 2, string: 3, boolean: 4, blob: 5 };
            ue.undefined == ue.null, p.bigIntEnabled && (ue.bigint = ue.number);
            const N = function () {
                ue !== arguments[2] &&
                  d(
                    f.SQLITE_MISUSE,
                    'Do not call the Stmt constructor directly. Use DB.prepare().',
                  ),
                  (this.db = arguments[0]),
                  O.set(this, arguments[1]),
                  (this.parameterCount = f.sqlite3_bind_parameter_count(
                    this.pointer,
                  ));
              },
              B = function (S) {
                return S.pointer || d('DB has been closed.'), S;
              },
              J = function (S, A) {
                return (
                  (A !== (A | 0) || A < 0 || A >= S.columnCount) &&
                    d('Column index', A, 'is out of range.'),
                  S
                );
              },
              Z = function (S, A) {
                const b = Object.create(null);
                switch (((b.opt = Object.create(null)), A.length)) {
                  case 1:
                    typeof A[0] == 'string' ||
                    w.isSQLableTypedArray(A[0]) ||
                    Array.isArray(A[0])
                      ? (b.sql = A[0])
                      : A[0] &&
                        typeof A[0] == 'object' &&
                        ((b.opt = A[0]), (b.sql = b.opt.sql));
                    break;
                  case 2:
                    (b.sql = A[0]), (b.opt = A[1]);
                    break;
                  default:
                    d('Invalid argument count for exec().');
                }
                (b.sql = w.flexibleString(b.sql)),
                  typeof b.sql != 'string' &&
                    d('Missing SQL argument or unsupported SQL value type.');
                const k = b.opt;
                switch (k.returnValue) {
                  case 'resultRows':
                    k.resultRows || (k.resultRows = []),
                      (b.returnVal = () => k.resultRows);
                    break;
                  case 'saveSql':
                    k.saveSql || (k.saveSql = []),
                      (b.returnVal = () => k.saveSql);
                    break;
                  case void 0:
                  case 'this':
                    b.returnVal = () => S;
                    break;
                  default:
                    d('Invalid returnValue value:', k.returnValue);
                }
                if (
                  (!k.callback &&
                    !k.returnValue &&
                    k.rowMode !== void 0 &&
                    (k.resultRows || (k.resultRows = []),
                    (b.returnVal = () => k.resultRows)),
                  k.callback || k.resultRows)
                )
                  switch (k.rowMode === void 0 ? 'array' : k.rowMode) {
                    case 'object':
                      b.cbArg = (L, F) => {
                        F.columnNames || (F.columnNames = L.getColumnNames([]));
                        const oe = L.get([]),
                          be = Object.create(null);
                        for (const Ce in F.columnNames)
                          be[F.columnNames[Ce]] = oe[Ce];
                        return be;
                      };
                      break;
                    case 'array':
                      b.cbArg = (L) => L.get([]);
                      break;
                    case 'stmt':
                      Array.isArray(k.resultRows) &&
                        d(
                          'exec(): invalid rowMode for a resultRows array: must',
                          "be one of 'array', 'object',",
                          'a result column number, or column name reference.',
                        ),
                        (b.cbArg = (L) => L);
                      break;
                    default:
                      if (w.isInt32(k.rowMode)) {
                        b.cbArg = (L) => L.get(k.rowMode);
                        break;
                      } else if (
                        typeof k.rowMode == 'string' &&
                        k.rowMode.length > 1 &&
                        k.rowMode[0] === '$'
                      ) {
                        const L = k.rowMode.substr(1);
                        b.cbArg = (F) => {
                          const oe = F.get(Object.create(null))[L];
                          return oe === void 0
                            ? d(
                                f.SQLITE_NOTFOUND,
                                'exec(): unknown result column:',
                                L,
                              )
                            : oe;
                        };
                        break;
                      }
                      d('Invalid rowMode:', k.rowMode);
                  }
                return b;
              },
              se = (S, A, b, ...k) => {
                const L = S.prepare(A);
                try {
                  const F = L.bind(b).step() ? L.get(...k) : void 0;
                  return L.reset(), F;
                } finally {
                  L.finalize();
                }
              },
              W = (S, A, b, k) =>
                S.exec({
                  sql: A,
                  bind: b,
                  rowMode: k,
                  returnValue: 'resultRows',
                });
            (Q.checkRc = (S, A) => re(S, A)),
              (Q.prototype = {
                isOpen: function () {
                  return !!this.pointer;
                },
                affirmOpen: function () {
                  return B(this);
                },
                close: function () {
                  if (this.pointer) {
                    if (this.onclose && this.onclose.before instanceof Function)
                      try {
                        this.onclose.before(this);
                      } catch {}
                    const S = this.pointer;
                    if (
                      (Object.keys(M.get(this)).forEach((A, b) => {
                        if (b && b.pointer)
                          try {
                            b.finalize();
                          } catch {}
                      }),
                      O.delete(this),
                      M.delete(this),
                      f.sqlite3_close_v2(S),
                      this.onclose && this.onclose.after instanceof Function)
                    )
                      try {
                        this.onclose.after(this);
                      } catch {}
                    delete this.filename;
                  }
                },
                changes: function (S = !1, A = !1) {
                  const b = B(this).pointer;
                  return S
                    ? A
                      ? f.sqlite3_total_changes64(b)
                      : f.sqlite3_total_changes(b)
                    : A
                      ? f.sqlite3_changes64(b)
                      : f.sqlite3_changes(b);
                },
                dbFilename: function (S = 'main') {
                  return f.sqlite3_db_filename(B(this).pointer, S);
                },
                dbName: function (S = 0) {
                  return f.sqlite3_db_name(B(this).pointer, S);
                },
                dbVfsName: function (S = 0) {
                  let A;
                  const b = f.sqlite3_js_db_vfs(B(this).pointer, S);
                  if (b) {
                    const k = new f.sqlite3_vfs(b);
                    try {
                      A = p.cstrToJs(k.$zName);
                    } finally {
                      k.dispose();
                    }
                  }
                  return A;
                },
                prepare: function (S) {
                  B(this);
                  const A = p.pstack.pointer;
                  let b, k;
                  try {
                    (b = p.pstack.alloc(8)),
                      Q.checkRc(
                        this,
                        f.sqlite3_prepare_v2(this.pointer, S, -1, b, null),
                      ),
                      (k = p.peekPtr(b));
                  } finally {
                    p.pstack.restore(A);
                  }
                  k || d('Cannot prepare empty SQL.');
                  const L = new N(this, k, ue);
                  return (M.get(this)[k] = L), L;
                },
                exec: function () {
                  B(this);
                  const S = Z(this, arguments);
                  if (!S.sql) return d('exec() requires an SQL string.');
                  const A = S.opt,
                    b = A.callback,
                    k = Array.isArray(A.resultRows) ? A.resultRows : void 0;
                  let L,
                    F = A.bind,
                    oe = !!(S.cbArg || A.columnNames || k);
                  const be = p.scopedAllocPush(),
                    Ce = Array.isArray(A.saveSql) ? A.saveSql : void 0;
                  try {
                    const ze = w.isSQLableTypedArray(S.sql);
                    let Re = ze ? S.sql.byteLength : p.jstrlen(S.sql);
                    const Le = p.scopedAlloc(2 * p.ptrSizeof + (Re + 1)),
                      Ve = Le + p.ptrSizeof;
                    let Ge = Ve + p.ptrSizeof;
                    const at = Ge + Re;
                    for (
                      ze
                        ? p.heap8().set(S.sql, Ge)
                        : p.jstrcpy(S.sql, p.heap8(), Ge, Re, !1),
                        p.poke(Ge + Re, 0);
                      Ge && p.peek(Ge, 'i8');
                    ) {
                      p.pokePtr([Le, Ve], 0),
                        Q.checkRc(
                          this,
                          f.sqlite3_prepare_v3(this.pointer, Ge, Re, 0, Le, Ve),
                        );
                      const lt = p.peekPtr(Le);
                      if (((Ge = p.peekPtr(Ve)), (Re = at - Ge), !!lt)) {
                        if (
                          (Ce && Ce.push(f.sqlite3_sql(lt).trim()),
                          (L = new N(this, lt, ue)),
                          F && L.parameterCount && (L.bind(F), (F = null)),
                          oe && L.columnCount)
                        ) {
                          let Kt = Array.isArray(A.columnNames) ? 0 : 1;
                          if (((oe = !1), S.cbArg || k)) {
                            const xt = Object.create(null);
                            for (; L.step(); L._lockedByExec = !1) {
                              Kt++ === 0 &&
                                L.getColumnNames(
                                  (xt.columnNames = A.columnNames || []),
                                ),
                                (L._lockedByExec = !0);
                              const ee = S.cbArg(L, xt);
                              if (
                                (k && k.push(ee), b && b.call(A, ee, L) === !1)
                              )
                                break;
                            }
                            L._lockedByExec = !1;
                          }
                          Kt === 0 && L.getColumnNames(A.columnNames);
                        } else L.step();
                        L.reset().finalize(), (L = null);
                      }
                    }
                  } finally {
                    p.scopedAllocPop(be),
                      L && (delete L._lockedByExec, L.finalize());
                  }
                  return S.returnVal();
                },
                createFunction: function (A, b, k) {
                  const L = (xt) => xt instanceof Function;
                  switch (arguments.length) {
                    case 1:
                      (k = A), (A = k.name), (b = k.xFunc || 0);
                      break;
                    case 2:
                      L(b) || ((k = b), (b = k.xFunc || 0));
                      break;
                  }
                  k || (k = {}),
                    typeof A != 'string' &&
                      d('Invalid arguments: missing function name.');
                  let F = k.xStep || 0,
                    oe = k.xFinal || 0;
                  const be = k.xValue || 0,
                    Ce = k.xInverse || 0;
                  let ze;
                  L(b)
                    ? ((ze = !1),
                      (L(F) || L(oe)) &&
                        d('Ambiguous arguments: scalar or aggregate?'),
                      (F = oe = null))
                    : L(F)
                      ? (L(oe) ||
                          d(
                            'Missing xFinal() callback for aggregate or window UDF.',
                          ),
                        (b = null))
                      : L(oe)
                        ? d(
                            'Missing xStep() callback for aggregate or window UDF.',
                          )
                        : d('Missing function-type properties.'),
                    ze === !1
                      ? (L(be) || L(Ce)) &&
                        d(
                          'xValue and xInverse are not permitted for non-window UDFs.',
                        )
                      : L(be)
                        ? (L(Ce) ||
                            d('xInverse must be provided if xValue is.'),
                          (ze = !0))
                        : L(Ce) && d('xValue must be provided if xInverse is.');
                  const Re = k.pApp;
                  Re != null &&
                    (typeof Re != 'number' || !w.isInt32(Re)) &&
                    d(
                      'Invalid value for pApp property. Must be a legal WASM pointer value.',
                    );
                  const Le = k.xDestroy || 0;
                  Le && !L(Le) && d('xDestroy property must be a function.');
                  let Ve = 0;
                  ne(k, 'deterministic') && (Ve |= f.SQLITE_DETERMINISTIC),
                    ne(k, 'directOnly') && (Ve |= f.SQLITE_DIRECTONLY),
                    ne(k, 'innocuous') && (Ve |= f.SQLITE_INNOCUOUS),
                    (A = A.toLowerCase());
                  const Ge = b || F,
                    at = ne(k, 'arity'),
                    lt =
                      typeof at == 'number'
                        ? at
                        : Ge.length
                          ? Ge.length - 1
                          : 0;
                  let Kt;
                  return (
                    ze
                      ? (Kt = f.sqlite3_create_window_function(
                          this.pointer,
                          A,
                          lt,
                          f.SQLITE_UTF8 | Ve,
                          Re || 0,
                          F,
                          oe,
                          be,
                          Ce,
                          Le,
                        ))
                      : (Kt = f.sqlite3_create_function_v2(
                          this.pointer,
                          A,
                          lt,
                          f.SQLITE_UTF8 | Ve,
                          Re || 0,
                          b,
                          F,
                          oe,
                          Le,
                        )),
                    Q.checkRc(this, Kt),
                    this
                  );
                },
                selectValue: function (S, A, b) {
                  return se(this, S, A, 0, b);
                },
                selectValues: function (S, A, b) {
                  const k = this.prepare(S),
                    L = [];
                  try {
                    for (k.bind(A); k.step(); ) L.push(k.get(0, b));
                    k.reset();
                  } finally {
                    k.finalize();
                  }
                  return L;
                },
                selectArray: function (S, A) {
                  return se(this, S, A, []);
                },
                selectObject: function (S, A) {
                  return se(this, S, A, {});
                },
                selectArrays: function (S, A) {
                  return W(this, S, A, 'array');
                },
                selectObjects: function (S, A) {
                  return W(this, S, A, 'object');
                },
                openStatementCount: function () {
                  return this.pointer ? Object.keys(M.get(this)).length : 0;
                },
                transaction: function (S) {
                  let A = 'BEGIN';
                  arguments.length > 1 &&
                    (/[^a-zA-Z]/.test(arguments[0]) &&
                      d(
                        f.SQLITE_MISUSE,
                        'Invalid argument for BEGIN qualifier.',
                      ),
                    (A += ' ' + arguments[0]),
                    (S = arguments[1])),
                    B(this).exec(A);
                  try {
                    const b = S(this);
                    return this.exec('COMMIT'), b;
                  } catch (b) {
                    throw (this.exec('ROLLBACK'), b);
                  }
                },
                savepoint: function (S) {
                  B(this).exec('SAVEPOINT oo1');
                  try {
                    const A = S(this);
                    return this.exec('RELEASE oo1'), A;
                  } catch (A) {
                    throw (
                      (this.exec(
                        'ROLLBACK to SAVEPOINT oo1; RELEASE SAVEPOINT oo1',
                      ),
                      A)
                    );
                  }
                },
                checkRc: function (S) {
                  return re(this, S);
                },
              });
            const ce = function (S) {
                return S.pointer || d('Stmt has been closed.'), S;
              },
              _e = function (S) {
                let A = ue[S == null ? 'null' : typeof S];
                switch (A) {
                  case ue.boolean:
                  case ue.null:
                  case ue.number:
                  case ue.string:
                    return A;
                  case ue.bigint:
                    if (p.bigIntEnabled) return A;
                  default:
                    return w.isBindableTypedArray(S) ? ue.blob : void 0;
                }
              },
              E = function (S) {
                return (
                  _e(S) || d('Unsupported bind() argument type:', typeof S)
                );
              },
              D = function (S, A) {
                const b =
                  typeof A == 'number'
                    ? A
                    : f.sqlite3_bind_parameter_index(S.pointer, A);
                return (
                  b === 0 || !w.isInt32(b)
                    ? d('Invalid bind() parameter name: ' + A)
                    : (b < 1 || b > S.parameterCount) &&
                      d('Bind index', A, 'is out of range.'),
                  b
                );
              },
              g = function (S, A) {
                return (
                  S._lockedByExec &&
                    d('Operation is illegal when statement is locked:', A),
                  S
                );
              },
              P = function S(A, b, k, L) {
                g(ce(A), 'bind()'),
                  S._ ||
                    ((S._tooBigInt = (oe) =>
                      d(
                        'BigInt value is too big to store without precision loss:',
                        oe,
                      )),
                    (S._ = {
                      string: function (oe, be, Ce, ze) {
                        const [Re, Le] = p.allocCString(Ce, !0);
                        return (ze ? f.sqlite3_bind_blob : f.sqlite3_bind_text)(
                          oe.pointer,
                          be,
                          Re,
                          Le,
                          f.SQLITE_WASM_DEALLOC,
                        );
                      },
                    })),
                  E(L),
                  (b = D(A, b));
                let F = 0;
                switch (L == null ? ue.null : k) {
                  case ue.null:
                    F = f.sqlite3_bind_null(A.pointer, b);
                    break;
                  case ue.string:
                    F = S._.string(A, b, L, !1);
                    break;
                  case ue.number: {
                    let oe;
                    w.isInt32(L)
                      ? (oe = f.sqlite3_bind_int)
                      : typeof L == 'bigint'
                        ? w.bigIntFits64(L)
                          ? p.bigIntEnabled
                            ? (oe = f.sqlite3_bind_int64)
                            : w.bigIntFitsDouble(L)
                              ? ((L = Number(L)), (oe = f.sqlite3_bind_double))
                              : S._tooBigInt(L)
                          : S._tooBigInt(L)
                        : ((L = Number(L)),
                          p.bigIntEnabled && Number.isInteger(L)
                            ? (oe = f.sqlite3_bind_int64)
                            : (oe = f.sqlite3_bind_double)),
                      (F = oe(A.pointer, b, L));
                    break;
                  }
                  case ue.boolean:
                    F = f.sqlite3_bind_int(A.pointer, b, L ? 1 : 0);
                    break;
                  case ue.blob: {
                    if (typeof L == 'string') {
                      F = S._.string(A, b, L, !0);
                      break;
                    } else
                      L instanceof ArrayBuffer
                        ? (L = new Uint8Array(L))
                        : w.isBindableTypedArray(L) ||
                          d(
                            'Binding a value as a blob requires',
                            'that it be a string, Uint8Array, Int8Array, or ArrayBuffer.',
                          );
                    const oe = p.alloc(L.byteLength || 1);
                    p.heap8().set(L.byteLength ? L : [0], oe),
                      (F = f.sqlite3_bind_blob(
                        A.pointer,
                        b,
                        oe,
                        L.byteLength,
                        f.SQLITE_WASM_DEALLOC,
                      ));
                    break;
                  }
                  default:
                    a.config.warn('Unsupported bind() argument type:', L),
                      d('Unsupported bind() argument type: ' + typeof L);
                }
                return F && Q.checkRc(A.db.pointer, F), (A._mayGet = !1), A;
              };
            N.prototype = {
              finalize: function () {
                if (this.pointer) {
                  g(this, 'finalize()');
                  const S = f.sqlite3_finalize(this.pointer);
                  return (
                    delete M.get(this.db)[this.pointer],
                    O.delete(this),
                    delete this._mayGet,
                    delete this.parameterCount,
                    delete this._lockedByExec,
                    delete this.db,
                    S
                  );
                }
              },
              clearBindings: function () {
                return (
                  g(ce(this), 'clearBindings()'),
                  f.sqlite3_clear_bindings(this.pointer),
                  (this._mayGet = !1),
                  this
                );
              },
              reset: function (S) {
                g(this, 'reset()'), S && this.clearBindings();
                const A = f.sqlite3_reset(ce(this).pointer);
                return (this._mayGet = !1), re(this.db, A), this;
              },
              bind: function () {
                ce(this);
                let S, A;
                switch (arguments.length) {
                  case 1:
                    (S = 1), (A = arguments[0]);
                    break;
                  case 2:
                    (S = arguments[0]), (A = arguments[1]);
                    break;
                  default:
                    d('Invalid bind() arguments.');
                }
                return A === void 0
                  ? this
                  : (this.parameterCount ||
                      d('This statement has no bindable parameters.'),
                    (this._mayGet = !1),
                    A === null
                      ? P(this, S, ue.null, A)
                      : Array.isArray(A)
                        ? (arguments.length !== 1 &&
                            d(
                              'When binding an array, an index argument is not permitted.',
                            ),
                          A.forEach((b, k) => P(this, k + 1, E(b), b)),
                          this)
                        : (A instanceof ArrayBuffer && (A = new Uint8Array(A)),
                          typeof A == 'object' && !w.isBindableTypedArray(A)
                            ? (arguments.length !== 1 &&
                                d(
                                  'When binding an object, an index argument is not permitted.',
                                ),
                              Object.keys(A).forEach((b) =>
                                P(this, b, E(A[b]), A[b]),
                              ),
                              this)
                            : P(this, S, E(A), A)));
              },
              bindAsBlob: function (S, A) {
                ce(this), arguments.length === 1 && ((A = S), (S = 1));
                const b = E(A);
                return (
                  ue.string !== b &&
                    ue.blob !== b &&
                    ue.null !== b &&
                    d('Invalid value type for bindAsBlob()'),
                  P(this, S, ue.blob, A)
                );
              },
              step: function () {
                g(this, 'step()');
                const S = f.sqlite3_step(ce(this).pointer);
                switch (S) {
                  case f.SQLITE_DONE:
                    return (this._mayGet = !1);
                  case f.SQLITE_ROW:
                    return (this._mayGet = !0);
                  default:
                    (this._mayGet = !1),
                      a.config.warn(
                        'sqlite3_step() rc=',
                        S,
                        f.sqlite3_js_rc_str(S),
                        'SQL =',
                        f.sqlite3_sql(this.pointer),
                      ),
                      Q.checkRc(this.db.pointer, S);
                }
              },
              stepReset: function () {
                return this.step(), this.reset();
              },
              stepFinalize: function () {
                try {
                  const S = this.step();
                  return this.reset(), S;
                } finally {
                  try {
                    this.finalize();
                  } catch {}
                }
              },
              get: function (S, A) {
                if (
                  (ce(this)._mayGet ||
                    d('Stmt.step() has not (recently) returned true.'),
                  Array.isArray(S))
                ) {
                  let b = 0;
                  const k = this.columnCount;
                  for (; b < k; ) S[b] = this.get(b++);
                  return S;
                } else if (S && typeof S == 'object') {
                  let b = 0;
                  const k = this.columnCount;
                  for (; b < k; )
                    S[f.sqlite3_column_name(this.pointer, b)] = this.get(b++);
                  return S;
                }
                switch (
                  (J(this, S),
                  A === void 0 ? f.sqlite3_column_type(this.pointer, S) : A)
                ) {
                  case f.SQLITE_NULL:
                    return null;
                  case f.SQLITE_INTEGER:
                    if (p.bigIntEnabled) {
                      const b = f.sqlite3_column_int64(this.pointer, S);
                      return b >= Number.MIN_SAFE_INTEGER &&
                        b <= Number.MAX_SAFE_INTEGER
                        ? Number(b).valueOf()
                        : b;
                    } else {
                      const b = f.sqlite3_column_double(this.pointer, S);
                      return (
                        (b > Number.MAX_SAFE_INTEGER ||
                          b < Number.MIN_SAFE_INTEGER) &&
                          d(
                            'Integer is out of range for JS integer range: ' +
                              b,
                          ),
                        w.isInt32(b) ? b | 0 : b
                      );
                    }
                  case f.SQLITE_FLOAT:
                    return f.sqlite3_column_double(this.pointer, S);
                  case f.SQLITE_TEXT:
                    return f.sqlite3_column_text(this.pointer, S);
                  case f.SQLITE_BLOB: {
                    const b = f.sqlite3_column_bytes(this.pointer, S),
                      k = f.sqlite3_column_blob(this.pointer, S),
                      L = new Uint8Array(b);
                    return (
                      b && L.set(p.heap8u().slice(k, k + b), 0),
                      b &&
                        this.db._blobXfer instanceof Array &&
                        this.db._blobXfer.push(L.buffer),
                      L
                    );
                  }
                  default:
                    d(
                      "Don't know how to translate",
                      'type of result column #' + S + '.',
                    );
                }
                d('Not reached.');
              },
              getInt: function (S) {
                return this.get(S, f.SQLITE_INTEGER);
              },
              getFloat: function (S) {
                return this.get(S, f.SQLITE_FLOAT);
              },
              getString: function (S) {
                return this.get(S, f.SQLITE_TEXT);
              },
              getBlob: function (S) {
                return this.get(S, f.SQLITE_BLOB);
              },
              getJSON: function (S) {
                const A = this.get(S, f.SQLITE_STRING);
                return A === null ? A : JSON.parse(A);
              },
              getColumnName: function (S) {
                return f.sqlite3_column_name(J(ce(this), S).pointer, S);
              },
              getColumnNames: function (S = []) {
                J(ce(this), 0);
                const A = this.columnCount;
                for (let b = 0; b < A; ++b)
                  S.push(f.sqlite3_column_name(this.pointer, b));
                return S;
              },
              getParamIndex: function (S) {
                return ce(this).parameterCount
                  ? f.sqlite3_bind_parameter_index(this.pointer, S)
                  : void 0;
              },
            };
            {
              const S = {
                enumerable: !0,
                get: function () {
                  return O.get(this);
                },
                set: () => d('The pointer property is read-only.'),
              };
              Object.defineProperty(N.prototype, 'pointer', S),
                Object.defineProperty(Q.prototype, 'pointer', S);
            }
            if (
              (Object.defineProperty(N.prototype, 'columnCount', {
                enumerable: !1,
                get: function () {
                  return f.sqlite3_column_count(this.pointer);
                },
                set: () => d('The columnCount property is read-only.'),
              }),
              (a.oo1 = { DB: Q, Stmt: N }),
              w.isUIThread())
            ) {
              a.oo1.JsStorageDb = function (A = 'session') {
                const b = X.normalizeArgs(...arguments);
                (A = b.filename),
                  A !== 'session' &&
                    A !== 'local' &&
                    d(
                      "JsStorageDb db name must be one of 'session' or 'local'.",
                    ),
                  (b.vfs = 'kvvfs'),
                  X.call(this, b);
              };
              const S = a.oo1.JsStorageDb;
              (S.prototype = Object.create(Q.prototype)),
                (S.clearStorage = f.sqlite3_js_kvvfs_clear),
                (S.prototype.clearStorage = function () {
                  return S.clearStorage(B(this).filename);
                }),
                (S.storageSize = f.sqlite3_js_kvvfs_size),
                (S.prototype.storageSize = function () {
                  return S.storageSize(B(this).filename);
                });
            }
          }),
          globalThis.sqlite3ApiBootstrap.initializers.push(function (a) {
            const d = a.util;
            a.initWorker1API = function () {
              const f = (...X) => {
                throw new Error(X.join(' '));
              };
              globalThis.WorkerGlobalScope instanceof Function ||
                f('initWorker1API() must be run from a Worker thread.');
              const p = this.sqlite3 || f('Missing this.sqlite3 object.'),
                w = p.oo1.DB,
                O = function (X) {
                  let Q = M.idMap.get(X);
                  return (
                    Q ||
                    ((Q = 'db#' + ++M.idSeq + '@' + X.pointer),
                    M.idMap.set(X, Q),
                    Q)
                  );
                },
                M = {
                  dbList: [],
                  idSeq: 0,
                  idMap: new WeakMap(),
                  xfer: [],
                  open: function (X) {
                    const Q = new w(X);
                    return (
                      (this.dbs[O(Q)] = Q),
                      this.dbList.indexOf(Q) < 0 && this.dbList.push(Q),
                      Q
                    );
                  },
                  close: function (X, Q) {
                    if (X) {
                      delete this.dbs[O(X)];
                      const ue = X.filename,
                        N = d.sqlite3__wasm_db_vfs(X.pointer, 0);
                      X.close();
                      const B = this.dbList.indexOf(X);
                      B >= 0 && this.dbList.splice(B, 1),
                        Q && ue && N && d.sqlite3__wasm_vfs_unlink(N, ue);
                    }
                  },
                  post: function (X, Q) {
                    Q && Q.length
                      ? (globalThis.postMessage(X, Array.from(Q)),
                        (Q.length = 0))
                      : globalThis.postMessage(X);
                  },
                  dbs: Object.create(null),
                  getDb: function (X, Q = !0) {
                    return (
                      this.dbs[X] ||
                      (Q ? f('Unknown (or closed) DB ID:', X) : void 0)
                    );
                  },
                },
                ne = function (X = M.dbList[0]) {
                  return X && X.pointer ? X : f('DB is not opened.');
                },
                re = function (X, Q = !0) {
                  const ue = M.getDb(X.dbId, !1) || M.dbList[0];
                  return Q ? ne(ue) : ue;
                },
                pe = function () {
                  return M.dbList[0] && O(M.dbList[0]);
                },
                ye = {
                  open: function (X) {
                    const Q = Object.create(null),
                      ue = X.args || Object.create(null);
                    ue.simulateError &&
                      f('Throwing because of simulateError flag.');
                    const N = Object.create(null);
                    (Q.vfs = ue.vfs), (Q.filename = ue.filename || '');
                    const B = M.open(Q);
                    return (
                      (N.filename = B.filename),
                      (N.persistent = !!p.capi.sqlite3_js_db_uses_vfs(
                        B.pointer,
                        'opfs',
                      )),
                      (N.dbId = O(B)),
                      (N.vfs = B.dbVfsName()),
                      N
                    );
                  },
                  close: function (X) {
                    const Q = re(X, !1),
                      ue = { filename: Q && Q.filename };
                    if (Q) {
                      const N =
                        X.args && typeof X.args == 'object'
                          ? !!X.args.unlink
                          : !1;
                      M.close(Q, N);
                    }
                    return ue;
                  },
                  exec: function (X) {
                    const Q =
                      typeof X.args == 'string'
                        ? { sql: X.args }
                        : X.args || Object.create(null);
                    Q.rowMode === 'stmt'
                      ? f(
                          "Invalid rowMode for 'exec': stmt mode",
                          'does not work in the Worker API.',
                        )
                      : Q.sql || f("'exec' requires input SQL.");
                    const ue = re(X);
                    (Q.callback || Array.isArray(Q.resultRows)) &&
                      (ue._blobXfer = M.xfer);
                    const N = Q.callback;
                    let B = 0;
                    const J = !!Q.columnNames;
                    typeof N == 'string' &&
                      (J || (Q.columnNames = []),
                      (Q.callback = function (Z, se) {
                        M.post(
                          {
                            type: N,
                            columnNames: Q.columnNames,
                            rowNumber: ++B,
                            row: Z,
                          },
                          M.xfer,
                        );
                      }));
                    try {
                      const Z = Q.countChanges
                        ? ue.changes(!0, Q.countChanges === 64)
                        : void 0;
                      ue.exec(Q),
                        Z !== void 0 &&
                          (Q.changeCount =
                            ue.changes(!0, Q.countChanges === 64) - Z),
                        Q.callback instanceof Function &&
                          ((Q.callback = N),
                          M.post({
                            type: N,
                            columnNames: Q.columnNames,
                            rowNumber: null,
                            row: void 0,
                          }));
                    } finally {
                      delete ue._blobXfer, Q.callback && (Q.callback = N);
                    }
                    return Q;
                  },
                  'config-get': function () {
                    const X = Object.create(null),
                      Q = p.config;
                    return (
                      ['bigIntEnabled'].forEach(function (ue) {
                        Object.getOwnPropertyDescriptor(Q, ue) &&
                          (X[ue] = Q[ue]);
                      }),
                      (X.version = p.version),
                      (X.vfsList = p.capi.sqlite3_js_vfs_list()),
                      (X.opfsEnabled = !!p.opfs),
                      X
                    );
                  },
                  export: function (X) {
                    const Q = re(X),
                      ue = {
                        byteArray: p.capi.sqlite3_js_db_export(Q.pointer),
                        filename: Q.filename,
                        mimetype: 'application/x-sqlite3',
                      };
                    return M.xfer.push(ue.byteArray.buffer), ue;
                  },
                  toss: function (X) {
                    f('Testing worker exception');
                  },
                  'opfs-tree': async function (X) {
                    return (
                      p.opfs || f('OPFS support is unavailable.'),
                      await p.opfs.treeList()
                    );
                  },
                };
              (globalThis.onmessage = async function (X) {
                X = X.data;
                let Q,
                  ue = X.dbId,
                  N = X.type;
                const B = performance.now();
                try {
                  ye.hasOwnProperty(N) && ye[N] instanceof Function
                    ? (Q = await ye[N](X))
                    : f('Unknown db worker message type:', X.type);
                } catch (J) {
                  (N = 'error'),
                    (Q = {
                      operation: X.type,
                      message: J.message,
                      errorClass: J.name,
                      input: X,
                    }),
                    J.stack &&
                      (Q.stack =
                        typeof J.stack == 'string'
                          ? J.stack.split(/\n\s*/)
                          : J.stack);
                }
                ue || (ue = Q.dbId || pe()),
                  M.post(
                    {
                      type: N,
                      dbId: ue,
                      messageId: X.messageId,
                      workerReceivedTime: B,
                      workerRespondTime: performance.now(),
                      departureTime: X.departureTime,
                      result: Q,
                    },
                    M.xfer,
                  );
              }),
                globalThis.postMessage({
                  type: 'sqlite3-api',
                  result: 'worker1-ready',
                });
            }.bind({ sqlite3: a });
          }),
          globalThis.sqlite3ApiBootstrap.initializers.push(function (a) {
            const d = a.wasm,
              f = a.capi,
              p = a.util.toss3,
              w = Object.create(null);
            (a.vfs = w),
              (f.sqlite3_vfs.prototype.registerVfs = function (O = !1) {
                this instanceof a.capi.sqlite3_vfs ||
                  p('Expecting a sqlite3_vfs-type argument.');
                const M = f.sqlite3_vfs_register(this, O ? 1 : 0);
                return (
                  M && p('sqlite3_vfs_register(', this, ') failed with rc', M),
                  this.pointer !== f.sqlite3_vfs_find(this.$zName) &&
                    p(
                      'BUG: sqlite3_vfs_find(vfs.$zName) failed for just-installed VFS',
                      this,
                    ),
                  this
                );
              }),
              (w.installVfs = function (O) {
                let M = 0;
                const ne = ['io', 'vfs'];
                for (const re of ne) {
                  const pe = O[re];
                  pe &&
                    (++M,
                    pe.struct.installMethods(pe.methods, !!pe.applyArgcCheck),
                    re === 'vfs' &&
                      (!pe.struct.$zName &&
                        typeof pe.name == 'string' &&
                        pe.struct.addOnDispose(
                          (pe.struct.$zName = d.allocCString(pe.name)),
                        ),
                      pe.struct.registerVfs(!!pe.asDefault)));
                }
                return (
                  M ||
                    p(
                      'Misuse: installVfs() options object requires at least',
                      'one of:',
                      ne,
                    ),
                  this
                );
              });
          }),
          globalThis.sqlite3ApiBootstrap.initializers.push(function (a) {
            const d = a.wasm,
              f = a.capi,
              p = a.util.toss3,
              w = Object.create(null);
            a.vtab = w;
            const O = f.sqlite3_index_info;
            (O.prototype.nthConstraint = function (re, pe = !1) {
              if (re < 0 || re >= this.$nConstraint) return !1;
              const ye =
                this.$aConstraint +
                O.sqlite3_index_constraint.structInfo.sizeof * re;
              return pe ? ye : new O.sqlite3_index_constraint(ye);
            }),
              (O.prototype.nthConstraintUsage = function (re, pe = !1) {
                if (re < 0 || re >= this.$nConstraint) return !1;
                const ye =
                  this.$aConstraintUsage +
                  O.sqlite3_index_constraint_usage.structInfo.sizeof * re;
                return pe ? ye : new O.sqlite3_index_constraint_usage(ye);
              }),
              (O.prototype.nthOrderBy = function (re, pe = !1) {
                if (re < 0 || re >= this.$nOrderBy) return !1;
                const ye =
                  this.$aOrderBy +
                  O.sqlite3_index_orderby.structInfo.sizeof * re;
                return pe ? ye : new O.sqlite3_index_orderby(ye);
              });
            const M = function (re, pe) {
                return function (ye, X = !1) {
                  if (
                    (arguments.length === 0 && (ye = new pe()),
                    ye instanceof pe)
                  )
                    return this.set(ye.pointer, ye), ye;
                  d.isPtr(ye) ||
                    a.SQLite3Error.toss('Invalid argument to', re + '()');
                  let Q = this.get(ye);
                  return X && this.delete(ye), Q;
                }.bind(new Map());
              },
              ne = function (re, pe) {
                const ye = M(re, pe);
                return Object.assign(Object.create(null), {
                  StructType: pe,
                  create: (X) => {
                    const Q = ye();
                    return d.pokePtr(X, Q.pointer), Q;
                  },
                  get: (X) => ye(X),
                  unget: (X) => ye(X, !0),
                  dispose: (X) => {
                    const Q = ye(X, !0);
                    Q && Q.dispose();
                  },
                });
              };
            (w.xVtab = ne('xVtab', f.sqlite3_vtab)),
              (w.xCursor = ne('xCursor', f.sqlite3_vtab_cursor)),
              (w.xIndexInfo = (re) => new f.sqlite3_index_info(re)),
              (w.xError = function re(pe, ye, X) {
                if (re.errorReporter instanceof Function)
                  try {
                    re.errorReporter(
                      'sqlite3_module::' + pe + '(): ' + ye.message,
                    );
                  } catch {}
                let Q;
                return (
                  ye instanceof a.WasmAllocError
                    ? (Q = f.SQLITE_NOMEM)
                    : arguments.length > 2
                      ? (Q = X)
                      : ye instanceof a.SQLite3Error && (Q = ye.resultCode),
                  Q || f.SQLITE_ERROR
                );
              }),
              (w.xError.errorReporter = console.error.bind(console)),
              (w.xRowid = (re, pe) => d.poke(re, pe, 'i64')),
              (w.setupModule = function (re) {
                let pe = !1;
                const ye =
                  this instanceof f.sqlite3_module
                    ? this
                    : re.struct || (pe = new f.sqlite3_module());
                try {
                  const X = re.methods || p("Missing 'methods' object.");
                  for (const Q of Object.entries({
                    xConnect: 'xCreate',
                    xDisconnect: 'xDestroy',
                  })) {
                    const ue = Q[0],
                      N = Q[1];
                    X[ue] === !0
                      ? (X[ue] = X[N])
                      : X[N] === !0 && (X[N] = X[ue]);
                  }
                  if (re.catchExceptions) {
                    const Q = function (B, J) {
                        return ['xConnect', 'xCreate'].indexOf(B) >= 0
                          ? function (Z, se, W, ce, _e, E) {
                              try {
                                return J(...arguments) || 0;
                              } catch (D) {
                                return (
                                  D instanceof a.WasmAllocError ||
                                    (d.dealloc(d.peekPtr(E)),
                                    d.pokePtr(E, d.allocCString(D.message))),
                                  w.xError(B, D)
                                );
                              }
                            }
                          : function (...Z) {
                              try {
                                return J(...Z) || 0;
                              } catch (se) {
                                return w.xError(B, se);
                              }
                            };
                      },
                      ue = [
                        'xCreate',
                        'xConnect',
                        'xBestIndex',
                        'xDisconnect',
                        'xDestroy',
                        'xOpen',
                        'xClose',
                        'xFilter',
                        'xNext',
                        'xEof',
                        'xColumn',
                        'xRowid',
                        'xUpdate',
                        'xBegin',
                        'xSync',
                        'xCommit',
                        'xRollback',
                        'xFindFunction',
                        'xRename',
                        'xSavepoint',
                        'xRelease',
                        'xRollbackTo',
                        'xShadowName',
                      ],
                      N = Object.create(null);
                    for (const B of ue) {
                      const J = X[B];
                      if (J instanceof Function)
                        B === 'xConnect' && X.xCreate === J
                          ? (N[B] = X.xCreate)
                          : B === 'xCreate' && X.xConnect === J
                            ? (N[B] = X.xConnect)
                            : (N[B] = Q(B, J));
                      else continue;
                    }
                    ye.installMethods(N, !1);
                  } else ye.installMethods(X, !!re.applyArgcCheck);
                  if (ye.$iVersion === 0) {
                    let Q;
                    typeof re.iVersion == 'number'
                      ? (Q = re.iVersion)
                      : ye.$xShadowName
                        ? (Q = 3)
                        : ye.$xSavePoint || ye.$xRelease || ye.$xRollbackTo
                          ? (Q = 2)
                          : (Q = 1),
                      (ye.$iVersion = Q);
                  }
                } catch (X) {
                  throw (pe && pe.dispose(), X);
                }
                return ye;
              }),
              (f.sqlite3_module.prototype.setupModule = function (re) {
                return w.setupModule.call(this, re);
              });
          }),
          globalThis.sqlite3ApiBootstrap.initializers.push(function (a) {
            const d = function f(p) {
              var M;
              if (!globalThis.SharedArrayBuffer || !globalThis.Atomics)
                return Promise.reject(
                  new Error(
                    'Cannot install OPFS: Missing SharedArrayBuffer and/or Atomics. The server must emit the COOP/COEP response headers to enable those. See https://sqlite.org/wasm/doc/trunk/persistence.md#coop-coep',
                  ),
                );
              if (typeof WorkerGlobalScope > 'u')
                return Promise.reject(
                  new Error(
                    'The OPFS sqlite3_vfs cannot run in the main thread because it requires Atomics.wait().',
                  ),
                );
              if (
                !globalThis.FileSystemHandle ||
                !globalThis.FileSystemDirectoryHandle ||
                !globalThis.FileSystemFileHandle ||
                !globalThis.FileSystemFileHandle.prototype
                  .createSyncAccessHandle ||
                !(
                  (M = navigator == null ? void 0 : navigator.storage) !=
                    null && M.getDirectory
                )
              )
                return Promise.reject(new Error('Missing required OPFS APIs.'));
              (!p || typeof p != 'object') && (p = Object.create(null));
              const w = new URL(globalThis.location.href).searchParams;
              return w.has('opfs-disable')
                ? Promise.resolve(a)
                : (p.verbose === void 0 &&
                    (p.verbose = w.has('opfs-verbose')
                      ? +w.get('opfs-verbose') || 2
                      : 1),
                  p.sanityChecks === void 0 &&
                    (p.sanityChecks = w.has('opfs-sanity-check')),
                  p.proxyUri === void 0 && (p.proxyUri = f.defaultProxyUri),
                  typeof p.proxyUri == 'function' &&
                    (p.proxyUri = p.proxyUri()),
                  new Promise(function (ne, re) {
                    const pe = [a.config.error, a.config.warn, a.config.log],
                      ye = (ee, ...fe) => {
                        p.verbose > ee && pe[ee]('OPFS syncer:', ...fe);
                      },
                      X = (...ee) => ye(2, ...ee),
                      Q = (...ee) => ye(1, ...ee),
                      ue = (...ee) => ye(0, ...ee),
                      N = a.util.toss,
                      B = a.capi,
                      J = a.util,
                      Z = a.wasm,
                      se = B.sqlite3_vfs,
                      W = B.sqlite3_file,
                      ce = B.sqlite3_io_methods,
                      _e = Object.create(null),
                      E = () => {
                        var ee;
                        return (
                          globalThis.FileSystemHandle &&
                          globalThis.FileSystemDirectoryHandle &&
                          globalThis.FileSystemFileHandle &&
                          globalThis.FileSystemFileHandle.prototype
                            .createSyncAccessHandle &&
                          ((ee =
                            navigator == null ? void 0 : navigator.storage) ==
                          null
                            ? void 0
                            : ee.getDirectory)
                        );
                      };
                    _e.metrics = {
                      dump: function () {
                        let ee,
                          fe = 0,
                          me = 0,
                          ke = 0;
                        for (ee in F.opIds) {
                          const we = oe[ee];
                          (fe += we.count),
                            (me += we.time),
                            (ke += we.wait),
                            (we.avgTime =
                              we.count && we.time ? we.time / we.count : 0),
                            (we.avgWait =
                              we.count && we.wait ? we.wait / we.count : 0);
                        }
                        a.config.log(
                          globalThis.location.href,
                          'metrics for',
                          globalThis.location.href,
                          ':',
                          oe,
                          `
Total of`,
                          fe,
                          'op(s) for',
                          me,
                          'ms (incl. ' +
                            ke +
                            ' ms of waiting on the async side)',
                        ),
                          a.config.log('Serialization metrics:', oe.s11n),
                          b.postMessage({ type: 'opfs-async-metrics' });
                      },
                      reset: function () {
                        let ee;
                        const fe = (ke) => (ke.count = ke.time = ke.wait = 0);
                        for (ee in F.opIds) fe((oe[ee] = Object.create(null)));
                        let me = (oe.s11n = Object.create(null));
                        (me = me.serialize = Object.create(null)),
                          (me.count = me.time = 0),
                          (me = oe.s11n.deserialize = Object.create(null)),
                          (me.count = me.time = 0);
                      },
                    };
                    const D = new ce(),
                      g = new se().addOnDispose(() => D.dispose());
                    let P;
                    const S = (ee) => ((P = !0), g.dispose(), re(ee)),
                      A = () => ((P = !1), ne(a)),
                      b = new Worker(
                        new URL(
                          '/assets/sqlite3-opfs-async-proxy-D34PESGD.js',
                          import.meta.url,
                        ),
                      );
                    setTimeout(() => {
                      P === void 0 &&
                        S(
                          new Error(
                            'Timeout while waiting for OPFS async proxy worker.',
                          ),
                        );
                    }, 4e3),
                      (b._originalOnError = b.onerror),
                      (b.onerror = function (ee) {
                        ue('Error initializing OPFS asyncer:', ee),
                          S(
                            new Error(
                              'Loading OPFS async Worker failed for unknown reasons.',
                            ),
                          );
                      });
                    const k = B.sqlite3_vfs_find(null),
                      L = k ? new se(k) : null;
                    (D.$iVersion = 1),
                      (g.$iVersion = 2),
                      (g.$szOsFile = B.sqlite3_file.structInfo.sizeof),
                      (g.$mxPathname = 1024),
                      (g.$zName = Z.allocCString('opfs')),
                      (g.$xDlOpen =
                        g.$xDlError =
                        g.$xDlSym =
                        g.$xDlClose =
                          null),
                      g.addOnDispose(
                        '$zName',
                        g.$zName,
                        'cleanup default VFS wrapper',
                        () => (L ? L.dispose() : null),
                      );
                    const F = Object.create(null);
                    (F.verbose = p.verbose),
                      (F.littleEndian = (() => {
                        const ee = new ArrayBuffer(2);
                        return (
                          new DataView(ee).setInt16(0, 256, !0),
                          new Int16Array(ee)[0] === 256
                        );
                      })()),
                      (F.asyncIdleWaitTime = 150),
                      (F.asyncS11nExceptions = 1),
                      (F.fileBufferSize = 1024 * 64),
                      (F.sabS11nOffset = F.fileBufferSize),
                      (F.sabS11nSize = g.$mxPathname * 2),
                      (F.sabIO = new SharedArrayBuffer(
                        F.fileBufferSize + F.sabS11nSize,
                      )),
                      (F.opIds = Object.create(null));
                    const oe = Object.create(null);
                    {
                      let ee = 0;
                      (F.opIds.whichOp = ee++),
                        (F.opIds.rc = ee++),
                        (F.opIds.xAccess = ee++),
                        (F.opIds.xClose = ee++),
                        (F.opIds.xDelete = ee++),
                        (F.opIds.xDeleteNoWait = ee++),
                        (F.opIds.xFileSize = ee++),
                        (F.opIds.xLock = ee++),
                        (F.opIds.xOpen = ee++),
                        (F.opIds.xRead = ee++),
                        (F.opIds.xSleep = ee++),
                        (F.opIds.xSync = ee++),
                        (F.opIds.xTruncate = ee++),
                        (F.opIds.xUnlock = ee++),
                        (F.opIds.xWrite = ee++),
                        (F.opIds.mkdir = ee++),
                        (F.opIds['opfs-async-metrics'] = ee++),
                        (F.opIds['opfs-async-shutdown'] = ee++),
                        (F.opIds.retry = ee++),
                        (F.sabOP = new SharedArrayBuffer(ee * 4)),
                        _e.metrics.reset();
                    }
                    (F.sq3Codes = Object.create(null)),
                      [
                        'SQLITE_ACCESS_EXISTS',
                        'SQLITE_ACCESS_READWRITE',
                        'SQLITE_BUSY',
                        'SQLITE_CANTOPEN',
                        'SQLITE_ERROR',
                        'SQLITE_IOERR',
                        'SQLITE_IOERR_ACCESS',
                        'SQLITE_IOERR_CLOSE',
                        'SQLITE_IOERR_DELETE',
                        'SQLITE_IOERR_FSYNC',
                        'SQLITE_IOERR_LOCK',
                        'SQLITE_IOERR_READ',
                        'SQLITE_IOERR_SHORT_READ',
                        'SQLITE_IOERR_TRUNCATE',
                        'SQLITE_IOERR_UNLOCK',
                        'SQLITE_IOERR_WRITE',
                        'SQLITE_LOCK_EXCLUSIVE',
                        'SQLITE_LOCK_NONE',
                        'SQLITE_LOCK_PENDING',
                        'SQLITE_LOCK_RESERVED',
                        'SQLITE_LOCK_SHARED',
                        'SQLITE_LOCKED',
                        'SQLITE_MISUSE',
                        'SQLITE_NOTFOUND',
                        'SQLITE_OPEN_CREATE',
                        'SQLITE_OPEN_DELETEONCLOSE',
                        'SQLITE_OPEN_MAIN_DB',
                        'SQLITE_OPEN_READONLY',
                      ].forEach((ee) => {
                        (F.sq3Codes[ee] = B[ee]) === void 0 &&
                          N('Maintenance required: not found:', ee);
                      }),
                      (F.opfsFlags = Object.assign(Object.create(null), {
                        OPFS_UNLOCK_ASAP: 1,
                        OPFS_UNLINK_BEFORE_OPEN: 2,
                        defaultUnlockAsap: !1,
                      }));
                    const be = (ee, ...fe) => {
                      const me = F.opIds[ee] || N('Invalid op ID:', ee);
                      F.s11n.serialize(...fe),
                        Atomics.store(F.sabOPView, F.opIds.rc, -1),
                        Atomics.store(F.sabOPView, F.opIds.whichOp, me),
                        Atomics.notify(F.sabOPView, F.opIds.whichOp);
                      const ke = performance.now();
                      for (
                        ;
                        Atomics.wait(F.sabOPView, F.opIds.rc, -1) !==
                        'not-equal';
                      );
                      const we = Atomics.load(F.sabOPView, F.opIds.rc);
                      if (
                        ((oe[ee].wait += performance.now() - ke),
                        we && F.asyncS11nExceptions)
                      ) {
                        const Ee = F.s11n.deserialize();
                        Ee && ue(ee + '() async error:', ...Ee);
                      }
                      return we;
                    };
                    _e.debug = {
                      asyncShutdown: () => {
                        Q(
                          'Shutting down OPFS async listener. The OPFS VFS will no longer work.',
                        ),
                          be('opfs-async-shutdown');
                      },
                      asyncRestart: () => {
                        Q(
                          'Attempting to restart OPFS VFS async listener. Might work, might not.',
                        ),
                          b.postMessage({ type: 'opfs-async-restart' });
                      },
                    };
                    const Ce = () => {
                        if (F.s11n) return F.s11n;
                        const ee = new TextDecoder(),
                          fe = new TextEncoder('utf-8'),
                          me = new Uint8Array(
                            F.sabIO,
                            F.sabS11nOffset,
                            F.sabS11nSize,
                          ),
                          ke = new DataView(
                            F.sabIO,
                            F.sabS11nOffset,
                            F.sabS11nSize,
                          );
                        F.s11n = Object.create(null);
                        const we = Object.create(null);
                        (we.number = {
                          id: 1,
                          size: 8,
                          getter: 'getFloat64',
                          setter: 'setFloat64',
                        }),
                          (we.bigint = {
                            id: 2,
                            size: 8,
                            getter: 'getBigInt64',
                            setter: 'setBigInt64',
                          }),
                          (we.boolean = {
                            id: 3,
                            size: 4,
                            getter: 'getInt32',
                            setter: 'setInt32',
                          }),
                          (we.string = { id: 4 });
                        const Ee = (z) =>
                            we[typeof z] ||
                            N(
                              'Maintenance required: this value type cannot be serialized.',
                              z,
                            ),
                          ge = (z) => {
                            switch (z) {
                              case we.number.id:
                                return we.number;
                              case we.bigint.id:
                                return we.bigint;
                              case we.boolean.id:
                                return we.boolean;
                              case we.string.id:
                                return we.string;
                              default:
                                N('Invalid type ID:', z);
                            }
                          };
                        return (
                          (F.s11n.deserialize = function (z = !1) {
                            ++oe.s11n.deserialize.count;
                            const R = performance.now(),
                              U = me[0],
                              Y = U ? [] : null;
                            if (U) {
                              const ae = [];
                              let xe = 1,
                                Ie,
                                We,
                                Je;
                              for (Ie = 0; Ie < U; ++Ie, ++xe)
                                ae.push(ge(me[xe]));
                              for (Ie = 0; Ie < U; ++Ie) {
                                const Cn = ae[Ie];
                                Cn.getter
                                  ? ((Je = ke[Cn.getter](xe, F.littleEndian)),
                                    (xe += Cn.size))
                                  : ((We = ke.getInt32(xe, F.littleEndian)),
                                    (xe += 4),
                                    (Je = ee.decode(me.slice(xe, xe + We))),
                                    (xe += We)),
                                  Y.push(Je);
                              }
                            }
                            return (
                              z && (me[0] = 0),
                              (oe.s11n.deserialize.time +=
                                performance.now() - R),
                              Y
                            );
                          }),
                          (F.s11n.serialize = function (...z) {
                            const R = performance.now();
                            if ((++oe.s11n.serialize.count, z.length)) {
                              const U = [];
                              let Y = 0,
                                ae = 1;
                              for (
                                me[0] = z.length & 255;
                                Y < z.length;
                                ++Y, ++ae
                              )
                                U.push(Ee(z[Y])), (me[ae] = U[Y].id);
                              for (Y = 0; Y < z.length; ++Y) {
                                const xe = U[Y];
                                if (xe.setter)
                                  ke[xe.setter](ae, z[Y], F.littleEndian),
                                    (ae += xe.size);
                                else {
                                  const Ie = fe.encode(z[Y]);
                                  ke.setInt32(
                                    ae,
                                    Ie.byteLength,
                                    F.littleEndian,
                                  ),
                                    (ae += 4),
                                    me.set(Ie, ae),
                                    (ae += Ie.byteLength);
                                }
                              }
                            } else me[0] = 0;
                            oe.s11n.serialize.time += performance.now() - R;
                          }),
                          F.s11n
                        );
                      },
                      ze = function ee(fe = 16) {
                        ee._chars ||
                          ((ee._chars =
                            'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ012346789'),
                          (ee._n = ee._chars.length));
                        const me = [];
                        let ke = 0;
                        for (; ke < fe; ++ke) {
                          const we =
                            ((Math.random() * (ee._n * 64)) % ee._n) | 0;
                          me[ke] = ee._chars[we];
                        }
                        return me.join('');
                      },
                      Re = Object.create(null),
                      Le = Object.create(null);
                    (Le.op = void 0), (Le.start = void 0);
                    const Ve = (ee) => {
                        (Le.start = performance.now()),
                          (Le.op = ee),
                          ++oe[ee].count;
                      },
                      Ge = () =>
                        (oe[Le.op].time += performance.now() - Le.start),
                      at = {
                        xCheckReservedLock: function (ee, fe) {
                          return Z.poke(fe, 0, 'i32'), 0;
                        },
                        xClose: function (ee) {
                          Ve('xClose');
                          let fe = 0;
                          const me = Re[ee];
                          return (
                            me &&
                              (delete Re[ee],
                              (fe = be('xClose', ee)),
                              me.sq3File && me.sq3File.dispose()),
                            Ge(),
                            fe
                          );
                        },
                        xDeviceCharacteristics: function (ee) {
                          return B.SQLITE_IOCAP_UNDELETABLE_WHEN_OPEN;
                        },
                        xFileControl: function (ee, fe, me) {
                          return B.SQLITE_NOTFOUND;
                        },
                        xFileSize: function (ee, fe) {
                          Ve('xFileSize');
                          let me = be('xFileSize', ee);
                          if (me == 0)
                            try {
                              const ke = F.s11n.deserialize()[0];
                              Z.poke(fe, ke, 'i64');
                            } catch (ke) {
                              ue(
                                'Unexpected error reading xFileSize() result:',
                                ke,
                              ),
                                (me = F.sq3Codes.SQLITE_IOERR);
                            }
                          return Ge(), me;
                        },
                        xLock: function (ee, fe) {
                          Ve('xLock');
                          const me = Re[ee];
                          let ke = 0;
                          return (
                            me.lockType
                              ? (me.lockType = fe)
                              : ((ke = be('xLock', ee, fe)),
                                ke === 0 && (me.lockType = fe)),
                            Ge(),
                            ke
                          );
                        },
                        xRead: function (ee, fe, me, ke) {
                          Ve('xRead');
                          const we = Re[ee];
                          let Ee;
                          try {
                            (Ee = be('xRead', ee, me, Number(ke))),
                              (Ee === 0 || B.SQLITE_IOERR_SHORT_READ === Ee) &&
                                Z.heap8u().set(we.sabView.subarray(0, me), fe);
                          } catch (ge) {
                            ue('xRead(', arguments, ') failed:', ge, we),
                              (Ee = B.SQLITE_IOERR_READ);
                          }
                          return Ge(), Ee;
                        },
                        xSync: function (ee, fe) {
                          Ve('xSync'), ++oe.xSync.count;
                          const me = be('xSync', ee, fe);
                          return Ge(), me;
                        },
                        xTruncate: function (ee, fe) {
                          Ve('xTruncate');
                          const me = be('xTruncate', ee, Number(fe));
                          return Ge(), me;
                        },
                        xUnlock: function (ee, fe) {
                          Ve('xUnlock');
                          const me = Re[ee];
                          let ke = 0;
                          return (
                            B.SQLITE_LOCK_NONE === fe &&
                              me.lockType &&
                              (ke = be('xUnlock', ee, fe)),
                            ke === 0 && (me.lockType = fe),
                            Ge(),
                            ke
                          );
                        },
                        xWrite: function (ee, fe, me, ke) {
                          Ve('xWrite');
                          const we = Re[ee];
                          let Ee;
                          try {
                            we.sabView.set(Z.heap8u().subarray(fe, fe + me)),
                              (Ee = be('xWrite', ee, me, Number(ke)));
                          } catch (ge) {
                            ue('xWrite(', arguments, ') failed:', ge, we),
                              (Ee = B.SQLITE_IOERR_WRITE);
                          }
                          return Ge(), Ee;
                        },
                      },
                      lt = {
                        xAccess: function (ee, fe, me, ke) {
                          Ve('xAccess');
                          const we = be('xAccess', Z.cstrToJs(fe));
                          return Z.poke(ke, we ? 0 : 1, 'i32'), Ge(), 0;
                        },
                        xCurrentTime: function (ee, fe) {
                          return (
                            Z.poke(
                              fe,
                              24405875e-1 + new Date().getTime() / 864e5,
                              'double',
                            ),
                            0
                          );
                        },
                        xCurrentTimeInt64: function (ee, fe) {
                          return (
                            Z.poke(
                              fe,
                              24405875e-1 * 864e5 + new Date().getTime(),
                              'i64',
                            ),
                            0
                          );
                        },
                        xDelete: function (ee, fe, me) {
                          Ve('xDelete');
                          const ke = be('xDelete', Z.cstrToJs(fe), me, !1);
                          return Ge(), ke;
                        },
                        xFullPathname: function (ee, fe, me, ke) {
                          return Z.cstrncpy(ke, fe, me) < me
                            ? 0
                            : B.SQLITE_CANTOPEN;
                        },
                        xGetLastError: function (ee, fe, me) {
                          return (
                            Q(
                              'OPFS xGetLastError() has nothing sensible to return.',
                            ),
                            0
                          );
                        },
                        xOpen: function (fe, me, ke, we, Ee) {
                          Ve('xOpen');
                          let ge = 0;
                          me === 0
                            ? (me = ze())
                            : Z.isPtr(me) &&
                              (B.sqlite3_uri_boolean(
                                me,
                                'opfs-unlock-asap',
                                0,
                              ) && (ge |= F.opfsFlags.OPFS_UNLOCK_ASAP),
                              B.sqlite3_uri_boolean(
                                me,
                                'delete-before-open',
                                0,
                              ) && (ge |= F.opfsFlags.OPFS_UNLINK_BEFORE_OPEN),
                              (me = Z.cstrToJs(me)));
                          const z = Object.create(null);
                          (z.fid = ke),
                            (z.filename = me),
                            (z.sab = new SharedArrayBuffer(F.fileBufferSize)),
                            (z.flags = we);
                          const R = be('xOpen', ke, me, we, ge);
                          return (
                            R ||
                              (z.readOnly &&
                                Z.poke(Ee, B.SQLITE_OPEN_READONLY, 'i32'),
                              (Re[ke] = z),
                              (z.sabView = F.sabFileBufView),
                              (z.sq3File = new W(ke)),
                              (z.sq3File.$pMethods = D.pointer),
                              (z.lockType = B.SQLITE_LOCK_NONE)),
                            Ge(),
                            R
                          );
                        },
                      };
                    L &&
                      ((g.$xRandomness = L.$xRandomness),
                      (g.$xSleep = L.$xSleep)),
                      g.$xRandomness ||
                        (lt.xRandomness = function (ee, fe, me) {
                          const ke = Z.heap8u();
                          let we = 0;
                          for (; we < fe; ++we)
                            ke[me + we] = (Math.random() * 255e3) & 255;
                          return we;
                        }),
                      g.$xSleep ||
                        (lt.xSleep = function (ee, fe) {
                          return (
                            Atomics.wait(F.sabOPView, F.opIds.xSleep, 0, fe), 0
                          );
                        }),
                      (_e.getResolvedPath = function (ee, fe) {
                        const me = new URL(ee, 'file://irrelevant').pathname;
                        return fe ? me.split('/').filter((ke) => !!ke) : me;
                      }),
                      (_e.getDirForFilename = async function (fe, me = !1) {
                        const ke = _e.getResolvedPath(fe, !0),
                          we = ke.pop();
                        let Ee = _e.rootDirectory;
                        for (const ge of ke)
                          ge &&
                            (Ee = await Ee.getDirectoryHandle(ge, {
                              create: !!me,
                            }));
                        return [Ee, we];
                      }),
                      (_e.mkdir = async function (ee) {
                        try {
                          return (
                            await _e.getDirForFilename(ee + '/filepart', !0), !0
                          );
                        } catch {
                          return !1;
                        }
                      }),
                      (_e.entryExists = async function (ee) {
                        try {
                          const [fe, me] = await _e.getDirForFilename(ee);
                          return await fe.getFileHandle(me), !0;
                        } catch {
                          return !1;
                        }
                      }),
                      (_e.randomFilename = ze),
                      (_e.treeList = async function () {
                        const ee = async function me(ke, we) {
                            (we.name = ke.name),
                              (we.dirs = []),
                              (we.files = []);
                            for await (const Ee of ke.values())
                              if (Ee.kind === 'directory') {
                                const ge = Object.create(null);
                                we.dirs.push(ge), await me(Ee, ge);
                              } else we.files.push(Ee.name);
                          },
                          fe = Object.create(null);
                        return await ee(_e.rootDirectory, fe), fe;
                      }),
                      (_e.rmfr = async function () {
                        const ee = _e.rootDirectory,
                          fe = { recurse: !0 };
                        for await (const me of ee.values())
                          ee.removeEntry(me.name, fe);
                      }),
                      (_e.unlink = async function (ee, fe = !1, me = !1) {
                        try {
                          const [ke, we] = await _e.getDirForFilename(ee, !1);
                          return (
                            await ke.removeEntry(we, { recursive: fe }), !0
                          );
                        } catch (ke) {
                          if (me)
                            throw new Error(
                              'unlink(',
                              arguments[0],
                              ') failed: ' + ke.message,
                              { cause: ke },
                            );
                          return !1;
                        }
                      }),
                      (_e.traverse = async function (ee) {
                        const fe = {
                          recursive: !0,
                          directory: _e.rootDirectory,
                        };
                        typeof ee == 'function' && (ee = { callback: ee }),
                          (ee = Object.assign(fe, ee || {})),
                          (async function ke(we, Ee) {
                            for await (const ge of we.values()) {
                              if (ee.callback(ge, we, Ee) === !1) return !1;
                              if (
                                ee.recursive &&
                                ge.kind === 'directory' &&
                                (await ke(ge, Ee + 1)) === !1
                              )
                                break;
                            }
                          })(ee.directory, 0);
                      });
                    const Kt = async function (ee, fe) {
                      const [me, ke] = await _e.getDirForFilename(ee, !0);
                      let Ee = await (
                          await me.getFileHandle(ke, { create: !0 })
                        ).createSyncAccessHandle(),
                        ge = 0,
                        z,
                        R = !1;
                      try {
                        for (Ee.truncate(0); (z = await fe()) !== void 0; )
                          z instanceof ArrayBuffer && (z = new Uint8Array(z)),
                            ge === 0 &&
                              z.byteLength >= 15 &&
                              (J.affirmDbHeader(z), (R = !0)),
                            Ee.write(z, { at: ge }),
                            (ge += z.byteLength);
                        if (
                          ((ge < 512 || ge % 512 !== 0) &&
                            N(
                              'Input size',
                              ge,
                              'is not correct for an SQLite database.',
                            ),
                          !R)
                        ) {
                          const U = new Uint8Array(20);
                          Ee.read(U, { at: 0 }), J.affirmDbHeader(U);
                        }
                        return Ee.write(new Uint8Array([1, 1]), { at: 18 }), ge;
                      } catch (U) {
                        throw (
                          (await Ee.close(),
                          (Ee = void 0),
                          await me.removeEntry(ke).catch(() => {}),
                          U)
                        );
                      } finally {
                        Ee && (await Ee.close());
                      }
                    };
                    if (
                      ((_e.importDb = async function (ee, fe) {
                        if (fe instanceof Function) return Kt(ee, fe);
                        fe instanceof ArrayBuffer && (fe = new Uint8Array(fe)),
                          J.affirmIsDb(fe);
                        const me = fe.byteLength,
                          [ke, we] = await _e.getDirForFilename(ee, !0);
                        let Ee,
                          ge = 0;
                        try {
                          return (
                            (Ee = await (
                              await ke.getFileHandle(we, { create: !0 })
                            ).createSyncAccessHandle()),
                            Ee.truncate(0),
                            (ge = Ee.write(fe, { at: 0 })),
                            ge != me &&
                              N(
                                'Expected to write ' +
                                  me +
                                  ' bytes but wrote ' +
                                  ge +
                                  '.',
                              ),
                            Ee.write(new Uint8Array([1, 1]), { at: 18 }),
                            ge
                          );
                        } catch (z) {
                          throw (
                            (Ee && (await Ee.close(), (Ee = void 0)),
                            await ke.removeEntry(we).catch(() => {}),
                            z)
                          );
                        } finally {
                          Ee && (await Ee.close());
                        }
                      }),
                      a.oo1)
                    ) {
                      const ee = function (...fe) {
                        const me = a.oo1.DB.dbCtorHelper.normalizeArgs(...fe);
                        (me.vfs = g.$zName),
                          a.oo1.DB.dbCtorHelper.call(this, me);
                      };
                      (ee.prototype = Object.create(a.oo1.DB.prototype)),
                        (a.oo1.OpfsDb = ee),
                        (ee.importDb = _e.importDb),
                        a.oo1.DB.dbCtorHelper.setVfsPostOpenSql(
                          g.pointer,
                          function (fe, me) {
                            me.capi.sqlite3_busy_timeout(fe, 1e4),
                              me.capi.sqlite3_exec(
                                fe,
                                [
                                  'pragma journal_mode=DELETE;',
                                  'pragma cache_size=-16384;',
                                ],
                                0,
                                0,
                                0,
                              );
                          },
                        );
                    }
                    const xt = function () {
                      const ee = Z.scopedAllocPush(),
                        fe = new W();
                      try {
                        const me = fe.pointer,
                          ke =
                            B.SQLITE_OPEN_CREATE |
                            B.SQLITE_OPEN_READWRITE |
                            B.SQLITE_OPEN_MAIN_DB,
                          we = Z.scopedAlloc(8),
                          Ee = '/sanity/check/file' + ze(8),
                          ge = Z.scopedAllocCString(Ee);
                        let z;
                        if (
                          (F.s11n.serialize('This is ä string.'),
                          (z = F.s11n.deserialize()),
                          X('deserialize() says:', z),
                          z[0] !== 'This is ä string.' &&
                            N('String d13n error.'),
                          lt.xAccess(g.pointer, ge, 0, we),
                          (z = Z.peek(we, 'i32')),
                          X('xAccess(', Ee, ') exists ?=', z),
                          (z = lt.xOpen(g.pointer, ge, me, ke, we)),
                          X(
                            'open rc =',
                            z,
                            'state.sabOPView[xOpen] =',
                            F.sabOPView[F.opIds.xOpen],
                          ),
                          z !== 0)
                        ) {
                          ue('open failed with code', z);
                          return;
                        }
                        lt.xAccess(g.pointer, ge, 0, we),
                          (z = Z.peek(we, 'i32')),
                          z || N('xAccess() failed to detect file.'),
                          (z = at.xSync(fe.pointer, 0)),
                          z && N('sync failed w/ rc', z),
                          (z = at.xTruncate(fe.pointer, 1024)),
                          z && N('truncate failed w/ rc', z),
                          Z.poke(we, 0, 'i64'),
                          (z = at.xFileSize(fe.pointer, we)),
                          z && N('xFileSize failed w/ rc', z),
                          X('xFileSize says:', Z.peek(we, 'i64')),
                          (z = at.xWrite(fe.pointer, ge, 10, 1)),
                          z && N('xWrite() failed!');
                        const R = Z.scopedAlloc(16);
                        (z = at.xRead(fe.pointer, R, 6, 2)), Z.poke(R + 6, 0);
                        let U = Z.cstrToJs(R);
                        X('xRead() got:', U),
                          U !== 'sanity' && N('Unexpected xRead() value.'),
                          lt.xSleep &&
                            (X('xSleep()ing before close()ing...'),
                            lt.xSleep(g.pointer, 2e3),
                            X('waking up from xSleep()')),
                          (z = at.xClose(me)),
                          X('xClose rc =', z, 'sabOPView =', F.sabOPView),
                          X('Deleting file:', Ee),
                          lt.xDelete(g.pointer, ge, 4660),
                          lt.xAccess(g.pointer, ge, 0, we),
                          (z = Z.peek(we, 'i32')),
                          z &&
                            N(
                              'Expecting 0 from xAccess(',
                              Ee,
                              ') after xDelete().',
                            ),
                          Q('End of OPFS sanity checks.');
                      } finally {
                        fe.dispose(), Z.scopedAllocPop(ee);
                      }
                    };
                    b.onmessage = function ({ data: ee }) {
                      switch (ee.type) {
                        case 'opfs-unavailable':
                          S(new Error(ee.payload.join(' ')));
                          break;
                        case 'opfs-async-loaded':
                          b.postMessage({ type: 'opfs-async-init', args: F });
                          break;
                        case 'opfs-async-inited': {
                          if (P === !0) break;
                          try {
                            a.vfs.installVfs({
                              io: { struct: D, methods: at },
                              vfs: { struct: g, methods: lt },
                            }),
                              (F.sabOPView = new Int32Array(F.sabOP)),
                              (F.sabFileBufView = new Uint8Array(
                                F.sabIO,
                                0,
                                F.fileBufferSize,
                              )),
                              (F.sabS11nView = new Uint8Array(
                                F.sabIO,
                                F.sabS11nOffset,
                                F.sabS11nSize,
                              )),
                              Ce(),
                              p.sanityChecks &&
                                (Q(
                                  'Running sanity checks because of opfs-sanity-check URL arg...',
                                ),
                                xt()),
                              E()
                                ? navigator.storage
                                    .getDirectory()
                                    .then((fe) => {
                                      (b.onerror = b._originalOnError),
                                        delete b._originalOnError,
                                        (a.opfs = _e),
                                        (_e.rootDirectory = fe),
                                        X('End of OPFS sqlite3_vfs setup.', g),
                                        A();
                                    })
                                    .catch(S)
                                : A();
                          } catch (fe) {
                            ue(fe), S(fe);
                          }
                          break;
                        }
                        default: {
                          const fe =
                            'Unexpected message from the OPFS async worker: ' +
                            JSON.stringify(ee);
                          ue(fe), S(new Error(fe));
                          break;
                        }
                      }
                    };
                  }));
            };
            (d.defaultProxyUri = 'sqlite3-opfs-async-proxy.js'),
              globalThis.sqlite3ApiBootstrap.initializersAsync.push(
                async (f) => {
                  try {
                    let p = d.defaultProxyUri;
                    return (
                      f.scriptInfo.sqlite3Dir &&
                        (d.defaultProxyUri = f.scriptInfo.sqlite3Dir + p),
                      d().catch((w) => {
                        f.config.warn(
                          'Ignoring inability to install OPFS sqlite3_vfs:',
                          w.message,
                        );
                      })
                    );
                  } catch (p) {
                    return (
                      f.config.error('installOpfsVfs() exception:', p),
                      Promise.reject(p)
                    );
                  }
                },
              );
          }),
          globalThis.sqlite3ApiBootstrap.initializers.push(function (a) {
            var Re, Le, Ve, Ge, at, lt, Kt, xt, ee, fe, me, ke, Lu, Ee;
            const d = a.util.toss,
              f = a.util.toss3,
              p = Object.create(null),
              w = a.capi,
              O = a.util,
              M = a.wasm,
              ne = 4096,
              re = 512,
              pe = 4,
              ye = 8,
              X = re + pe,
              Q = re,
              ue = X,
              N = ne,
              B =
                w.SQLITE_OPEN_MAIN_DB |
                w.SQLITE_OPEN_MAIN_JOURNAL |
                w.SQLITE_OPEN_SUPER_JOURNAL |
                w.SQLITE_OPEN_WAL,
              J = '.opaque',
              Z = () => Math.random().toString(36).slice(2),
              se = new TextDecoder(),
              W = new TextEncoder(),
              ce = Object.assign(Object.create(null), {
                name: 'opfs-sahpool',
                directory: void 0,
                initialCapacity: 6,
                clearOnInit: !1,
                verbosity: 2,
              }),
              _e = [a.config.error, a.config.warn, a.config.log];
            a.config.log;
            const E = a.config.warn;
            a.config.error;
            const D = new Map(),
              g = (ge) => D.get(ge),
              P = (ge, z) => {
                z ? D.set(ge, z) : D.delete(ge);
              },
              S = new Map(),
              A = (ge) => S.get(ge),
              b = (ge, z) => {
                z ? S.set(ge, z) : S.delete(ge);
              },
              k = {
                xCheckReservedLock: function (ge, z) {
                  const R = A(ge);
                  return (
                    R.log('xCheckReservedLock'), R.storeErr(), M.poke32(z, 1), 0
                  );
                },
                xClose: function (ge) {
                  const z = A(ge);
                  z.storeErr();
                  const R = z.getOFileForS3File(ge);
                  if (R)
                    try {
                      z.log(`xClose ${R.path}`),
                        z.mapS3FileToOFile(ge, !1),
                        R.sah.flush(),
                        R.flags & w.SQLITE_OPEN_DELETEONCLOSE &&
                          z.deletePath(R.path);
                    } catch (U) {
                      return z.storeErr(U, w.SQLITE_IOERR);
                    }
                  return 0;
                },
                xDeviceCharacteristics: function (ge) {
                  return w.SQLITE_IOCAP_UNDELETABLE_WHEN_OPEN;
                },
                xFileControl: function (ge, z, R) {
                  return w.SQLITE_NOTFOUND;
                },
                xFileSize: function (ge, z) {
                  const R = A(ge);
                  R.log('xFileSize');
                  const Y = R.getOFileForS3File(ge).sah.getSize() - N;
                  return M.poke64(z, BigInt(Y)), 0;
                },
                xLock: function (ge, z) {
                  const R = A(ge);
                  R.log(`xLock ${z}`), R.storeErr();
                  const U = R.getOFileForS3File(ge);
                  return (U.lockType = z), 0;
                },
                xRead: function (ge, z, R, U) {
                  const Y = A(ge);
                  Y.storeErr();
                  const ae = Y.getOFileForS3File(ge);
                  Y.log(`xRead ${ae.path} ${R} @ ${U}`);
                  try {
                    const xe = ae.sah.read(M.heap8u().subarray(z, z + R), {
                      at: N + Number(U),
                    });
                    return xe < R
                      ? (M.heap8u().fill(0, z + xe, z + R),
                        w.SQLITE_IOERR_SHORT_READ)
                      : 0;
                  } catch (xe) {
                    return Y.storeErr(xe, w.SQLITE_IOERR);
                  }
                },
                xSectorSize: function (ge) {
                  return ne;
                },
                xSync: function (ge, z) {
                  const R = A(ge);
                  R.log(`xSync ${z}`), R.storeErr();
                  const U = R.getOFileForS3File(ge);
                  try {
                    return U.sah.flush(), 0;
                  } catch (Y) {
                    return R.storeErr(Y, w.SQLITE_IOERR);
                  }
                },
                xTruncate: function (ge, z) {
                  const R = A(ge);
                  R.log(`xTruncate ${z}`), R.storeErr();
                  const U = R.getOFileForS3File(ge);
                  try {
                    return U.sah.truncate(N + Number(z)), 0;
                  } catch (Y) {
                    return R.storeErr(Y, w.SQLITE_IOERR);
                  }
                },
                xUnlock: function (ge, z) {
                  const R = A(ge);
                  R.log('xUnlock');
                  const U = R.getOFileForS3File(ge);
                  return (U.lockType = z), 0;
                },
                xWrite: function (ge, z, R, U) {
                  const Y = A(ge);
                  Y.storeErr();
                  const ae = Y.getOFileForS3File(ge);
                  Y.log(`xWrite ${ae.path} ${R} ${U}`);
                  try {
                    const xe = ae.sah.write(M.heap8u().subarray(z, z + R), {
                      at: N + Number(U),
                    });
                    return R === xe ? 0 : d('Unknown write() failure.');
                  } catch (xe) {
                    return Y.storeErr(xe, w.SQLITE_IOERR);
                  }
                },
              },
              L = new w.sqlite3_io_methods();
            (L.$iVersion = 1),
              a.vfs.installVfs({ io: { struct: L, methods: k } });
            const F = {
                xAccess: function (ge, z, R, U) {
                  const Y = g(ge);
                  Y.storeErr();
                  try {
                    const ae = Y.getPath(z);
                    M.poke32(U, Y.hasFilename(ae) ? 1 : 0);
                  } catch {
                    M.poke32(U, 0);
                  }
                  return 0;
                },
                xCurrentTime: function (ge, z) {
                  return (
                    M.poke(
                      z,
                      24405875e-1 + new Date().getTime() / 864e5,
                      'double',
                    ),
                    0
                  );
                },
                xCurrentTimeInt64: function (ge, z) {
                  return (
                    M.poke(
                      z,
                      24405875e-1 * 864e5 + new Date().getTime(),
                      'i64',
                    ),
                    0
                  );
                },
                xDelete: function (ge, z, R) {
                  const U = g(ge);
                  U.log(`xDelete ${M.cstrToJs(z)}`), U.storeErr();
                  try {
                    return U.deletePath(U.getPath(z)), 0;
                  } catch (Y) {
                    return U.storeErr(Y), w.SQLITE_IOERR_DELETE;
                  }
                },
                xFullPathname: function (ge, z, R, U) {
                  return M.cstrncpy(U, z, R) < R ? 0 : w.SQLITE_CANTOPEN;
                },
                xGetLastError: function (ge, z, R) {
                  const U = g(ge),
                    Y = U.popErr();
                  if ((U.log(`xGetLastError ${z} e =`, Y), Y)) {
                    const ae = M.scopedAllocPush();
                    try {
                      const [xe, Ie] = M.scopedAllocCString(Y.message, !0);
                      M.cstrncpy(R, xe, z), Ie > z && M.poke8(R + z - 1, 0);
                    } catch {
                      return w.SQLITE_NOMEM;
                    } finally {
                      M.scopedAllocPop(ae);
                    }
                  }
                  return Y ? Y.sqlite3Rc || w.SQLITE_IOERR : 0;
                },
                xOpen: function (z, R, U, Y, ae) {
                  const xe = g(z);
                  try {
                    xe.log(`xOpen ${M.cstrToJs(R)} ${Y}`);
                    const Ie = R && M.peek8(R) ? xe.getPath(R) : Z();
                    let We = xe.getSAHForPath(Ie);
                    !We &&
                      Y & w.SQLITE_OPEN_CREATE &&
                      (xe.getFileCount() < xe.getCapacity()
                        ? ((We = xe.nextAvailableSAH()),
                          xe.setAssociatedPath(We, Ie, Y))
                        : d('SAH pool is full. Cannot create file', Ie)),
                      We || d('file not found:', Ie);
                    const Je = { path: Ie, flags: Y, sah: We };
                    xe.mapS3FileToOFile(U, Je),
                      (Je.lockType = w.SQLITE_LOCK_NONE);
                    const Cn = new w.sqlite3_file(U);
                    return (
                      (Cn.$pMethods = L.pointer),
                      Cn.dispose(),
                      M.poke32(ae, Y),
                      0
                    );
                  } catch (Ie) {
                    return xe.storeErr(Ie), w.SQLITE_CANTOPEN;
                  }
                },
              },
              oe = function (ge) {
                a.capi.sqlite3_vfs_find(ge) &&
                  f('VFS name is already registered:', ge);
                const z = new w.sqlite3_vfs(),
                  R = w.sqlite3_vfs_find(null),
                  U = R ? new w.sqlite3_vfs(R) : null;
                return (
                  (z.$iVersion = 2),
                  (z.$szOsFile = w.sqlite3_file.structInfo.sizeof),
                  (z.$mxPathname = re),
                  z.addOnDispose((z.$zName = M.allocCString(ge)), () =>
                    P(z.pointer, 0),
                  ),
                  U &&
                    ((z.$xRandomness = U.$xRandomness),
                    (z.$xSleep = U.$xSleep),
                    U.dispose()),
                  !z.$xRandomness &&
                    !F.xRandomness &&
                    (F.xRandomness = function (Y, ae, xe) {
                      const Ie = M.heap8u();
                      let We = 0;
                      for (; We < ae; ++We)
                        Ie[xe + We] = (Math.random() * 255e3) & 255;
                      return We;
                    }),
                  !z.$xSleep && !F.xSleep && (F.xSleep = (Y, ae) => 0),
                  a.vfs.installVfs({ vfs: { struct: z, methods: F } }),
                  z
                );
              };
            class be {
              constructor(z = Object.create(null)) {
                vn(this, ke);
                Eg(this, 'vfsDir');
                vn(this, Re);
                vn(this, Le);
                vn(this, Ve);
                vn(this, Ge, new Map());
                vn(this, at, new Map());
                vn(this, lt, new Set());
                vn(this, Kt, new Map());
                vn(this, xt, new Uint8Array(X));
                vn(this, ee);
                vn(this, fe);
                vn(this, me);
                nr(this, me, z.verbosity ?? ce.verbosity),
                  (this.vfsName = z.name || ce.name),
                  nr(this, fe, oe(this.vfsName)),
                  P(Te(this, fe).pointer, this),
                  (this.vfsDir = z.directory || '.' + this.vfsName),
                  nr(
                    this,
                    ee,
                    new DataView(Te(this, xt).buffer, Te(this, xt).byteOffset),
                  ),
                  (this.isReady = this.reset(
                    !!(z.clearOnInit ?? ce.clearOnInit),
                  ).then(() => {
                    if (this.$error) throw this.$error;
                    return this.getCapacity()
                      ? Promise.resolve(void 0)
                      : this.addCapacity(
                          z.initialCapacity || ce.initialCapacity,
                        );
                  }));
              }
              log(...z) {
                Al(this, ke, Lu).call(this, 2, ...z);
              }
              warn(...z) {
                Al(this, ke, Lu).call(this, 1, ...z);
              }
              error(...z) {
                Al(this, ke, Lu).call(this, 0, ...z);
              }
              getVfs() {
                return Te(this, fe);
              }
              getCapacity() {
                return Te(this, Ge).size;
              }
              getFileCount() {
                return Te(this, at).size;
              }
              getFileNames() {
                const z = [],
                  R = Te(this, at).keys();
                for (const U of R) z.push(U);
                return z;
              }
              async addCapacity(z) {
                for (let R = 0; R < z; ++R) {
                  const U = Z(),
                    ae = await (
                      await Te(this, Le).getFileHandle(U, { create: !0 })
                    ).createSyncAccessHandle();
                  Te(this, Ge).set(ae, U), this.setAssociatedPath(ae, '', 0);
                }
                return this.getCapacity();
              }
              async reduceCapacity(z) {
                let R = 0;
                for (const U of Array.from(Te(this, lt))) {
                  if (R === z || this.getFileCount() === this.getCapacity())
                    break;
                  const Y = Te(this, Ge).get(U);
                  U.close(),
                    await Te(this, Le).removeEntry(Y),
                    Te(this, Ge).delete(U),
                    Te(this, lt).delete(U),
                    ++R;
                }
                return R;
              }
              releaseAccessHandles() {
                for (const z of Te(this, Ge).keys()) z.close();
                Te(this, Ge).clear(),
                  Te(this, at).clear(),
                  Te(this, lt).clear();
              }
              async acquireAccessHandles(z) {
                const R = [];
                for await (const [U, Y] of Te(this, Le))
                  Y.kind === 'file' && R.push([U, Y]);
                return Promise.all(
                  R.map(async ([U, Y]) => {
                    try {
                      const ae = await Y.createSyncAccessHandle();
                      if ((Te(this, Ge).set(ae, U), z))
                        ae.truncate(N), this.setAssociatedPath(ae, '', 0);
                      else {
                        const xe = this.getAssociatedPath(ae);
                        xe ? Te(this, at).set(xe, ae) : Te(this, lt).add(ae);
                      }
                    } catch (ae) {
                      throw (
                        (this.storeErr(ae), this.releaseAccessHandles(), ae)
                      );
                    }
                  }),
                );
              }
              getAssociatedPath(z) {
                z.read(Te(this, xt), { at: 0 });
                const R = Te(this, ee).getUint32(Q);
                if (
                  Te(this, xt)[0] &&
                  (R & w.SQLITE_OPEN_DELETEONCLOSE || !(R & B))
                )
                  return (
                    E(
                      `Removing file with unexpected flags ${R.toString(16)}`,
                      Te(this, xt),
                    ),
                    this.setAssociatedPath(z, '', 0),
                    ''
                  );
                const U = new Uint32Array(ye / 4);
                z.read(U, { at: ue });
                const Y = this.computeDigest(Te(this, xt));
                if (U.every((ae, xe) => ae === Y[xe])) {
                  const ae = Te(this, xt).findIndex((xe) => xe === 0);
                  return (
                    ae === 0 && z.truncate(N),
                    ae ? se.decode(Te(this, xt).subarray(0, ae)) : ''
                  );
                } else
                  return (
                    E('Disassociating file with bad digest.'),
                    this.setAssociatedPath(z, '', 0),
                    ''
                  );
              }
              setAssociatedPath(z, R, U) {
                const Y = W.encodeInto(R, Te(this, xt));
                re <= Y.written + 1 && d('Path too long:', R),
                  Te(this, xt).fill(0, Y.written, re),
                  Te(this, ee).setUint32(Q, U);
                const ae = this.computeDigest(Te(this, xt));
                z.write(Te(this, xt), { at: 0 }),
                  z.write(ae, { at: ue }),
                  z.flush(),
                  R
                    ? (Te(this, at).set(R, z), Te(this, lt).delete(z))
                    : (z.truncate(N), Te(this, lt).add(z));
              }
              computeDigest(z) {
                let R = 3735928559,
                  U = 1103547991;
                for (const Y of z)
                  (R = 31 * R + Y * 307), (U = 31 * U + Y * 307);
                return new Uint32Array([R >>> 0, U >>> 0]);
              }
              async reset(z) {
                await this.isReady;
                let R = await navigator.storage.getDirectory(),
                  U;
                for (const Y of this.vfsDir.split('/'))
                  Y &&
                    ((U = R),
                    (R = await R.getDirectoryHandle(Y, { create: !0 })));
                return (
                  nr(this, Re, R),
                  nr(this, Ve, U),
                  nr(
                    this,
                    Le,
                    await Te(this, Re).getDirectoryHandle(J, { create: !0 }),
                  ),
                  this.releaseAccessHandles(),
                  this.acquireAccessHandles(z)
                );
              }
              getPath(z) {
                return (
                  M.isPtr(z) && (z = M.cstrToJs(z)),
                  (z instanceof URL ? z : new URL(z, 'file://localhost/'))
                    .pathname
                );
              }
              deletePath(z) {
                const R = Te(this, at).get(z);
                return (
                  R &&
                    (Te(this, at).delete(z), this.setAssociatedPath(R, '', 0)),
                  !!R
                );
              }
              storeErr(z, R) {
                return (
                  z && ((z.sqlite3Rc = R || w.SQLITE_IOERR), this.error(z)),
                  (this.$error = z),
                  R
                );
              }
              popErr() {
                const z = this.$error;
                return (this.$error = void 0), z;
              }
              nextAvailableSAH() {
                const [z] = Te(this, lt).keys();
                return z;
              }
              getOFileForS3File(z) {
                return Te(this, Kt).get(z);
              }
              mapS3FileToOFile(z, R) {
                R
                  ? (Te(this, Kt).set(z, R), b(z, this))
                  : (Te(this, Kt).delete(z), b(z, !1));
              }
              hasFilename(z) {
                return Te(this, at).has(z);
              }
              getSAHForPath(z) {
                return Te(this, at).get(z);
              }
              async removeVfs() {
                if (!Te(this, fe).pointer || !Te(this, Le)) return !1;
                w.sqlite3_vfs_unregister(Te(this, fe).pointer),
                  Te(this, fe).dispose();
                try {
                  this.releaseAccessHandles(),
                    await Te(this, Re).removeEntry(J, { recursive: !0 }),
                    nr(this, Le, void 0),
                    await Te(this, Ve).removeEntry(Te(this, Re).name, {
                      recursive: !0,
                    }),
                    nr(this, Re, nr(this, Ve, void 0));
                } catch (z) {
                  a.config.error(this.vfsName, 'removeVfs() failed:', z);
                }
                return !0;
              }
              exportFile(z) {
                const R = Te(this, at).get(z) || d('File not found:', z),
                  U = R.getSize() - N,
                  Y = new Uint8Array(U > 0 ? U : 0);
                if (U > 0) {
                  const ae = R.read(Y, { at: N });
                  ae != U &&
                    d('Expected to read ' + U + ' bytes but read ' + ae + '.');
                }
                return Y;
              }
              async importDbChunked(z, R) {
                const U =
                  Te(this, at).get(z) ||
                  this.nextAvailableSAH() ||
                  d('No available handles to import to.');
                U.truncate(0);
                let Y = 0,
                  ae,
                  xe = !1;
                try {
                  for (; (ae = await R()) !== void 0; )
                    ae instanceof ArrayBuffer && (ae = new Uint8Array(ae)),
                      Y === 0 &&
                        ae.byteLength >= 15 &&
                        (O.affirmDbHeader(ae), (xe = !0)),
                      U.write(ae, { at: N + Y }),
                      (Y += ae.byteLength);
                  if (
                    ((Y < 512 || Y % 512 !== 0) &&
                      d(
                        'Input size',
                        Y,
                        'is not correct for an SQLite database.',
                      ),
                    !xe)
                  ) {
                    const Ie = new Uint8Array(20);
                    U.read(Ie, { at: 0 }), O.affirmDbHeader(Ie);
                  }
                  U.write(new Uint8Array([1, 1]), { at: N + 18 });
                } catch (Ie) {
                  throw (this.setAssociatedPath(U, '', 0), Ie);
                }
                return this.setAssociatedPath(U, z, w.SQLITE_OPEN_MAIN_DB), Y;
              }
              importDb(z, R) {
                if (R instanceof ArrayBuffer) R = new Uint8Array(R);
                else if (R instanceof Function)
                  return this.importDbChunked(z, R);
                const U =
                    Te(this, at).get(z) ||
                    this.nextAvailableSAH() ||
                    d('No available handles to import to.'),
                  Y = R.byteLength;
                (Y < 512 || Y % 512 != 0) &&
                  d('Byte array size is invalid for an SQLite db.');
                const ae = 'SQLite format 3';
                for (let Ie = 0; Ie < ae.length; ++Ie)
                  ae.charCodeAt(Ie) !== R[Ie] &&
                    d('Input does not contain an SQLite database header.');
                const xe = U.write(R, { at: N });
                return (
                  xe != Y
                    ? (this.setAssociatedPath(U, '', 0),
                      d(
                        'Expected to write ' +
                          Y +
                          ' bytes but wrote ' +
                          xe +
                          '.',
                      ))
                    : (U.write(new Uint8Array([1, 1]), { at: N + 18 }),
                      this.setAssociatedPath(U, z, w.SQLITE_OPEN_MAIN_DB)),
                  xe
                );
              }
            }
            (Re = new WeakMap()),
              (Le = new WeakMap()),
              (Ve = new WeakMap()),
              (Ge = new WeakMap()),
              (at = new WeakMap()),
              (lt = new WeakMap()),
              (Kt = new WeakMap()),
              (xt = new WeakMap()),
              (ee = new WeakMap()),
              (fe = new WeakMap()),
              (me = new WeakMap()),
              (ke = new WeakSet()),
              (Lu = function (z, ...R) {
                Te(this, me) > z && _e[z](this.vfsName + ':', ...R);
              });
            class Ce {
              constructor(z) {
                vn(this, Ee);
                nr(this, Ee, z), (this.vfsName = z.vfsName);
              }
              async addCapacity(z) {
                return Te(this, Ee).addCapacity(z);
              }
              async reduceCapacity(z) {
                return Te(this, Ee).reduceCapacity(z);
              }
              getCapacity() {
                return Te(this, Ee).getCapacity(Te(this, Ee));
              }
              getFileCount() {
                return Te(this, Ee).getFileCount();
              }
              getFileNames() {
                return Te(this, Ee).getFileNames();
              }
              async reserveMinimumCapacity(z) {
                const R = Te(this, Ee).getCapacity();
                return R < z ? Te(this, Ee).addCapacity(z - R) : R;
              }
              exportFile(z) {
                return Te(this, Ee).exportFile(z);
              }
              importDb(z, R) {
                return Te(this, Ee).importDb(z, R);
              }
              async wipeFiles() {
                return Te(this, Ee).reset(!0);
              }
              unlink(z) {
                return Te(this, Ee).deletePath(z);
              }
              async removeVfs() {
                return Te(this, Ee).removeVfs();
              }
            }
            Ee = new WeakMap();
            const ze = async () => {
              const ge = await navigator.storage.getDirectory(),
                z = '.opfs-sahpool-sync-check-' + Z(),
                Y = (
                  await (
                    await ge.getFileHandle(z, { create: !0 })
                  ).createSyncAccessHandle()
                ).close();
              return (
                await Y,
                await ge.removeEntry(z),
                Y != null &&
                  Y.then &&
                  d(
                    'The local OPFS API is too old for opfs-sahpool:',
                    'it has an async FileSystemSyncAccessHandle.close() method.',
                  ),
                !0
              );
            };
            a.installOpfsSAHPoolVfs = async function (
              ge = Object.create(null),
            ) {
              var R;
              const z = ge.name || ce.name;
              return p[z]
                ? p[z]
                : !globalThis.FileSystemHandle ||
                    !globalThis.FileSystemDirectoryHandle ||
                    !globalThis.FileSystemFileHandle ||
                    !globalThis.FileSystemFileHandle.prototype
                      .createSyncAccessHandle ||
                    !(
                      (R = navigator == null ? void 0 : navigator.storage) !=
                        null && R.getDirectory
                    )
                  ? (p[z] = Promise.reject(
                      new Error('Missing required OPFS APIs.'),
                    ))
                  : (p[z] = ze()
                      .then(async function () {
                        if (ge.$testThrowInInit) throw ge.$testThrowInInit;
                        const U = new be(ge);
                        return U.isReady
                          .then(async () => {
                            const Y = new Ce(U);
                            if (a.oo1) {
                              const ae = a.oo1,
                                xe = U.getVfs(),
                                Ie = function (...We) {
                                  const Je = ae.DB.dbCtorHelper.normalizeArgs(
                                    ...We,
                                  );
                                  (Je.vfs = xe.$zName),
                                    ae.DB.dbCtorHelper.call(this, Je);
                                };
                              (Ie.prototype = Object.create(ae.DB.prototype)),
                                (Y.OpfsSAHPoolDb = Ie),
                                ae.DB.dbCtorHelper.setVfsPostOpenSql(
                                  xe.pointer,
                                  function (We, Je) {
                                    Je.capi.sqlite3_exec(
                                      We,
                                      [
                                        'pragma journal_mode=DELETE;',
                                        'pragma cache_size=-16384;',
                                      ],
                                      0,
                                      0,
                                      0,
                                    );
                                  },
                                );
                            }
                            return U.log('VFS initialized.'), Y;
                          })
                          .catch(async (Y) => {
                            throw (await U.removeVfs().catch(() => {}), Y);
                          });
                      })
                      .catch((U) => (p[z] = Promise.reject(U))));
            };
          }),
          typeof u < 'u')
        ) {
          const a = Object.assign(
            Object.create(null),
            {
              exports: typeof wasmExports > 'u' ? u.asm : wasmExports,
              memory: u.wasmMemory,
            },
            globalThis.sqlite3ApiConfig || {},
          );
          globalThis.sqlite3ApiConfig = a;
          let d;
          try {
            d = globalThis.sqlite3ApiBootstrap();
          } catch (f) {
            throw (console.error('sqlite3ApiBootstrap() error:', f), f);
          } finally {
            delete globalThis.sqlite3ApiBootstrap,
              delete globalThis.sqlite3ApiConfig;
          }
          u.sqlite3 = d;
        } else
          console.warn(
            'This is not running in an Emscripten module context, so',
            'globalThis.sqlite3ApiBootstrap() is _not_ being called due to lack',
            'of config info for the WASM environment.',
            'It must be called manually.',
          );
      }),
      r.ready
    );
  };
})();
const WD = (function () {
  var r, n;
  const e = nx;
  if (!e)
    throw new Error(
      'Expecting globalThis.sqlite3InitModule to be defined by the Emscripten build.',
    );
  const t = (globalThis.sqlite3InitModuleState = Object.assign(
    Object.create(null),
    {
      moduleScript:
        (r = globalThis == null ? void 0 : globalThis.document) == null
          ? void 0
          : r.currentScript,
      isWorker: typeof WorkerGlobalScope < 'u',
      location: globalThis.location,
      urlParams:
        (n = globalThis == null ? void 0 : globalThis.location) != null &&
        n.href
          ? new URL(globalThis.location.href).searchParams
          : new URLSearchParams(),
    },
  ));
  if (
    ((t.debugModule = t.urlParams.has('sqlite3.debugModule')
      ? (...i) => console.warn('sqlite3.debugModule:', ...i)
      : () => {}),
    t.urlParams.has('sqlite3.dir'))
  )
    t.sqlite3Dir = t.urlParams.get('sqlite3.dir') + '/';
  else if (t.moduleScript) {
    const i = t.moduleScript.src.split('/');
    i.pop(), (t.sqlite3Dir = i.join('/') + '/');
  }
  if (
    ((globalThis.sqlite3InitModule = function i(...o) {
      return e(...o)
        .then((s) => {
          const l = s.sqlite3;
          (l.scriptInfo = t), i.__isUnderTest && (l.__isUnderTest = !0);
          const c = l.asyncPostInit;
          return delete l.asyncPostInit, c();
        })
        .catch((s) => {
          throw (console.error('Exception loading sqlite3 module:', s), s);
        });
    }),
    (globalThis.sqlite3InitModule.ready = e.ready),
    globalThis.sqlite3InitModuleState.moduleScript)
  ) {
    const i = globalThis.sqlite3InitModuleState;
    let o = i.moduleScript.src.split('/');
    o.pop(), (i.scriptDir = o.join('/') + '/');
  }
  return (
    t.debugModule('sqlite3InitModuleState =', t), globalThis.sqlite3InitModule
  );
})();
nx = WD;
globalThis.sqlite3Worker1Promiser = function e(t = e.defaultConfig) {
  if (arguments.length === 1 && typeof arguments[0] == 'function') {
    const m = t;
    (t = Object.assign(Object.create(null), e.defaultConfig)), (t.onready = m);
  } else t = Object.assign(Object.create(null), e.defaultConfig, t);
  const r = Object.create(null),
    n = function () {},
    i = t.onerror || n,
    o = t.debug || n,
    s = t.generateMessageId ? void 0 : Object.create(null),
    l =
      t.generateMessageId ||
      function (m) {
        return m.type + '#' + (s[m.type] = (s[m.type] || 0) + 1);
      },
    c = (...m) => {
      throw new Error(m.join(' '));
    };
  t.worker || (t.worker = e.defaultConfig.worker),
    typeof t.worker == 'function' && (t.worker = t.worker());
  let h, y;
  return (
    (t.worker.onmessage = function (m) {
      (m = m.data), o('worker1.onmessage', m);
      let x = r[m.messageId];
      if (!x) {
        if (m && m.type === 'sqlite3-api' && m.result === 'worker1-ready') {
          t.onready && t.onready(y);
          return;
        }
        if (((x = r[m.type]), x && x.onrow)) {
          x.onrow(m);
          return;
        }
        t.onunhandled
          ? t.onunhandled(arguments[0])
          : i('sqlite3Worker1Promiser() unhandled worker message:', m);
        return;
      }
      switch ((delete r[m.messageId], m.type)) {
        case 'error':
          x.reject(m);
          return;
        case 'open':
          h || (h = m.dbId);
          break;
        case 'close':
          m.dbId === h && (h = void 0);
          break;
      }
      try {
        x.resolve(m);
      } catch (I) {
        x.reject(I);
      }
    }),
    (y = function () {
      let m;
      arguments.length === 1
        ? (m = arguments[0])
        : arguments.length === 2
          ? ((m = Object.create(null)),
            (m.type = arguments[0]),
            (m.args = arguments[1]),
            (m.dbId = m.args.dbId))
          : c(
              'Invalid arguments for sqlite3Worker1Promiser()-created factory.',
            ),
        !m.dbId && m.type !== 'open' && (m.dbId = h),
        (m.messageId = l(m)),
        (m.departureTime = performance.now());
      const x = Object.create(null);
      x.message = m;
      let I;
      m.type === 'exec' &&
        m.args &&
        (typeof m.args.callback == 'function'
          ? ((I = m.messageId + ':row'),
            (x.onrow = m.args.callback),
            (m.args.callback = I),
            (r[I] = x))
          : typeof m.args.callback == 'string' &&
            c(
              'exec callback may not be a string when using the Promise interface.',
            ));
      let $ = new Promise(function (j, G) {
        (x.resolve = j),
          (x.reject = G),
          (r[m.messageId] = x),
          o(
            'Posting',
            m.type,
            'message to Worker dbId=' + (h || 'default') + ':',
            m,
          ),
          t.worker.postMessage(m);
      });
      return I && ($ = $.finally(() => delete r[I])), $;
    })
  );
};
globalThis.sqlite3Worker1Promiser.defaultConfig = {
  worker: function () {
    return new Worker(
      new URL(
        '/assets/sqlite3-worker1-bundler-friendly-C0USlvNK.js',
        import.meta.url,
      ),
      { type: 'module' },
    );
  },
  onerror: (...e) => console.error('worker1 promiser error', ...e),
};
sqlite3Worker1Promiser.v2 = function (e) {
  let t;
  typeof e == 'function'
    ? ((t = e), (e = {}))
    : typeof (e == null ? void 0 : e.onready) == 'function' &&
      ((t = e.onready), delete e.onready);
  const r = Object.create(null);
  e = Object.assign(e || Object.create(null), {
    onready: async function (i) {
      try {
        t && (await t(i)), r.resolve(i);
      } catch (o) {
        r.reject(o);
      }
    },
  });
  const n = new Promise(function (i, o) {
    (r.resolve = i), (r.reject = o);
  });
  try {
    this.original(e);
  } catch (i) {
    r.reject(i);
  }
  return n;
}.bind({ original: sqlite3Worker1Promiser });
sqlite3Worker1Promiser.v2;
const UD = self.sqlite3Worker1Promiser;
var HD = Object.defineProperty,
  QD = (e, t, r) =>
    t in e
      ? HD(e, t, { enumerable: !0, configurable: !0, writable: !0, value: r })
      : (e[t] = r),
  Qs = (e, t, r) => QD(e, typeof t != 'symbol' ? t + '' : t, r);
class GD {
  constructor(t, r = {}) {
    Qs(this, 'dbPromise', null),
      Qs(this, 'dbId', null),
      Qs(this, 'debug'),
      Qs(this, 'isMigrationActive'),
      Qs(this, 'migrations', []),
      (this.dbName = t),
      (this.debug = r.debug ?? !1),
      (this.isMigrationActive = r.isMigrationActive ?? !0),
      this.isMigrationActive &&
        this.addMigrations([
          {
            version: 1,
            up: async (n) => {
              await n.execute(`
              CREATE TABLE IF NOT EXISTS migrations (
                version INTEGER PRIMARY KEY,
                applied_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
              )
            `);
            },
          },
        ]);
  }
  log(...t) {
    this.debug && console.log(...t);
  }
  async init() {
    this.dbPromise ||
      ((this.dbPromise = new Promise(async (t, r) => {
        try {
          this.log('Loading and initializing SQLite3 module...');
          const n = await new Promise((o) => {
            const s = UD({ onready: () => o(s) });
          });
          this.log('Done initializing. Opening database...');
          let i;
          try {
            (i = await n('open', {
              filename: `file:${this.dbName}.sqlite3?vfs=opfs`,
            })),
              this.log('OPFS database opened:', i.result.filename);
          } catch (o) {
            console.warn(
              'OPFS is not available, falling back to in-memory database:',
              o,
            ),
              (i = await n('open', { filename: ':memory:' })),
              this.log('In-memory database opened');
          }
          (this.dbId = i.result.dbId),
            this.log('Database initialized successfully'),
            t(n);
        } catch (n) {
          console.error('Failed to initialize database:', n), r(n);
        }
      })),
      this.isMigrationActive &&
        (await this.createMigrationTable(), await this.runMigrations()));
  }
  async getPromiser() {
    if (!this.dbPromise)
      throw new Error('Database not initialized. Call init() first.');
    return this.dbPromise;
  }
  async execute(t, r = []) {
    try {
      return await (await this.getPromiser())('exec', {
        sql: t,
        bind: r,
        dbId: this.dbId,
      });
    } catch (n) {
      throw (console.error('Error executing SQL:', n), n);
    }
  }
  async query(t, r = []) {
    const n = await (await this.getPromiser())('exec', {
      sql: t,
      bind: r,
      rowMode: 'object',
      dbId: this.dbId,
    });
    return console.log({ result: n }), n.result.resultRows || [];
  }
  async close() {
    this.dbId &&
      (await (await this.getPromiser())('close', { dbId: this.dbId }),
      (this.dbId = null),
      (this.dbPromise = null));
  }
  addMigrations(t) {
    this.migrations.push(...t),
      this.migrations.sort((r, n) => r.version - n.version);
  }
  async createMigrationTable() {
    await this.execute(`
      CREATE TABLE IF NOT EXISTS migrations (
        version INTEGER PRIMARY KEY,
        applied_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
      )
    `);
  }
  async getCurrentVersion() {
    var t;
    return (
      ((await this.query('SELECT name FROM sqlite_master WHERE type=table'))
        .map((r) => r.name)
        .includes('migrations') &&
        ((t = (
          await this.query('SELECT MAX(version) as version FROM migrations')
        )[0]) == null
          ? void 0
          : t.version)) ||
      0
    );
  }
  async runMigrations() {
    const t = await this.getCurrentVersion(),
      r = this.migrations.filter((n) => n.version > t);
    for (const n of r)
      this.log(`Running migration to version ${n.version}`),
        console.log('this:', this),
        await n.up(this),
        await this.execute('INSERT INTO migrations (version) VALUES (?)', [
          n.version,
        ]),
        this.log(`Migration to version ${n.version} completed`);
  }
}
let kr = null;
async function KD() {
  (kr = new GD('todo2', { debug: !0 })),
    await kr.init(),
    await XD(kr),
    await YD(kr);
}
async function XD(e) {
  await e.execute(`
      CREATE TABLE IF NOT EXISTS todos (
        id INTEGER PRIMARY KEY AUTOINCREMENT,
        text TEXT NOT NULL,
        completed BOOLEAN NOT NULL DEFAULT 0
      )
    `);
}
async function YD(e) {
  try {
    const t = await e.query('PRAGMA table_info(todos)');
    console.log({ rows: t }),
      t.some((n) => n.name === 'deleted')
        ? console.log('Migration not needed: deleted column already exists')
        : (await e.execute(
            'ALTER TABLE todos ADD COLUMN deleted BOOLEAN NOT NULL DEFAULT 0',
          ),
          console.log(
            'Migration completed: Added deleted column to todos table',
          ));
  } catch (t) {
    throw (console.error('Migration failed:', t), t);
  }
}
async function JD(e) {
  try {
    await kr.execute('INSERT INTO todos (text) VALUES (?)', [e]),
      console.log('Todo added successfully');
  } catch (t) {
    console.error('Failed to add todo:', t);
  }
}
async function ZD() {
  console.log({ db: kr });
  const e = await kr.query(
    'SELECT * FROM todos WHERE deleted = 0 ORDER BY id DESC',
  );
  return console.log({ rows: e }), e || [];
}
async function e5(e) {
  const t = await kr.execute(
    'UPDATE todos SET completed = NOT completed WHERE id = ?',
    [e],
  );
  console.log({ result: t });
}
async function t5(e, t) {
  try {
    const r = await kr.execute('UPDATE todos SET text = ? WHERE id = ?', [
      t,
      e,
    ]);
    console.log({ result: r }), console.log('Todo updated successfully');
  } catch (r) {
    throw (console.error('Failed to update todo:', r), r);
  }
}
async function n5(e) {
  try {
    const t = await kr.execute('UPDATE todos SET deleted = 1 WHERE id = ?', [
      e,
    ]);
    console.log({ result: t }),
      console.log('Todo marked as deleted successfully');
  } catch (t) {
    throw (console.error('Failed to mark todo as deleted:', t), t);
  }
}
function r5({ onAdd: e }) {
  const [t, r] = K.useState(''),
    n = async (i) => {
      i.preventDefault(), t.trim() && (await JD(t), r(''), e());
    };
  return te.jsx('form', {
    onSubmit: n,
    children: te.jsxs(Sg, {
      children: [
        te.jsx(pf, {
          value: t,
          onChange: (i) => r(i.target.value),
          placeholder: 'Add a new todo',
        }),
        te.jsx(Yo, { type: 'submit', colorScheme: 'blue', children: 'Add' }),
      ],
    }),
  });
}
function i5({ todos: e, onToggle: t, onUpdate: r, onDelete: n }) {
  const [i, o] = K.useState(null),
    [s, l] = K.useState(''),
    c = async (x) => {
      await e5(x), t();
    },
    h = (x) => {
      o(x.id), l(x.text);
    },
    y = async (x) => {
      try {
        await t5(x, s), o(null), r();
      } catch (I) {
        console.error('Failed to update todo:', I);
      }
    },
    m = async (x) => {
      try {
        await n5(x), n();
      } catch (I) {
        console.error('Failed to delete todo:', I);
      }
    };
  return e
    ? te.jsx(wg, {
        align: 'stretch',
        spacing: 4,
        width: '100%',
        children: e.map((x) =>
          te.jsxs(
            Sg,
            {
              p: 2,
              bg: 'gray.100',
              borderRadius: 'md',
              children: [
                te.jsx(YS, {
                  isChecked: x.completed === 1,
                  onChange: () => c(x.id),
                }),
                i === x.id
                  ? te.jsxs(te.Fragment, {
                      children: [
                        te.jsx(pf, {
                          value: s,
                          onChange: (I) => l(I.target.value),
                        }),
                        te.jsx(Yo, {
                          onClick: () => y(x.id),
                          children: 'Save',
                        }),
                        te.jsx(Yo, {
                          onClick: () => o(null),
                          children: 'Cancel',
                        }),
                      ],
                    })
                  : te.jsxs(te.Fragment, {
                      children: [
                        te.jsx(JS, {
                          flex: 1,
                          textDecoration:
                            x.completed === 1 ? 'line-through' : 'none',
                          children: x.text,
                        }),
                        te.jsx(Yo, { onClick: () => h(x), children: 'Edit' }),
                        te.jsx(Yo, {
                          onClick: () => m(x.id),
                          colorScheme: 'red',
                          children: 'Delete',
                        }),
                      ],
                    }),
              ],
            },
            x.id,
          ),
        ),
      })
    : te.jsx(df, {});
}
function o5() {
  const [e, t] = K.useState(!1),
    [r, n] = K.useState(null),
    [i, o] = K.useState([]),
    s = K.useCallback(async () => {
      try {
        const c = await ZD();
        o(c);
      } catch (c) {
        console.error('Failed to fetch todos:', c),
          n(
            'Failed to fetch todos. Please check the console for more details.',
          );
      }
    }, []);
  K.useEffect(() => {
    KD()
      .then(() => {
        t(!0), s();
      })
      .catch((c) => {
        console.error('Database initialization failed:', c),
          n(
            'Failed to initialize the database. Please check the console for more details.',
          );
      });
  }, [s]);
  const l = K.useCallback(() => {
    s();
  }, [s]);
  return r
    ? te.jsx(Ea, { color: 'red.500', children: r })
    : e
      ? te.jsx(oD, {
          children: te.jsx(Ea, {
            maxWidth: '800px',
            margin: 'auto',
            mt: 8,
            children: te.jsxs(wg, {
              spacing: 8,
              children: [
                te.jsx(ex, { children: 'TODO App' }),
                te.jsx(r5, { onAdd: l }),
                te.jsx(i5, { todos: i, onToggle: s, onUpdate: s, onDelete: s }),
              ],
            }),
          }),
        })
      : te.jsx(Ea, { children: 'Loading...' });
}
y1(document.getElementById('root')).render(
  te.jsx(K.StrictMode, { children: te.jsx(o5, {}) }),
);
